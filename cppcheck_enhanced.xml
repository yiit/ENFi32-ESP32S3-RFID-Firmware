<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.18.0"/>
    <errors>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C001.cpp">
            <location file="src/_C001.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;ChecksumType&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;ChecksumType&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/ChecksumType.h" line="12" column="3"/>
            <symbol>ChecksumType</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;timer_id_couple&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;timer_id_couple&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/timer_id_couple.h" line="14" column="3"/>
            <symbol>timer_id_couple</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;GpioFactorySettingsStruct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;GpioFactorySettingsStruct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/GpioFactorySettingsStruct.h" line="11" column="3"/>
            <symbol>GpioFactorySettingsStruct</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;ResetFactoryDefaultPreference_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;ResetFactoryDefaultPreference_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/FactoryDefaultPref.h" line="16" column="3"/>
            <symbol>ResetFactoryDefaultPreference_struct</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;FormSelectorOptions&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;FormSelectorOptions&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataTypes/FormSelectorOptions.h" line="11" column="3"/>
            <symbol>FormSelectorOptions</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;MAC_address&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;MAC_address&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/MAC_address.h" line="12" column="3"/>
            <symbol>MAC_address</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SimpleQueueElement_formatted_Strings&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SimpleQueueElement_formatted_Strings&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.h" line="25" column="3"/>
            <symbol>SimpleQueueElement_formatted_Strings</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;I2Cdata &lt; unsigned char &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;I2Cdata &lt; unsigned char &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/I2CTypes.h" line="13" column="3"/>
            <symbol>I2Cdata &lt; unsigned char &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;I2Cdata &lt; unsigned short &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;I2Cdata &lt; unsigned short &gt;&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C001.cpp">
            <location file="src/src/DataStructs/I2CTypes.h" line="13" column="3"/>
            <symbol>I2Cdata &lt; unsigned short &gt;</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/MQTT_queue_element.h" line="38" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="19" column="37" info="Virtual function in base class"/>
            <symbol>getSize</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/MQTT_queue_element.h" line="40" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="21" column="37" info="Virtual function in base class"/>
            <symbol>isDuplicate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/MQTT_queue_element.h" line="42" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="23" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/MQTT_queue_element.h" line="46" column="23" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="24" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_string_only.h" line="26" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="19" column="37" info="Virtual function in base class"/>
            <symbol>getSize</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_string_only.h" line="28" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="21" column="37" info="Virtual function in base class"/>
            <symbol>isDuplicate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_string_only.h" line="30" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="23" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_string_only.h" line="34" column="23" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="24" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getSize&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.h" line="42" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="19" column="37" info="Virtual function in base class"/>
            <symbol>getSize</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;isDuplicate&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.h" line="44" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="21" column="37" info="Virtual function in base class"/>
            <symbol>isDuplicate</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.h" line="46" column="29" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="23" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;getUnitMessageCount&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/_C001.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.h" line="50" column="23" info="Function in derived class"/>
            <location file="src/src/ControllerQueue/Queue_element_base.h" line="24" column="37" info="Virtual function in base class"/>
            <symbol>getUnitMessageCount</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;timestamp&apos; can be declared as reference to const" verbose="Parameter &apos;timestamp&apos; can be declared as reference to const" cwe="398" file0="src/_C001.cpp">
            <location file="src/src/Helpers/ESPEasy_time_calc.h" line="46" column="42" info="Parameter &apos;timestamp&apos; can be declared as reference to const"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;timestamp&apos; can be declared as reference to const" verbose="Parameter &apos;timestamp&apos; can be declared as reference to const" cwe="398" file0="src/_C001.cpp">
            <location file="src/src/Helpers/ESPEasy_time_calc.h" line="59" column="47" info="Parameter &apos;timestamp&apos; can be declared as reference to const"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;maxStatesesp32&apos; is assigned a value that is never used." verbose="Variable &apos;maxStatesesp32&apos; is assigned a value that is never used." cwe="563" file0="src/_C001.cpp">
            <location file="src/src/DataStructs_templ/SettingsStruct.cpp" line="806" column="17"/>
            <symbol>maxStatesesp32</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C002.cpp">
            <location file="src/_C002.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C003.cpp">
            <location file="src/_C003.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C004.cpp">
            <location file="src/_C004.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C005.cpp">
            <location file="src/_C005.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C006.cpp">
            <location file="src/_C006.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C007.cpp">
            <location file="src/_C007.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C008.cpp">
            <location file="src/_C008.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C009.cpp">
            <location file="src/_C009.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;timestamp&apos; can be declared as reference to const" verbose="Parameter &apos;timestamp&apos; can be declared as reference to const" cwe="398" file0="src/_C009.cpp">
            <location file="src/src/Helpers/ESPEasy_time_calc.h" line="47" column="42" info="Parameter &apos;timestamp&apos; can be declared as reference to const"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;timestamp&apos; can be declared as reference to const" verbose="Parameter &apos;timestamp&apos; can be declared as reference to const" cwe="398" file0="src/_C009.cpp">
            <location file="src/src/Helpers/ESPEasy_time_calc.h" line="60" column="47" info="Parameter &apos;timestamp&apos; can be declared as reference to const"/>
            <symbol>timestamp</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C010.cpp">
            <location file="src/_C010.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C011.cpp">
            <location file="src/_C011.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C012.cpp">
            <location file="src/_C012.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C013.cpp">
            <location file="src/_C013.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;ShortChecksumType&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;ShortChecksumType&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/_C013.cpp">
            <location file="src/src/DataStructs/ShortChecksumType.h" line="13" column="3"/>
            <symbol>ShortChecksumType</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/_C013.cpp">
            <location file="src/_C013.cpp" line="222" column="39" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C014.cpp">
            <location file="src/_C014.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C015.cpp">
            <location file="src/_C015.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C016.cpp">
            <location file="src/_C016.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C017.cpp">
            <location file="src/_C017.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_C018.cpp">
            <location file="src/_C018.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/_Plugin_Helper.cpp">
            <location file="src/_Plugin_Helper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/custom/custom.cpp">
            <location file="src/custom/custom.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ui&apos; can be declared as pointer to const" verbose="Parameter &apos;ui&apos; can be declared as pointer to const" cwe="398" file0="src/custom/custom.cpp">
            <location file="src/custom/custom.cpp" line="369" column="25" info="Parameter &apos;ui&apos; can be declared as pointer to const"/>
            <symbol>ui</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ui&apos; can be declared as pointer to const" verbose="Parameter &apos;ui&apos; can be declared as pointer to const" cwe="398" file0="src/generated/events_init.c">
            <location file="src/generated/events_init.c" line="46" column="25" info="Parameter &apos;ui&apos; can be declared as pointer to const"/>
            <symbol>ui</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ui&apos; can be declared as pointer to const" verbose="Parameter &apos;ui&apos; can be declared as pointer to const" cwe="398" file0="src/generated/gui_guider.c">
            <location file="src/generated/gui_guider.c" line="93" column="24" info="Parameter &apos;ui&apos; can be declared as pointer to const"/>
            <symbol>ui</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;ui&apos; can be declared as pointer to const" verbose="Parameter &apos;ui&apos; can be declared as pointer to const" cwe="398" file0="src/generated/gui_guider.c">
            <location file="src/generated/gui_guider.c" line="98" column="27" info="Parameter &apos;ui&apos; can be declared as pointer to const"/>
            <symbol>ui</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;e&apos; can be declared as pointer to const" verbose="Parameter &apos;e&apos; can be declared as pointer to const" cwe="398" file0="src/generated/widgets_init.c">
            <location file="src/generated/widgets_init.c" line="25" column="55" info="Parameter &apos;e&apos; can be declared as pointer to const"/>
            <symbol>e</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="src/main.cpp">
            <location file="src/src/DataTypes/WiFiConnectionProtocol.h" line="6" column="1"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Controller.cpp">
            <location file="src/src/Commands/Controller.cpp" line="18" column="45" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Diagnostic.cpp">
            <location file="src/src/Commands/Diagnostic.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;I2Cdata&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;I2Cdata&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Commands/Diagnostic.cpp">
            <location file="src/src/DataStructs/I2CTypes.h" line="13" column="3"/>
            <symbol>I2Cdata</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Diagnostic.cpp">
            <location file="src/src/Commands/Diagnostic.cpp" line="156" column="45" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/ExecuteCommand.cpp">
            <location file="src/src/Commands/ExecuteCommand.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/GPIO.cpp">
            <location file="src/src/Commands/GPIO.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/GPIO.cpp">
            <location file="src/src/Commands/GPIO.cpp" line="370" column="67" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/GPIO.cpp">
            <location file="src/src/Commands/GPIO.cpp" line="392" column="68" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/GPIO.cpp">
            <location file="src/src/Commands/GPIO.cpp" line="777" column="94" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/HTTP.cpp">
            <location file="src/src/Commands/HTTP.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/HTTP.cpp">
            <location file="src/src/Commands/HTTP.cpp" line="21" column="70" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/InternalCommands.cpp">
            <location file="src/src/Commands/InternalCommands.cpp" line="0" column="0"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;cmd_lc&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;cmd_lc&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/src/Commands/InternalCommands.cpp">
            <location file="src/src/Commands/InternalCommands.cpp" line="135" column="3"/>
            <symbol>cmd_lc</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;haystack!=nullptr&apos; is always true" verbose="Condition &apos;haystack!=nullptr&apos; is always true" cwe="571" file0="src/src/Commands/InternalCommands_decoder.cpp">
            <location file="src/src/Commands/InternalCommands_decoder.cpp" line="393" column="16" info="Condition &apos;haystack!=nullptr&apos; is always true"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/MQTT.cpp">
            <location file="src/src/Commands/MQTT.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/MQTT.cpp">
            <location file="src/src/Commands/MQTT.cpp" line="100" column="72" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Networks.cpp">
            <location file="src/src/Commands/Networks.cpp" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;output&apos; can be reduced." verbose="The scope of the variable &apos;output&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/Commands/OneWire.cpp">
            <location file="src/src/Commands/OneWire.cpp" line="13" column="45"/>
            <symbol>output</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/RTC.cpp">
            <location file="src/src/Commands/RTC.cpp" line="15" column="67" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/RTC.cpp">
            <location file="src/src/Commands/RTC.cpp" line="21" column="84" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Commands/Rules.cpp" line="0" column="0"/>
        </error>
        <error id="pointerOutOfBounds" severity="portability" msg="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." verbose="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." cwe="758" file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Helpers/Rules_calculate.h" line="70" column="50" info="Pointer arithmetic overflow"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Commands/Rules.cpp" line="38" column="31"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;result&apos; can be reduced." verbose="The scope of the variable &apos;result&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Commands/Rules.cpp" line="113" column="28"/>
            <symbol>result</symbol>
        </error>
        <error id="shadowArgument" severity="style" msg="Local variable &apos;event&apos; shadows outer argument" verbose="Local variable &apos;event&apos; shadows outer argument" cwe="398" file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Commands/Rules.cpp" line="28" column="12" info="Shadow variable"/>
            <location file="src/src/Commands/Rules.cpp" line="23" column="71" info="Shadowed declaration"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Rules.cpp">
            <location file="src/src/Commands/Rules.cpp" line="53" column="70" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Settings.cpp">
            <location file="src/src/Commands/Settings.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Settings.cpp">
            <location file="src/src/Commands/Settings.cpp" line="78" column="71" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Settings.cpp">
            <location file="src/src/Commands/Settings.cpp" line="84" column="71" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Settings.cpp">
            <location file="src/src/Commands/Settings.cpp" line="107" column="79" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/System.cpp">
            <location file="src/src/Commands/System.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/System.cpp">
            <location file="src/src/Commands/System.cpp" line="15" column="72" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/System.cpp">
            <location file="src/src/Commands/System.cpp" line="23" column="74" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/System.cpp">
            <location file="src/src/Commands/System.cpp" line="42" column="76" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/System.cpp">
            <location file="src/src/Commands/System.cpp" line="51" column="85" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;msecFromNow&apos; can be reduced." verbose="The scope of the variable &apos;msecFromNow&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="394" column="12"/>
            <symbol>msecFromNow</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="25" column="44" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="170" column="71" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmpTaskIndex&apos; is assigned a value that is never used." verbose="Variable &apos;tmpTaskIndex&apos; is assigned a value that is never used." cwe="563" file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="63" column="30"/>
            <symbol>tmpTaskIndex</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmpTaskIndex&apos; is assigned a value that is never used." verbose="Variable &apos;tmpTaskIndex&apos; is assigned a value that is never used." cwe="563" file0="src/src/Commands/Tasks.cpp">
            <location file="src/src/Commands/Tasks.cpp" line="83" column="30"/>
            <symbol>tmpTaskIndex</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/Time.cpp">
            <location file="src/src/Commands/Time.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="35" column="67" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="44" column="71" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="53" column="73" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="67" column="76" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="81" column="79" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="95" column="82" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="109" column="69" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="120" column="70" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/Timer.cpp">
            <location file="src/src/Commands/Timer.cpp" line="131" column="63" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/UDP.cpp">
            <location file="src/src/Commands/UDP.cpp" line="0" column="0"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Commands/UDP.cpp">
            <location file="src/src/Commands/UDP.cpp" line="20" column="31"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Commands/UDP.cpp">
            <location file="src/src/Commands/UDP.cpp" line="26" column="65" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Commands/i2c.cpp">
            <location file="src/src/Commands/i2c.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ControllerQueue/ControllerDelayHandlerStruct.cpp">
            <location file="src/src/ControllerQueue/ControllerDelayHandlerStruct.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ControllerQueue/DelayQueueElements.cpp">
            <location file="src/src/ControllerQueue/DelayQueueElements.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.cpp">
            <location file="src/src/ControllerQueue/SimpleQueueElement_formatted_Strings.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Controller_config/C018_config.cpp">
            <location file="src/src/Controller_config/C018_config.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Controller_struct/C018_data_struct.cpp">
            <location file="src/src/Controller_struct/C018_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;sourceNode&apos; can be declared as pointer to const" verbose="Variable &apos;sourceNode&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/C013_p2p_SensorDataStruct.cpp">
            <location file="src/src/DataStructs/C013_p2p_SensorDataStruct.cpp" line="67" column="15" info="Variable &apos;sourceNode&apos; can be declared as pointer to const"/>
            <symbol>sourceNode</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/C013_p2p_SensorInfoStruct.cpp">
            <location file="src/src/DataStructs/C013_p2p_SensorInfoStruct.cpp" line="0" column="0"/>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;sourceNode&apos; can be declared as pointer to const" verbose="Variable &apos;sourceNode&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/C013_p2p_SensorInfoStruct.cpp">
            <location file="src/src/DataStructs/C013_p2p_SensorInfoStruct.cpp" line="127" column="17" info="Variable &apos;sourceNode&apos; can be declared as pointer to const"/>
            <symbol>sourceNode</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/Caches.cpp">
            <location file="src/src/DataStructs/Caches.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;WiFi_AP_Candidate&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;WiFi_AP_Candidate&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/DataStructs/Caches.cpp">
            <location file="src/src/DataStructs/WiFi_AP_Candidate.h" line="21" column="3"/>
            <symbol>WiFi_AP_Candidate</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;checksum&apos; can be declared as const array" verbose="Parameter &apos;checksum&apos; can be declared as const array" cwe="398" file0="src/src/DataStructs/ChecksumType.cpp">
            <location file="src/src/DataStructs/ChecksumType.cpp" line="12" column="36" info="Parameter &apos;checksum&apos; can be declared as const array"/>
            <symbol>checksum</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/ControllerSettingsStruct.cpp">
            <location file="src/src/DataStructs/ControllerSettingsStruct.cpp" line="0" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;DeviceStruct::PinDirection_allBits&apos; is not initialized in the constructor." verbose="Member variable &apos;DeviceStruct::PinDirection_allBits&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/DeviceStruct.cpp">
            <location file="src/src/DataStructs/DeviceStruct.cpp" line="5" column="15"/>
            <symbol>DeviceStruct::PinDirection_allBits</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;DeviceStruct::Pin1Direction&apos; is not initialized in the constructor." verbose="Member variable &apos;DeviceStruct::Pin1Direction&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/DeviceStruct.cpp">
            <location file="src/src/DataStructs/DeviceStruct.cpp" line="5" column="15"/>
            <symbol>DeviceStruct::Pin1Direction</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;DeviceStruct::Pin2Direction&apos; is not initialized in the constructor." verbose="Member variable &apos;DeviceStruct::Pin2Direction&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/DeviceStruct.cpp">
            <location file="src/src/DataStructs/DeviceStruct.cpp" line="5" column="15"/>
            <symbol>DeviceStruct::Pin2Direction</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;DeviceStruct::Pin3Direction&apos; is not initialized in the constructor." verbose="Member variable &apos;DeviceStruct::Pin3Direction&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/DeviceStruct.cpp">
            <location file="src/src/DataStructs/DeviceStruct.cpp" line="5" column="15"/>
            <symbol>DeviceStruct::Pin3Direction</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;DeviceStruct::PinDirection_unused&apos; is not initialized in the constructor." verbose="Member variable &apos;DeviceStruct::PinDirection_unused&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/DeviceStruct.cpp">
            <location file="src/src/DataStructs/DeviceStruct.cpp" line="5" column="15"/>
            <symbol>DeviceStruct::PinDirection_unused</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/ESPEasy_EventStruct.cpp">
            <location file="src/src/DataStructs/ESPEasy_EventStruct.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/EventQueue.cpp">
            <location file="src/src/DataStructs/EventQueue.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/FactoryDefault_LogConsoleSettings_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_LogConsoleSettings_NVS.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/FactoryDefault_Network_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_Network_NVS.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp" line="15" column="10"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_UnitName_NVS.cpp" line="23" column="25"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/FactoryDefault_WiFi_NVS.cpp">
            <location file="src/src/DataStructs/FactoryDefault_WiFi_NVS.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/Modbus.cpp">
            <location file="src/src/DataStructs/Modbus.cpp" line="0" column="0"/>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;RXavailable&apos; shadows outer variable" verbose="Local variable &apos;RXavailable&apos; shadows outer variable" cwe="398" file0="src/src/DataStructs/Modbus.cpp">
            <location file="src/src/DataStructs/Modbus.cpp" line="109" column="16" info="Shadow variable"/>
            <location file="src/src/DataStructs/Modbus.h" line="67" column="16" info="Shadowed declaration"/>
            <symbol>RXavailable</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/NTP_candidate.cpp">
            <location file="src/src/DataStructs/NTP_candidate.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/NodeStruct.cpp">
            <location file="src/src/DataStructs/NodeStruct.cpp" line="0" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;markedAsPriority!=other.markedAsPriorityPeer()&apos; is always false" verbose="Condition &apos;markedAsPriority!=other.markedAsPriorityPeer()&apos; is always false" cwe="570" file0="src/src/DataStructs/NodeStruct.cpp">
            <location file="src/src/DataStructs/NodeStruct.cpp" line="89" column="24" info="Condition &apos;markedAsPriority!=other.markedAsPriorityPeer()&apos; is always false"/>
            <location file="src/src/DataStructs/NodeStruct.cpp" line="88" column="53" info="Assignment &apos;markedAsPriority=markedAsPriorityPeer()&apos;, assigned value is 0"/>
            <location file="src/src/DataStructs/NodeStruct.cpp" line="88" column="53" info="Calling function &apos;markedAsPriorityPeer&apos; returns 0"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;string&apos; can be declared as reference to const" verbose="Parameter &apos;string&apos; can be declared as reference to const" cwe="398" file0="src/src/DataStructs/PluginTaskData_base.cpp">
            <location file="src/src/DataStructs/PluginTaskData_base.cpp" line="111" column="76" info="Parameter &apos;string&apos; can be declared as reference to const"/>
            <symbol>string</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/PluginTaskData_base.cpp">
            <location file="src/src/DataStructs/PluginTaskData_base.cpp" line="98" column="69" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/PluginTaskData_base.cpp">
            <location file="src/src/DataStructs/PluginTaskData_base.cpp" line="110" column="76" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/PluginTaskData_base.cpp">
            <location file="src/src/DataStructs/PluginTaskData_base.cpp" line="122" column="65" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesMQTT&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesMQTT&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesMQTT</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesAccount&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesAccount&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesAccount</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesPassword&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesPassword&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesPassword</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesTemplate&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesTemplate&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesTemplate</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesID&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesID&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesID</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::Custom&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::Custom&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::Custom</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesHost&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesHost&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesHost</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesPort&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesPort&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesPort</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesQueue&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesQueue&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesQueue</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesCheckReply&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesCheckReply&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesCheckReply</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesTimeout&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesTimeout&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesTimeout</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesSampleSets&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesSampleSets&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesSampleSets</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::usesExtCreds&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::usesExtCreds&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::usesExtCreds</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::needsNetwork&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::needsNetwork&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::needsNetwork</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::allowsExpire&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::allowsExpire&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::allowsExpire</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::allowLocalSystemTime&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::allowLocalSystemTime&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::allowLocalSystemTime</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dontUseBit16&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dontUseBit16&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dontUseBit16</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dontUseBit17&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dontUseBit17&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dontUseBit17</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dontUseBit18&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dontUseBit18&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dontUseBit18</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy19&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy19&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy19</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy20&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy20&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy20</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy21&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy21&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy21</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy22&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy22&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy22</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy23&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy23&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy23</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy24&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy24&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy24</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy25&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy25&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy25</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy26&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy26&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy26</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy27&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy27&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy27</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy28&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy28&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy28</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy29&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy29&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy29</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy30&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy30&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy30</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;ProtocolStruct::dummy31&apos; is not initialized in the constructor." verbose="Member variable &apos;ProtocolStruct::dummy31&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/DataStructs/ProtocolStruct.cpp">
            <location file="src/src/DataStructs/ProtocolStruct.cpp" line="3" column="17"/>
            <symbol>ProtocolStruct::dummy31</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;ConstIntervalTimerID&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;ConstIntervalTimerID&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/DataStructs/Scheduler_ConstIntervalTimerID.cpp">
            <location file="src/src/DataStructs/Scheduler_ConstIntervalTimerID.h" line="9" column="3"/>
            <symbol>ConstIntervalTimerID</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;IntendedRebootTimerID&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;IntendedRebootTimerID&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/DataStructs/Scheduler_IntendedRebootTimerID.cpp">
            <location file="src/src/DataStructs/Scheduler_IntendedRebootTimerID.h" line="9" column="3"/>
            <symbol>IntendedRebootTimerID</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;RulesTimerID&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;RulesTimerID&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/DataStructs/Scheduler_RulesTimerID.cpp">
            <location file="src/src/DataStructs/Scheduler_RulesTimerID.h" line="7" column="3"/>
            <symbol>RulesTimerID</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;TaskDeviceTimerID&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;TaskDeviceTimerID&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/DataStructs/Scheduler_TaskDeviceTimerID.cpp">
            <location file="src/src/DataStructs/Scheduler_TaskDeviceTimerID.h" line="13" column="3"/>
            <symbol>TaskDeviceTimerID</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;checksum&apos; can be declared as const array" verbose="Parameter &apos;checksum&apos; can be declared as const array" cwe="398" file0="src/src/DataStructs/ShortChecksumType.cpp">
            <location file="src/src/DataStructs/ShortChecksumType.cpp" line="22" column="46" info="Parameter &apos;checksum&apos; can be declared as const array"/>
            <symbol>checksum</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;it&apos; shadows outer variable" verbose="Local variable &apos;it&apos; shadows outer variable" cwe="398" file0="src/src/DataStructs/UserVarStruct.cpp">
            <location file="src/src/DataStructs/UserVarStruct.cpp" line="350" column="12" info="Shadow variable"/>
            <location file="src/src/DataStructs/UserVarStruct.cpp" line="332" column="8" info="Shadowed declaration"/>
            <symbol>it</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/Web_StreamingBuffer.cpp">
            <location file="src/src/DataStructs/Web_StreamingBuffer.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/DataStructs/Web_StreamingBuffer.cpp">
            <location file="src/src/DataStructs/Web_StreamingBuffer.cpp" line="118" column="28"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/WiFiEventData.cpp">
            <location file="src/src/DataStructs/WiFiEventData.cpp" line="0" column="0"/>
        </error>
        <error id="useInitializationList" severity="performance" msg="Variable &apos;ssid&apos; is assigned in constructor body. Consider performing initialization in initialization list." verbose="When an object of a class is created, the constructors of all member variables are called consecutively in the order the variables are declared, even if you don&apos;t explicitly write them to the initialization list. You could avoid assigning &apos;ssid&apos; a value by passing the value to the constructor in the initialization list." cwe="398" file0="src/src/DataStructs/WiFi_AP_Candidate.cpp">
            <location file="src/src/DataStructs/WiFi_AP_Candidate.cpp" line="87" column="3"/>
            <symbol>ssid</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;it&apos; can be declared as pointer to const" verbose="Variable &apos;it&apos; can be declared as pointer to const" cwe="398" file0="src/src/DataStructs/WiFi_AP_Candidate.cpp">
            <location file="src/src/DataStructs/WiFi_AP_Candidate.cpp" line="107" column="21" info="Variable &apos;it&apos; can be declared as pointer to const"/>
            <symbol>it</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataStructs/mBusPacket.cpp">
            <location file="src/src/DataStructs/mBusPacket.cpp" line="0" column="0"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/DataStructs/mBusPacket.cpp">
            <location file="src/src/DataStructs/mBusPacket.cpp" line="136" column="23"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/DataStructs/mBusPacket.cpp">
            <location file="src/src/DataStructs/mBusPacket.cpp" line="142" column="23"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/DataStructs/mBusPacket.cpp">
            <location file="src/src/DataStructs/mBusPacket.cpp" line="143" column="23"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;tmp._length&apos; is assigned a value that is never used." verbose="Variable &apos;tmp._length&apos; is assigned a value that is never used." cwe="563" file0="src/src/DataStructs/mBusPacket.cpp">
            <location file="src/src/DataStructs/mBusPacket.cpp" line="72" column="15"/>
            <symbol>tmp._length</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataTypes/SettingsType.cpp">
            <location file="src/src/DataTypes/SettingsType.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/DataTypes/TaskValues_Data.cpp">
            <location file="src/src/DataTypes/TaskValues_Data.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/Controller.cpp">
            <location file="src/src/ESPEasyCore/Controller.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;c_topic&apos; can be declared as pointer to const. However it seems that &apos;incoming_mqtt_callback&apos; is a callback function, if &apos;c_topic&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;c_topic&apos; can be declared as pointer to const. However it seems that &apos;incoming_mqtt_callback&apos; is a callback function, if &apos;c_topic&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="src/src/ESPEasyCore/Controller.cpp">
            <location file="src/src/ESPEasyCore/Controller.cpp" line="117" column="35" info="Parameter &apos;c_topic&apos; can be declared as pointer to const"/>
            <location file="src/src/ESPEasyCore/Controller.cpp" line="408" column="26" info="You might need to cast the function pointer here"/>
            <symbol>c_topic</symbol>
        </error>
        <error id="constParameterCallback" severity="style" msg="Parameter &apos;b_payload&apos; can be declared as pointer to const. However it seems that &apos;incoming_mqtt_callback&apos; is a callback function, if &apos;b_payload&apos; is declared with const you might also need to cast function pointer(s)." verbose="Parameter &apos;b_payload&apos; can be declared as pointer to const. However it seems that &apos;incoming_mqtt_callback&apos; is a callback function, if &apos;b_payload&apos; is declared with const you might also need to cast function pointer(s)." cwe="398" file0="src/src/ESPEasyCore/Controller.cpp">
            <location file="src/src/ESPEasyCore/Controller.cpp" line="117" column="53" info="Parameter &apos;b_payload&apos; can be declared as pointer to const"/>
            <location file="src/src/ESPEasyCore/Controller.cpp" line="408" column="26" info="You might need to cast the function pointer here"/>
            <symbol>b_payload</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key&apos; can be reduced." verbose="The scope of the variable &apos;key&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="367" column="12"/>
            <symbol>key</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;i&apos; can be reduced." verbose="The scope of the variable &apos;i&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="405" column="7"/>
            <symbol>i</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;key&apos; can be reduced." verbose="The scope of the variable &apos;key&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="410" column="14"/>
            <symbol>key</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="52" column="49" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;i&apos; is assigned a value that is never used." verbose="Variable &apos;i&apos; is assigned a value that is never used." cwe="563" file0="src/src/ESPEasyCore/ESPEasyGPIO.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyGPIO.cpp" line="405" column="9"/>
            <symbol>i</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;farg2&apos; can be reduced." verbose="The scope of the variable &apos;farg2&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="419" column="10"/>
            <symbol>farg2</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;farg3&apos; can be reduced." verbose="The scope of the variable &apos;farg3&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="419" column="17"/>
            <symbol>farg3</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;argc&apos; can be reduced." verbose="The scope of the variable &apos;argc&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="772" column="15"/>
            <symbol>argc</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;trimTrailingZeros&apos; shadows outer function" verbose="Local variable &apos;trimTrailingZeros&apos; shadows outer function" cwe="398" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="536" column="20" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter_Numerical.h" line="38" column="8" info="Shadowed declaration"/>
            <symbol>trimTrailingZeros</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;eventHandled&apos; is assigned a value that is never used." verbose="Variable &apos;eventHandled&apos; is assigned a value that is never used." cwe="563" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="114" column="22"/>
            <symbol>eventHandled</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;argc&apos; is assigned a value that is never used." verbose="Variable &apos;argc&apos; is assigned a value that is never used." cwe="563" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="772" column="35"/>
            <symbol>argc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rightcond&apos; is assigned a value that is never used." verbose="Variable &apos;rightcond&apos; is assigned a value that is never used." cwe="563" file0="src/src/ESPEasyCore/ESPEasyRules.cpp">
            <location file="src/src/ESPEasyCore/ESPEasyRules.cpp" line="1080" column="18"/>
            <symbol>rightcond</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasy_Console.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_Console.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;SerialWriteBuffer_t&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;SerialWriteBuffer_t&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/ESPEasyCore/ESPEasy_Console.cpp">
            <location file="src/src/Helpers/SerialWriteBuffer.h" line="20" column="3"/>
            <symbol>SerialWriteBuffer_t</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;buffSize&apos; is assigned a value that is never used." verbose="Variable &apos;buffSize&apos; is assigned a value that is never used." cwe="563" file0="src/src/ESPEasyCore/ESPEasy_Console.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_Console.cpp" line="38" column="20"/>
            <symbol>buffSize</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasy_Console_Port.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_Console_Port.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasy_Log.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_Log.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasy_backgroundtasks.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_backgroundtasks.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/ESPEasy_loop.cpp">
            <location file="src/src/ESPEasyCore/ESPEasy_loop.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/ESPEasyCore/Serial.cpp">
            <location file="src/src/ESPEasyCore/Serial.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Globals/CPlugins.cpp">
            <location file="src/src/Globals/CPlugins.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Globals/Plugins.cpp">
            <location file="src/src/Globals/Plugins.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Globals/Plugins.cpp">
            <location file="src/src/Globals/Plugins.cpp" line="333" column="119" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constVariablePointer" severity="style" msg="Variable &apos;taskData&apos; can be declared as pointer to const" verbose="Variable &apos;taskData&apos; can be declared as pointer to const" cwe="398" file0="src/src/Globals/Plugins.cpp">
            <location file="src/src/Globals/Plugins.cpp" line="1069" column="32" info="Variable &apos;taskData&apos; can be declared as pointer to const"/>
            <symbol>taskData</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Globals/Settings.cpp">
            <location file="src/src/Globals/Settings.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/AdafruitGFX_helper.cpp">
            <location file="src/src/Helpers/AdafruitGFX_helper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.cpp" line="0" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;BusCmd_Handler_I2C::_ok&apos; is not initialized in the constructor." verbose="Member variable &apos;BusCmd_Handler_I2C::_ok&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.cpp" line="6" column="21"/>
            <symbol>BusCmd_Handler_I2C::_ok</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;BusCmd_Handler_I2C&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;BusCmd_Handler_I2C&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="22" column="3"/>
            <symbol>BusCmd_Handler_I2C</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~BusCmd_Handler_I2C&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~BusCmd_Handler_I2C&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="25" column="12" info="Destructor in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="28" column="12" info="Virtual destructor in base class"/>
            <symbol>~BusCmd_Handler_I2C</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;init&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="27" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="30" column="32" info="Virtual function in base class"/>
            <symbol>init</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read8u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read8u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="28" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="31" column="32" info="Virtual function in base class"/>
            <symbol>read8u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read16u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read16u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="29" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="32" column="32" info="Virtual function in base class"/>
            <symbol>read16u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read24u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read24u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="30" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="33" column="32" info="Virtual function in base class"/>
            <symbol>read24u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read32u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read32u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="31" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="34" column="32" info="Virtual function in base class"/>
            <symbol>read32u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read8uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read8uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="32" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="35" column="32" info="Virtual function in base class"/>
            <symbol>read8uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read16uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read16uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="34" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="37" column="32" info="Virtual function in base class"/>
            <symbol>read16uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read24uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read24uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="36" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="39" column="32" info="Virtual function in base class"/>
            <symbol>read24uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read32uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read32uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="38" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="41" column="32" info="Virtual function in base class"/>
            <symbol>read32uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read8uB&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read8uB&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="40" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="43" column="32" info="Virtual function in base class"/>
            <symbol>read8uB</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read16uW&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read16uW&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="41" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="44" column="32" info="Virtual function in base class"/>
            <symbol>read16uW</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read8uBREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read8uBREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="42" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="45" column="32" info="Virtual function in base class"/>
            <symbol>read8uBREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;read16uWREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;read16uWREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="45" column="32" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="48" column="32" info="Virtual function in base class"/>
            <symbol>read16uWREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write8u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write8u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="55" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="58" column="20" info="Virtual function in base class"/>
            <symbol>write8u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write16u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write16u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="56" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="59" column="20" info="Virtual function in base class"/>
            <symbol>write16u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write24u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write24u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="57" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="60" column="20" info="Virtual function in base class"/>
            <symbol>write24u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write32u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write32u&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="58" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="61" column="20" info="Virtual function in base class"/>
            <symbol>write32u</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write8uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write8uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="59" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="62" column="20" info="Virtual function in base class"/>
            <symbol>write8uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write16uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write16uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="62" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="65" column="20" info="Virtual function in base class"/>
            <symbol>write16uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write24uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write24uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="65" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="68" column="20" info="Virtual function in base class"/>
            <symbol>write24uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write32uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write32uREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="68" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="71" column="20" info="Virtual function in base class"/>
            <symbol>write32uREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write8uB&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write8uB&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="71" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="74" column="20" info="Virtual function in base class"/>
            <symbol>write8uB</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write16uW&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write16uW&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="72" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="75" column="20" info="Virtual function in base class"/>
            <symbol>write16uW</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write8uBREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write8uBREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="73" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="76" column="20" info="Virtual function in base class"/>
            <symbol>write8uBREG</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The function &apos;write16uWREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." verbose="The function &apos;write16uWREG&apos; overrides a function in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/Helpers/BusCmd_Handler_I2C.cpp">
            <location file="src/src/Helpers/BusCmd_Handler_I2C.h" line="76" column="20" info="Function in derived class"/>
            <location file="src/src/Helpers/IBusCmd_Handler.h" line="79" column="20" info="Virtual function in base class"/>
            <symbol>write16uWREG</symbol>
        </error>
        <error id="syntaxError" severity="error" msg="syntax error" verbose="syntax error" file0="src/src/Helpers/BusCmd_Helper.cpp">
            <location file="src/src/Helpers/BusCmd_Helper.cpp" line="57" column="29"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Dallas1WireHelper.cpp">
            <location file="src/src/Helpers/Dallas1WireHelper.cpp" line="0" column="0"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;search_direction&apos; can be reduced." verbose="The scope of the variable &apos;search_direction&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/Helpers/Dallas1WireHelper.cpp">
            <location file="src/src/Helpers/Dallas1WireHelper.cpp" line="940" column="32"/>
            <symbol>search_direction</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;tmpAddress&apos; shadows outer variable" verbose="Local variable &apos;tmpAddress&apos; shadows outer variable" cwe="398" file0="src/src/Helpers/Dallas1WireHelper.cpp">
            <location file="src/src/Helpers/Dallas1WireHelper.cpp" line="274" column="15" info="Shadow variable"/>
            <location file="src/src/Helpers/Dallas1WireHelper.cpp" line="248" column="11" info="Shadowed declaration"/>
            <symbol>tmpAddress</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;addr&apos; can be declared as const array" verbose="Parameter &apos;addr&apos; can be declared as const array" cwe="398" file0="src/src/Helpers/Dallas1WireHelper.cpp">
            <location file="src/src/Helpers/Dallas1WireHelper.cpp" line="393" column="37" info="Parameter &apos;addr&apos; can be declared as const array"/>
            <symbol>addr</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/ESPEasyRTC.cpp">
            <location file="src/src/Helpers/ESPEasyRTC.cpp" line="0" column="0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;raw&apos; is assigned a value that is never used." verbose="Variable &apos;raw&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/ESPEasyRTC.cpp">
            <location file="src/src/Helpers/ESPEasyRTC.cpp" line="171" column="24"/>
            <symbol>raw</symbol>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &apos;addLogMove&apos;, it is invalid to use a preprocessor directive as macro parameter" verbose="failed to expand &apos;addLogMove&apos;, it is invalid to use a preprocessor directive as macro parameter">
            <location file="src/src/Helpers/ESPEasy_Storage.cpp" line="571" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="#error Target CONFIG_IDF_TARGET is not supported" verbose="#error Target CONFIG_IDF_TARGET is not supported" file0="src/src/Helpers/ESPEasy_Storage.cpp">
            <location file="src/src/DataTypes/SPI_options.h" line="73" column="5"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/ESPEasy_TouchHandler.cpp">
            <location file="src/src/Helpers/ESPEasy_TouchHandler.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/ESPEasy_time.cpp">
            <location file="src/src/Helpers/ESPEasy_time.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/ESPEasy_time_calc.cpp">
            <location file="src/src/Helpers/ESPEasy_time_calc.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/ESPEasy_time_zone.cpp">
            <location file="src/src/Helpers/ESPEasy_time_zone.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/HTTPResponseParser.cpp">
            <location file="src/src/Helpers/HTTPResponseParser.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Hardware.cpp">
            <location file="src/src/Helpers/Hardware.cpp" line="0" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;tryInitSPI&apos; is always true" verbose="Condition &apos;tryInitSPI&apos; is always true" cwe="571" file0="src/src/Helpers/Hardware.cpp">
            <location file="src/src/Helpers/Hardware.cpp" line="230" column="7" info="Condition &apos;tryInitSPI&apos; is always true"/>
            <location file="src/src/Helpers/Hardware.cpp" line="215" column="21" info="Assignment &apos;tryInitSPI=true&apos;, assigned value is 1"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Hardware_GPIO.cpp">
            <location file="src/src/Helpers/Hardware_GPIO.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Hardware_I2C.cpp">
            <location file="src/src/Helpers/Hardware_I2C.cpp" line="0" column="0"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;lastI2CClockSpeed&apos; is assigned a value that is never used." verbose="Variable &apos;lastI2CClockSpeed&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/Hardware_I2C.cpp">
            <location file="src/src/Helpers/Hardware_I2C.cpp" line="193" column="21"/>
            <symbol>lastI2CClockSpeed</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Hardware_PWM.cpp">
            <location file="src/src/Helpers/Hardware_PWM.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;frequency&apos; can be declared as reference to const" verbose="Parameter &apos;frequency&apos; can be declared as reference to const" cwe="398" file0="src/src/Helpers/Hardware_PWM.cpp">
            <location file="src/src/Helpers/Hardware_PWM.cpp" line="55" column="57" info="Parameter &apos;frequency&apos; can be declared as reference to const"/>
            <symbol>frequency</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/I2C_Plugin_Helper.cpp">
            <location file="src/src/Helpers/I2C_Plugin_Helper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/I2C_access.cpp">
            <location file="src/src/Helpers/I2C_access.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PSRAM_String&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PSRAM_String&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/Memory.cpp">
            <location file="src/src/Helpers/Memory.cpp" line="235" column="3"/>
            <symbol>PSRAM_String</symbol>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/Memory.cpp">
            <location file="src/src/Helpers/Memory.cpp" line="34" column="11"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/Memory.cpp">
            <location file="src/src/Helpers/Memory.cpp" line="246" column="19"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Misc.cpp">
            <location file="src/src/Helpers/Misc.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/Misc.cpp">
            <location file="src/src/Helpers/Misc.cpp" line="175" column="24"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Modbus_RTU.cpp">
            <location file="src/src/Helpers/Modbus_RTU.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;buf&apos; can be declared as pointer to const" verbose="Parameter &apos;buf&apos; can be declared as pointer to const" cwe="398" file0="src/src/Helpers/Modbus_RTU.cpp">
            <location file="src/src/Helpers/Modbus_RTU.cpp" line="731" column="52" info="Parameter &apos;buf&apos; can be declared as pointer to const"/>
            <symbol>buf</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;object_id&apos; is assigned a value that is never used." verbose="Variable &apos;object_id&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/Modbus_RTU.cpp">
            <location file="src/src/Helpers/Modbus_RTU.cpp" line="268" column="32"/>
            <symbol>object_id</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Numerical.cpp">
            <location file="src/src/Helpers/Numerical.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/OLed_helper.cpp">
            <location file="src/src/Helpers/OLed_helper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/OTA.cpp">
            <location file="src/src/Helpers/OTA.cpp" line="0" column="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;it-&gt;second.monitor&lt;=0&apos; is always true" verbose="Condition &apos;it-&gt;second.monitor&lt;=0&apos; is always true" cwe="571" file0="src/src/Helpers/PortStatus.cpp">
            <location file="src/src/Helpers/PortStatus.cpp" line="88" column="55" info="Condition &apos;it-&gt;second.monitor&lt;=0&apos; is always true"/>
            <location file="src/src/Helpers/PortStatus.cpp" line="86" column="26" info="Assignment &apos;it-&gt;second.monitor=0&apos;, assigned value is 0"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tempStatus.task&apos; is less than zero." verbose="The unsigned expression &apos;tempStatus.task&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="src/src/Helpers/PortStatus.cpp">
            <location file="src/src/Helpers/PortStatus.cpp" line="39" column="24" info="Unsigned less than zero"/>
            <symbol>tempStatus.task</symbol>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &apos;tempStatus.monitor&apos; is less than zero." verbose="The unsigned expression &apos;tempStatus.monitor&apos; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="src/src/Helpers/PortStatus.cpp">
            <location file="src/src/Helpers/PortStatus.cpp" line="39" column="53" info="Unsigned less than zero"/>
            <symbol>tempStatus.monitor</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;tempStatus&apos; can be declared as reference to const" verbose="Parameter &apos;tempStatus&apos; can be declared as reference to const" cwe="398" file0="src/src/Helpers/PortStatus.cpp">
            <location file="src/src/Helpers/PortStatus.cpp" line="37" column="60" info="Parameter &apos;tempStatus&apos; can be declared as reference to const"/>
            <symbol>tempStatus</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;PrintToLog&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;PrintToLog&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/PrintToLog.cpp">
            <location file="src/src/Helpers/PrintToLog.h" line="10" column="3"/>
            <symbol>PrintToLog</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/RulesHelper.cpp">
            <location file="src/src/Helpers/RulesHelper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/RulesMatcher.cpp">
            <location file="src/src/Helpers/RulesMatcher.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="0" column="0"/>
        </error>
        <error id="pointerOutOfBounds" severity="portability" msg="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." verbose="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." cwe="758" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="96" column="26" info="Pointer arithmetic overflow"/>
        </error>
        <error id="pointerOutOfBounds" severity="portability" msg="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." verbose="Undefined behaviour, pointer arithmetic &apos;globalstack-1&apos; is out of bounds." cwe="758" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="426" column="20" info="Pointer arithmetic overflow"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;sl&gt;0&apos; is always true" verbose="Condition &apos;sl&gt;0&apos; is always true" cwe="571" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="579" column="20" info="Condition &apos;sl&gt;0&apos; is always true"/>
            <location file="src/src/Helpers/Rules_calculate.cpp" line="561" column="25" info="Assuming that condition &apos;sl==0&apos; is not redundant"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;error&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;error&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="630" column="15" info="error is overwritten"/>
            <location file="src/src/Helpers/Rules_calculate.cpp" line="515" column="21" info="error is assigned"/>
            <symbol>error</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;error&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;error&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="545" column="19" info="error is overwritten"/>
            <location file="src/src/Helpers/Rules_calculate.cpp" line="544" column="19" info="error is assigned"/>
            <symbol>error</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;oc&apos; is assigned a value that is never used." verbose="Variable &apos;oc&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="427" column="6"/>
            <symbol>oc</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;TokenPos&apos; is assigned a value that is never used." verbose="Variable &apos;TokenPos&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/Rules_calculate.cpp">
            <location file="src/src/Helpers/Rules_calculate.cpp" line="631" column="15"/>
            <symbol>TokenPos</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Scheduler.cpp">
            <location file="src/src/Helpers/Scheduler.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Scheduler_IntervalTimer.cpp">
            <location file="src/src/Helpers/Scheduler_IntervalTimer.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Scheduler_PluginTaskTimer.cpp">
            <location file="src/src/Helpers/Scheduler_PluginTaskTimer.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Scheduler_RulesTimer.cpp">
            <location file="src/src/Helpers/Scheduler_RulesTimer.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/Scheduler_SystemEventTimer.cpp">
            <location file="src/src/Helpers/Scheduler_SystemEventTimer.cpp" line="53" column="26"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/Scheduler_SystemEventTimer.cpp">
            <location file="src/src/Helpers/Scheduler_SystemEventTimer.cpp" line="106" column="26"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/Scheduler_TaskDeviceTimer.cpp">
            <location file="src/src/Helpers/Scheduler_TaskDeviceTimer.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/SerialWriteBuffer.cpp">
            <location file="src/src/Helpers/SerialWriteBuffer.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1101" column="14"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1141" column="12"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1261" column="18"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1272" column="18"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;repl&apos; shadows outer function" verbose="Local variable &apos;repl&apos; shadows outer function" cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1190" column="10" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter.h" line="378" column="8" info="Shadowed declaration"/>
            <symbol>repl</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1383" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;write&apos; is assigned a value that is never used." verbose="Variable &apos;write&apos; is assigned a value that is never used." cwe="563" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="1133" column="15"/>
            <symbol>write</symbol>
        </error>
        <error id="va_start_referencePassed" severity="error" msg="Using reference &apos;format&apos; as parameter for va_start() results in undefined behaviour." verbose="Using reference &apos;format&apos; as parameter for va_start() results in undefined behaviour." cwe="758" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="133" column="19"/>
        </error>
        <error id="va_start_referencePassed" severity="error" msg="Using reference &apos;format&apos; as parameter for va_start() results in undefined behaviour." verbose="Using reference &apos;format&apos; as parameter for va_start() results in undefined behaviour." cwe="758" file0="src/src/Helpers/StringConverter.cpp">
            <location file="src/src/Helpers/StringConverter.cpp" line="143" column="23"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/StringConverter_Numerical.cpp">
            <location file="src/src/Helpers/StringConverter_Numerical.cpp" line="177" column="17"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/StringGenerator_GPIO.cpp">
            <location file="src/src/Helpers/StringGenerator_GPIO.cpp" line="0" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter" verbose="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter">
            <location file="src/src/Helpers/StringGenerator_System.cpp" line="309" column="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter" verbose="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter" file0="src/src/Helpers/StringGenerator_System.cpp">
            <location file="src/src/Helpers/StringGenerator_System.cpp" line="309" column="3"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/StringParser.cpp">
            <location file="src/src/Helpers/StringParser.cpp" line="0" column="0"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;trimTrailingZeros&apos; shadows outer function" verbose="Local variable &apos;trimTrailingZeros&apos; shadows outer function" cwe="398" file0="src/src/Helpers/StringParser.cpp">
            <location file="src/src/Helpers/StringParser.cpp" line="201" column="16" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter_Numerical.h" line="38" column="8" info="Shadowed declaration"/>
            <symbol>trimTrailingZeros</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;trimTrailingZeros&apos; shadows outer function" verbose="Local variable &apos;trimTrailingZeros&apos; shadows outer function" cwe="398" file0="src/src/Helpers/StringParser.cpp">
            <location file="src/src/Helpers/StringParser.cpp" line="649" column="20" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter_Numerical.h" line="38" column="8" info="Shadowed declaration"/>
            <symbol>trimTrailingZeros</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/SystemVariables.cpp">
            <location file="src/src/Helpers/SystemVariables.cpp" line="0" column="0"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Helpers/SystemVariables.cpp">
            <location file="src/src/Helpers/SystemVariables.cpp" line="446" column="57"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Helpers/SystemVariables.cpp">
            <location file="src/src/Helpers/SystemVariables.cpp" line="467" column="69"/>
        </error>
        <error id="dangerousTypeCast" severity="warning" msg="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" verbose="Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast" cwe="398" file0="src/src/Helpers/SystemVariables.cpp">
            <location file="src/src/Helpers/SystemVariables.cpp" line="473" column="74"/>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;trimTrailingZeros&apos; shadows outer function" verbose="Local variable &apos;trimTrailingZeros&apos; shadows outer function" cwe="398" file0="src/src/Helpers/SystemVariables.cpp">
            <location file="src/src/Helpers/SystemVariables.cpp" line="330" column="20" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter_Numerical.h" line="38" column="8" info="Shadowed declaration"/>
            <symbol>trimTrailingZeros</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="0" column="0"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TarStream::_currentIterator&apos; is not initialized in the constructor." verbose="Member variable &apos;TarStream::_currentIterator&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="35" column="12"/>
            <symbol>TarStream::_currentIterator</symbol>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &apos;TarStream::_currentIterator&apos; is not initialized in the constructor." verbose="Member variable &apos;TarStream::_currentIterator&apos; is not initialized in the constructor. Member variables of native types, pointers, or references are left uninitialized when the class is instantiated. That may cause bugs or undefined behavior." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="38" column="12"/>
            <symbol>TarStream::_currentIterator</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;TarStream&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;TarStream&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.h" line="132" column="3"/>
            <symbol>TarStream</symbol>
        </error>
        <error id="invalidPrintfArgType_uint" severity="portability" msg="%o in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." verbose="%o in format string (no. 1) requires &apos;unsigned int&apos; but the argument type is &apos;size_t {aka unsigned long long}&apos;." cwe="686" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="333" column="3"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;allZeros&apos; can be reduced." verbose="The scope of the variable &apos;allZeros&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="270" column="14"/>
            <symbol>allZeros</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;isValid&apos; shadows outer function" verbose="Local variable &apos;isValid&apos; shadows outer function" cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="92" column="26" info="Shadow variable"/>
            <location file="src/src/DataTypes/NetworkMedium.h" line="16" column="8" info="Shadowed declaration"/>
            <symbol>isValid</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;available&apos; shadows outer function" verbose="Local variable &apos;available&apos; shadows outer function" cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="119" column="24" info="Shadow variable"/>
            <location file="src/src/Helpers/TarStream.h" line="141" column="23" info="Shadowed declaration"/>
            <symbol>available</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::any_of algorithm instead of a raw loop." verbose="Consider using std::any_of algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="659" column="52"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398" file0="src/src/Helpers/TarStream.cpp">
            <location file="src/src/Helpers/TarStream.cpp" line="490" column="9"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="0" column="0"/>
        </error>
        <error id="containerOutOfBounds" severity="warning" msg="Either the condition &apos;candidates.empty()&apos; is redundant or expression &apos;candidates.front()&apos; causes access out of bounds." verbose="Either the condition &apos;candidates.empty()&apos; is redundant or expression &apos;candidates.front()&apos; causes access out of bounds." cwe="398" file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="156" column="38" info="Access out of bounds"/>
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="181" column="30" info="Assuming that condition &apos;candidates.empty()&apos; is not redundant"/>
            <symbol>candidates</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="205" column="24"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::count_if algorithm instead of a raw loop." verbose="Consider using std::count_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="260" column="9"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::count_if algorithm instead of a raw loop." verbose="Consider using std::count_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="265" column="9"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/WiFi_AP_CandidatesList.cpp">
            <location file="src/src/Helpers/WiFi_AP_CandidatesList.cpp" line="456" column="58"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_CPlugin_Helper_webform.cpp">
            <location file="src/src/Helpers/_CPlugin_Helper_webform.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_CPlugin_LoRa_TTN_helper.cpp">
            <location file="src/src/Helpers/_CPlugin_LoRa_TTN_helper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_CPlugin_init.cpp">
            <location file="src/src/Helpers/_CPlugin_init.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/_CPlugin_init.cpp">
            <location file="src/src/Helpers/_CPlugin_init.cpp" line="2107" column="37"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/_CPlugin_init.cpp">
            <location file="src/src/Helpers/_CPlugin_init.cpp" line="2128" column="34"/>
        </error>
        <error id="unusedPrivateFunction" severity="style" msg="Unused private function: &apos;Internal_GPIO_pulseHelper::msec_Since_triggerTimestamp&apos;" verbose="Unused private function: &apos;Internal_GPIO_pulseHelper::msec_Since_triggerTimestamp&apos;" cwe="398" file0="src/src/Helpers/_Internal_GPIO_pulseHelper.cpp">
            <location file="src/src/Helpers/_Internal_GPIO_pulseHelper.cpp" line="278" column="33"/>
            <location file="src/src/Helpers/_Internal_GPIO_pulseHelper.h" line="159" column="12"/>
            <symbol>Internal_GPIO_pulseHelper::msec_Since_triggerTimestamp</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;Internal_GPIO_pulseHelper&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;Internal_GPIO_pulseHelper&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/_Internal_GPIO_pulseHelper.cpp">
            <location file="src/src/Helpers/_Internal_GPIO_pulseHelper.h" line="129" column="3"/>
            <symbol>Internal_GPIO_pulseHelper</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;configuration&apos; should be passed by const reference." verbose="Parameter &apos;configuration&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398" file0="src/src/Helpers/_Internal_GPIO_pulseHelper.cpp">
            <location file="src/src/Helpers/_Internal_GPIO_pulseHelper.cpp" line="54" column="100" info="Function parameter &apos;configuration&apos; should be passed by const reference."/>
            <symbol>configuration</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_Plugin_Helper_GPIO.cpp">
            <location file="src/src/Helpers/_Plugin_Helper_GPIO.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/Helpers/_Plugin_Helper_GPIO.cpp">
            <location file="src/src/Helpers/_Plugin_Helper_GPIO.cpp" line="54" column="23" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter" verbose="failed to expand &apos;F&apos;, it is invalid to use a preprocessor directive as macro parameter">
            <location file="src/src/Helpers/_Plugin_Helper_serial.cpp" line="218" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_Plugin_Helper_webform.cpp">
            <location file="src/src/Helpers/_Plugin_Helper_webform.cpp" line="0" column="0"/>
        </error>
        <error id="assignBoolToFloat" severity="style" msg="Boolean value assigned to floating point variable." verbose="Boolean value assigned to floating point variable." cwe="704" file0="src/src/Helpers/_Plugin_Helper_webform.cpp">
            <location file="src/src/Helpers/_Plugin_Helper_webform.cpp" line="135" column="17"/>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/_Plugin_Helper_webform.cpp">
            <location file="src/src/Helpers/_Plugin_Helper_webform.cpp" line="143" column="94"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_Plugin_SensorTypeHelper.cpp">
            <location file="src/src/Helpers/_Plugin_SensorTypeHelper.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/Helpers/_Plugin_init.cpp">
            <location file="src/src/Helpers/_Plugin_init.cpp" line="0" column="0"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/_Plugin_init.cpp">
            <location file="src/src/Helpers/_Plugin_init.cpp" line="2169" column="35"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected." cwe="398" file0="src/src/Helpers/_Plugin_init.cpp">
            <location file="src/src/Helpers/_Plugin_init.cpp" line="2196" column="32"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;match_id&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;match_id&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/Helpers/msecTimerHandlerStruct.cpp">
            <location file="src/src/Helpers/msecTimerHandlerStruct.cpp" line="114" column="5"/>
            <symbol>match_id</symbol>
        </error>
        <error id="useStlAlgorithm" severity="style" msg="Consider using std::find_if algorithm instead of a raw loop." verbose="Consider using std::find_if algorithm instead of a raw loop." cwe="398" file0="src/src/Helpers/msecTimerHandlerStruct.cpp">
            <location file="src/src/Helpers/msecTimerHandlerStruct.cpp" line="76" column="26"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/NotifierStructs/N001_data_struct.cpp">
            <location file="src/src/NotifierStructs/N001_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P001_data_struct.cpp">
            <location file="src/src/PluginStructs/P001_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P001_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P001_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P001_data_struct.cpp">
            <location file="src/src/PluginStructs/P001_data_struct.h" line="62" column="3"/>
            <symbol>P001_data_struct</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;_data._pin==-1&apos; is always false" verbose="Condition &apos;_data._pin==-1&apos; is always false" cwe="570" file0="src/src/PluginStructs/P001_data_struct.cpp">
            <location file="src/src/PluginStructs/P001_data_struct.cpp" line="65" column="18" info="Condition &apos;_data._pin==-1&apos; is always false"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P001_data_struct.cpp">
            <location file="src/src/PluginStructs/P001_data_struct.cpp" line="11" column="66" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P002_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P002_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.h" line="108" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P002_data_struct</symbol>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &apos;_pin_analogRead&apos; is reassigned a value before the old one has been used." verbose="Variable &apos;_pin_analogRead&apos; is reassigned a value before the old one has been used." cwe="563" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="31" column="26" info="_pin_analogRead is overwritten"/>
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="28" column="19" info="_pin_analogRead is assigned"/>
            <symbol>_pin_analogRead</symbol>
        </error>
        <error id="constParameterReference" severity="style" msg="Parameter &apos;string&apos; can be declared as reference to const" verbose="Parameter &apos;string&apos; can be declared as reference to const" cwe="398" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1254" column="62" info="Parameter &apos;string&apos; can be declared as reference to const"/>
            <symbol>string</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="626" column="66" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1095" column="62" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1144" column="66" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1232" column="23" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pin&apos; is assigned a value that is never used." verbose="Variable &apos;pin&apos; is assigned a value that is never used." cwe="563" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1110" column="17"/>
            <symbol>pin</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;pin&apos; is assigned a value that is never used." verbose="Variable &apos;pin&apos; is assigned a value that is never used." cwe="563" file0="src/src/PluginStructs/P002_data_struct.cpp">
            <location file="src/src/PluginStructs/P002_data_struct.cpp" line="1110" column="13"/>
            <symbol>pin</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P003_data_struct.cpp">
            <location file="src/src/PluginStructs/P003_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P003_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P003_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P003_data_struct.cpp">
            <location file="src/src/PluginStructs/P003_data_struct.h" line="44" column="3"/>
            <symbol>P003_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P003_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P003_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P003_data_struct.cpp">
            <location file="src/src/PluginStructs/P003_data_struct.h" line="47" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P003_data_struct</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P003_data_struct.cpp">
            <location file="src/src/PluginStructs/P003_data_struct.cpp" line="8" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P003_data_struct.cpp">
            <location file="src/src/PluginStructs/P003_data_struct.cpp" line="59" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P004_data_struct.cpp">
            <location file="src/src/PluginStructs/P004_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P004_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P004_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P004_data_struct.cpp">
            <location file="src/src/PluginStructs/P004_data_struct.h" line="41" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P004_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P005_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P005_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.h" line="15" column="3"/>
            <symbol>P005_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P005_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P005_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.h" line="18" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P005_data_struct</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;dht_byte&apos; can be reduced." verbose="The scope of the variable &apos;dht_byte&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.cpp" line="147" column="12"/>
            <symbol>dht_byte</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;avg_low_total&apos; can be reduced." verbose="The scope of the variable &apos;avg_low_total&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.cpp" line="148" column="12"/>
            <symbol>avg_low_total</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;timings&apos; can be reduced." verbose="The scope of the variable &apos;timings&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.cpp" line="157" column="11"/>
            <symbol>timings</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P005_data_struct.cpp">
            <location file="src/src/PluginStructs/P005_data_struct.cpp" line="69" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P006_data_struct.cpp">
            <location file="src/src/PluginStructs/P006_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P006_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P006_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P006_data_struct.cpp">
            <location file="src/src/PluginStructs/P006_data_struct.h" line="12" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P006_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P008_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P008_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.h" line="21" column="3"/>
            <symbol>P008_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P008_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P008_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.h" line="24" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P008_data_struct</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;digit&apos; can be reduced." verbose="The scope of the variable &apos;digit&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.cpp" line="12" column="12"/>
            <symbol>digit</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.cpp" line="39" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.cpp" line="57" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P008_data_struct.cpp">
            <location file="src/src/PluginStructs/P008_data_struct.cpp" line="233" column="62" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P009_data_struct.cpp">
            <location file="src/src/PluginStructs/P009_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P009_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P009_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P009_data_struct.cpp">
            <location file="src/src/PluginStructs/P009_data_struct.h" line="53" column="3"/>
            <symbol>P009_data_struct</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P009_data_struct.cpp">
            <location file="src/src/PluginStructs/P009_data_struct.cpp" line="10" column="62" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P012_data_struct.cpp">
            <location file="src/src/PluginStructs/P012_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P012_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P012_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P012_data_struct.cpp">
            <location file="src/src/PluginStructs/P012_data_struct.h" line="22" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P012_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P014_data_struct.cpp">
            <location file="src/src/PluginStructs/P014_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P014_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P014_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P014_data_struct.cpp">
            <location file="src/src/PluginStructs/P014_data_struct.h" line="118" column="13" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P014_data_struct</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;!readTemperatureFromHumidity(i2caddr,resolution)&apos; is always false" verbose="Condition &apos;!readTemperatureFromHumidity(i2caddr,resolution)&apos; is always false" cwe="570" file0="src/src/PluginStructs/P014_data_struct.cpp">
            <location file="src/src/PluginStructs/P014_data_struct.cpp" line="182" column="13" info="Condition &apos;!readTemperatureFromHumidity(i2caddr,resolution)&apos; is always false"/>
            <location file="src/src/PluginStructs/P014_data_struct.cpp" line="182" column="41" info="Calling function &apos;readTemperatureFromHumidity&apos; returns 1"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P015_data_struct.cpp">
            <location file="src/src/PluginStructs/P015_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P015_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P015_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P015_data_struct.cpp">
            <location file="src/src/PluginStructs/P015_data_struct.h" line="25" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P015_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P016_data_struct.cpp">
            <location file="src/src/PluginStructs/P016_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P019_data_struct.cpp">
            <location file="src/src/PluginStructs/P019_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P019_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P019_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P019_data_struct.cpp">
            <location file="src/src/PluginStructs/P019_data_struct.h" line="53" column="3"/>
            <symbol>P019_data_struct</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P019_data_struct.cpp">
            <location file="src/src/PluginStructs/P019_data_struct.cpp" line="9" column="62" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P020_data_struct.cpp">
            <location file="src/src/PluginStructs/P020_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P020_Task&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P020_Task&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P020_data_struct.cpp">
            <location file="src/src/PluginStructs/P020_data_struct.h" line="99" column="3"/>
            <symbol>P020_Task</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P020_Task&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P020_Task&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P020_data_struct.cpp">
            <location file="src/src/PluginStructs/P020_data_struct.h" line="100" column="4" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P020_Task</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P022_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P022_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.h" line="27" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P022_data_struct</symbol>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 10." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 10." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="11" column="36" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="10" column="22" info="Assuming that condition &apos;address_offset&lt;32&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 7." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 7." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="13" column="36" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="8" column="37" info="Assignment &apos;address_offset=address-0x40&apos;, assigned value is 63"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="7" column="47" info="Assuming that condition &apos;address&gt;0x7F&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 21." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 21." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="22" column="30" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="21" column="22" info="Assuming that condition &apos;address_offset&lt;32&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 18." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 18." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="24" column="30" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="19" column="37" info="Assignment &apos;address_offset=address-0x40&apos;, assigned value is 63"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="18" column="47" info="Assuming that condition &apos;address&gt;0x7F&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 33." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 33." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="34" column="31" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="33" column="22" info="Assuming that condition &apos;address_offset&lt;32&apos; is not redundant"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 30." verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 30." cwe="758" file0="src/src/PluginStructs/P022_data_struct.cpp">
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="36" column="31" info="Shift"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="31" column="37" info="Assignment &apos;address_offset=address-0x40&apos;, assigned value is 63"/>
            <location file="src/src/PluginStructs/P022_data_struct.cpp" line="30" column="47" info="Assuming that condition &apos;address&gt;0x7F&apos; is not redundant"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P024_data_struct.cpp">
            <location file="src/src/PluginStructs/P024_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P024_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P024_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P024_data_struct.cpp">
            <location file="src/src/PluginStructs/P024_data_struct.h" line="11" column="3"/>
            <symbol>P024_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P024_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P024_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P024_data_struct.cpp">
            <location file="src/src/PluginStructs/P024_data_struct.h" line="13" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P024_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P025_VARIOUS_BITS_t&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P025_VARIOUS_BITS_t&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.h" line="20" column="3"/>
            <symbol>P025_VARIOUS_BITS_t</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P025_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P025_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.h" line="70" column="3"/>
            <symbol>P025_data_struct</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P025_config_register&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P025_config_register&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="58" column="3"/>
            <symbol>P025_config_register</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P025_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P025_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.h" line="72" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P025_data_struct</symbol>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="82" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="83" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="84" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="195" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="196" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="197" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="200" column="17"/>
        </error>
        <error id="badBitmaskCheck" severity="style" msg="Operator &apos;|&apos; with one operand equal to zero is redundant." verbose="Operator &apos;|&apos; with one operand equal to zero is redundant." cwe="571" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="201" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="83" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="84" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="196" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="197" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression &apos;0x0000&apos; found multiple times in chain of &apos;|&apos; operators." verbose="Finding the same expression more than once in a condition is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="200" column="17"/>
        </error>
        <error id="duplicateExpression" severity="style" msg="Same expression on both sides of &apos;|&apos;." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="201" column="17"/>
        </error>
        <error id="unsignedPositive" severity="style" msg="Unsigned expression &apos;choice&apos; can&apos;t be negative so it is unnecessary to test it." verbose="Unsigned expression &apos;choice&apos; can&apos;t be negative so it is unnecessary to test it." cwe="570" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="400" column="17" info="Unsigned positive"/>
            <symbol>choice</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="76" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="290" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="393" column="63" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::comp_que&apos; is never used." verbose="struct member &apos;P025_config_register::comp_que&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="45" column="16"/>
            <symbol>P025_config_register::comp_que</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::comp_lat&apos; is never used." verbose="struct member &apos;P025_config_register::comp_lat&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="46" column="16"/>
            <symbol>P025_config_register::comp_lat</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::comp_pol&apos; is never used." verbose="struct member &apos;P025_config_register::comp_pol&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="47" column="16"/>
            <symbol>P025_config_register::comp_pol</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::compMode&apos; is never used." verbose="struct member &apos;P025_config_register::compMode&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="48" column="16"/>
            <symbol>P025_config_register::compMode</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::mode&apos; is never used." verbose="struct member &apos;P025_config_register::mode&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="50" column="16"/>
            <symbol>P025_config_register::mode</symbol>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &apos;P025_config_register::_regValue&apos; is never used." verbose="struct member &apos;P025_config_register::_regValue&apos; is never used." cwe="563" file0="src/src/PluginStructs/P025_data_struct.cpp">
            <location file="src/src/PluginStructs/P025_data_struct.cpp" line="55" column="14"/>
            <symbol>P025_config_register::_regValue</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P026_data_struct.cpp">
            <location file="src/src/PluginStructs/P026_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P026_data_struct.cpp">
            <location file="src/src/PluginStructs/P026_data_struct.cpp" line="192" column="64" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P026_data_struct.cpp">
            <location file="src/src/PluginStructs/P026_data_struct.cpp" line="256" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P027_data_struct.cpp">
            <location file="src/src/PluginStructs/P027_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P027_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P027_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P027_data_struct.cpp">
            <location file="src/src/PluginStructs/P027_data_struct.h" line="18" column="3"/>
            <symbol>P027_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P027_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P027_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P027_data_struct.cpp">
            <location file="src/src/PluginStructs/P027_data_struct.h" line="21" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P027_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P028_data_struct.cpp">
            <location file="src/src/PluginStructs/P028_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P028_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P028_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P028_data_struct.cpp">
            <location file="src/src/PluginStructs/P028_data_struct.h" line="130" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P028_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P031_data_struct.cpp">
            <location file="src/src/PluginStructs/P031_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P031_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P031_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P031_data_struct.cpp">
            <location file="src/src/PluginStructs/P031_data_struct.h" line="33" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P031_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P032_data_struct.cpp">
            <location file="src/src/PluginStructs/P032_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P032_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P032_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P032_data_struct.cpp">
            <location file="src/src/PluginStructs/P032_data_struct.h" line="10" column="3"/>
            <symbol>P032_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P032_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P032_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P032_data_struct.cpp">
            <location file="src/src/PluginStructs/P032_data_struct.h" line="12" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P032_data_struct</symbol>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour" verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour" cwe="758" file0="src/src/PluginStructs/P032_data_struct.cpp">
            <location file="src/src/PluginStructs/P032_data_struct.cpp" line="100" column="60" info="Shift"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P035_data_struct.cpp">
            <location file="src/src/PluginStructs/P035_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;tDisplayLines_storage&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;tDisplayLines_storage&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.h" line="288" column="3"/>
            <symbol>tDisplayLines_storage</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P036_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P036_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.h" line="388" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P036_data_struct</symbol>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &apos;number_spaces&lt;=0&apos; is always false" verbose="Condition &apos;number_spaces&lt;=0&apos; is always false" cwe="570" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1024" column="23" info="Condition &apos;number_spaces&lt;=0&apos; is always false"/>
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1022" column="42" info="Assignment &apos;number_spaces=frameCount-1&apos;, assigned value is greater than 0"/>
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1002" column="19" info="Assuming that condition &apos;frameCount&lt;=1&apos; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iUsedHeightForFonts&apos; can be reduced." verbose="The scope of the variable &apos;iUsedHeightForFonts&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1223" column="11"/>
            <symbol>iUsedHeightForFonts</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;updateDisplay&apos; can be reduced." verbose="The scope of the variable &apos;updateDisplay&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1846" column="11"/>
            <symbol>updateDisplay</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;iCurrentLeft&apos; can be reduced." verbose="The scope of the variable &apos;iCurrentLeft&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="1847" column="11"/>
            <symbol>iCurrentLeft</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;NFrames&apos; can be reduced." verbose="The scope of the variable &apos;NFrames&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="2068" column="11"/>
            <symbol>NFrames</symbol>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;lineCounter&apos; can be reduced." verbose="The scope of the variable &apos;lineCounter&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="2069" column="11"/>
            <symbol>lineCounter</symbol>
        </error>
        <error id="shadowFunction" severity="style" msg="Local variable &apos;parseString&apos; shadows outer function" verbose="Local variable &apos;parseString&apos; shadows outer function" cwe="398" file0="src/src/PluginStructs/P036_data_struct.cpp">
            <location file="src/src/PluginStructs/P036_data_struct.cpp" line="370" column="12" info="Shadow variable"/>
            <location file="src/src/Helpers/StringConverter.h" line="296" column="8" info="Shadowed declaration"/>
            <symbol>parseString</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P037_data_struct.cpp">
            <location file="src/src/PluginStructs/P037_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &apos;P037_data_struct&apos; has a constructor with 1 argument that is not explicit." verbose="Struct &apos;P037_data_struct&apos; has a constructor with 1 argument that is not explicit. Such, so called &quot;Converting constructors&quot;, should in general be explicit for type safety reasons as that prevents unintended implicit conversions." cwe="398" file0="src/src/PluginStructs/P037_data_struct.cpp">
            <location file="src/src/PluginStructs/P037_data_struct.h" line="106" column="3"/>
            <symbol>P037_data_struct</symbol>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P037_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P037_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P037_data_struct.cpp">
            <location file="src/src/PluginStructs/P037_data_struct.h" line="108" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P037_data_struct</symbol>
        </error>
        <error id="normalCheckLevelMaxBranches" severity="information" msg="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." verbose="Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches." file0="src/src/PluginStructs/P038_data_struct.cpp">
            <location file="src/src/PluginStructs/P038_data_struct.cpp" line="0" column="0"/>
        </error>
        <error id="missingOverride" severity="style" msg="The destructor &apos;~P038_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." verbose="The destructor &apos;~P038_data_struct&apos; overrides a destructor in a base class but is not marked with a &apos;override&apos; specifier." file0="src/src/PluginStructs/P038_data_struct.cpp">
            <location file="src/src/PluginStructs/P038_data_struct.h" line="37" column="12" info="Destructor in derived class"/>
            <location file="src/src/DataStructs/PluginTaskData_base.h" line="22" column="12" info="Virtual destructor in base class"/>
            <symbol>~P038_data_struct</symbol>
        </error>
        <error id="constParameterPointer" severity="style" msg="Parameter &apos;event&apos; can be declared as pointer to const" verbose="Parameter &apos;event&apos; can be declared as pointer to const" cwe="398" file0="src/src/PluginStructs/P038_data_struct.cpp">
            <location file="src/src/PluginStructs/P038_data_struct.cpp" line="41" column="56" info="Parameter &apos;event&apos; can be declared as pointer to const"/>
            <symbol>event</symbol>
        </error>
