src\ESPEasy-Globals.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\ESPEasy_common.h:13:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h> // See: https://github.com/esp8266/Arduino/issues/8922#issuecomment-1542301697
^
src\ESPEasy_common.h:14:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src\src\Helpers\ESPEasy_math.h:5:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src\ESPEasy-Globals.h:104:0: information: Include file: <MD5Builder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <MD5Builder.h>
^
src\ESPEasy-Globals.h:387:0: information: Include file: <lvgl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lvgl.h>
^
src\ESPEasy-Globals.h:389:0: information: Include file: "PanelLan.h" not found. [missingInclude]
#include "PanelLan.h"
^
src\ESPEasy-Globals.h:453:0: information: Include file: <EEPROM.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <EEPROM.h>
^
src\ESPEasy-Globals.cpp:26:0: information: Include file: <MD5Builder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <MD5Builder.h>
^
src\include\ESPEasy_config.h:64:0: information: Include file: <c_types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <c_types.h>
^
src\ESPEasy_common.h:28:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\ESPEasy_common.h:55:0: information: Include file: <core_version.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <core_version.h>
^
src\ESPEasy_common.h:56:0: information: Include file: <lwip/init.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <lwip/init.h>
^
src\ESPEasy_common.h:63:0: information: Include file: <lwip/tcp_impl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <lwip/tcp_impl.h>
^
src\ESPEasy_common.h:74:0: information: Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <limits.h>
^
src\include\ESPEasy_config.h:75:0: information: Include file: <esp8266-compat.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <esp8266-compat.h>
^
src\src\Helpers\Hardware_defines.h:7:0: information: Include file: <driver/adc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <driver/adc.h>
^
src\src\Helpers\Hardware_defines.h:10:0: information: Include file: <esp_adc_cal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp_adc_cal.h>
^
src\src\Helpers\Hardware_defines.h:11:0: information: Include file: <driver/adc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <driver/adc.h>
^
src\ESPEasy_common.h:31:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <WiFi.h>
^
src\ESPEasy_common.h:32:0: information: Include file: <soc/soc_caps.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <soc/soc_caps.h>
^
src\ESPEasy_common.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C001.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\DeviceStruct.h:7:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\DataStructs\PluginStats_size.h:8:0: information: Include file: <CircularBuffer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <CircularBuffer.h>
^
src\src\Globals\Services.h:54:0: information: Include file: <DNSServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <DNSServer.h>
^
src\src\DataStructs\Web_StreamingBuffer.h:4:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\WebServer\common.h:12:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\DataStructs\ControllerSettingsStruct.h:9:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory> // For std::shared_ptr
^
src\src\DataStructs\ControllerSettingsStruct.h:10:0: information: Include file: <new> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <new>    // for std::nothrow
^
src\src\DataStructs\ControllerSettingsStruct.h:12:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\ControllerSettingsStruct.h:13:0: information: Include file: <WiFiClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiClient.h>
^
src\src\DataStructs\ControllerSettingsStruct.h:14:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\Globals\Plugins.h:12:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\Memory.h:26:0: information: Include file: <cont.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <cont.h>
^
src\src\DataStructs\RulesEventCache.h:6:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\RulesHelper.h:8:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\Helpers\RulesHelper.h:9:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\DataStructs\Caches.h:20:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\DataStructs\SystemTimerStruct.h:5:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Helpers\msecTimerHandlerStruct.h:6:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\Helpers\Scheduler.h:18:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\Helpers\Scheduler.h:19:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\DataTypes\ESPEasyTimeSource.h:7:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Helpers\ESPEasy_time.h:8:0: information: Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <time.h>
^
src\src\DataStructs\EventQueue.h:5:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\Globals\EventQueue.h:6:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\DataStructs\PortStatusStruct.h:7:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Globals\I2Cdev.h:5:0: information: Include file: <I2Cdev.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <I2Cdev.h>
^
src\src\DataStructs\UserVarStruct.h:11:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\DataStructs\UserVarStruct.h:12:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Globals\RuntimeData.h:10:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\CustomBuild\CompiletimeDefines.h:5:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\src\Helpers\FS_Helper.h:31:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\DataStructs\I2CTypes.h:6:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\I2C_access.h:12:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\DataStructs\FactoryDefaultPref.h:6:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Helpers\StringConverter.h:12:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Helpers\StringConverter.h:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\_Plugin_Helper_serial.h:9:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESPeasySerial.h>
^
src\src\WebServer\Chart_JS_scale.h:12:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\DataStructs\MAC_address.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\DataStructs\MAC_address.h:5:0: information: Include file: <WString.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WString.h>
^
src\src\DataStructs\UnitMessageCount.h:6:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\DataStructs\TimingStats.h:14:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <map>
^
src\src\Helpers\Networking.h:7:0: information: Include file: <WiFiClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiClient.h>
^
src\src\Helpers\Networking.h:8:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\Helpers\Networking.h:168:0: information: Include file: <AddrList.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <AddrList.h>
^
src\src\ControllerQueue\ControllerDelayHandlerStruct.h:23:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\ControllerQueue\ControllerDelayHandlerStruct.h:24:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory> // For std::shared_ptr
^
src\src\ControllerQueue\ControllerDelayHandlerStruct.h:25:0: information: Include file: <new> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <new>    // std::nothrow
^
src\src\ESPEasyCore\ESPEasyNetwork.h:8:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\ProtocolStruct.h:5:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\_C001.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_time_calc.h:13:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\DataStructs_templ\SettingsStruct.cpp:787:36: style: Unused private function: 'SettingsStruct_tmpl < TASKS_MAX >::getPinBootStateIndex' [unusedPrivateFunction]
bool SettingsStruct_tmpl<N_TASKS>::getPinBootStateIndex(
                                   ^
src\src\DataStructs\SettingsStruct.h:309:8: note: Unused private function: 'SettingsStruct_tmpl < TASKS_MAX >::getPinBootStateIndex'
  bool getPinBootStateIndex(
       ^
src\src\DataStructs_templ\SettingsStruct.cpp:787:36: note: Unused private function: 'SettingsStruct_tmpl < TASKS_MAX >::getPinBootStateIndex'
bool SettingsStruct_tmpl<N_TASKS>::getPinBootStateIndex(
                                   ^
src\src\DataStructs\PluginStats_Config.h:19:3: style: Struct 'PluginStats_Config_t' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PluginStats_Config_t(uint8_t stored_value) {
  ^
src\src\DataStructs\PluginStats_timestamp.h:23:3: style: Class 'PluginStats_timestamp' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PluginStats_timestamp(bool useHighRes);
  ^
src\src\WebServer\Chart_JS_title.h:16:3: style: Struct 'ChartJS_title' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChartJS_title(const __FlashStringHelper *titleText,
  ^
src\src\WebServer\Chart_JS_title.h:18:3: style: Struct 'ChartJS_title' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChartJS_title(const String& titleText,
  ^
src\src\DataStructs\ChecksumType.h:12:3: style: Struct 'ChecksumType' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChecksumType(uint8_t checksum[16]);
  ^
src\src\DataStructs\timer_id_couple.h:14:3: style: Struct 'timer_id_couple' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  timer_id_couple(unsigned long id) : _id(id) {
  ^
src\src\DataStructs\GpioFactorySettingsStruct.h:11:3: style: Struct 'GpioFactorySettingsStruct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  GpioFactorySettingsStruct(DeviceModel model = DeviceModel::DeviceModel_default);
  ^
src\src\DataStructs\FactoryDefaultPref.h:16:3: style: Struct 'ResetFactoryDefaultPreference_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ResetFactoryDefaultPreference_struct(uint32_t preference);
  ^
src\src\WebServer\Chart_JS_scale.h:16:3: style: Struct 'ChartJS_options_scale' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChartJS_options_scale(const String& id,
  ^
src\src\WebServer\Chart_JS_scale.h:20:3: style: Struct 'ChartJS_options_scale' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ChartJS_options_scale(const PluginStats_Config_t& config,
  ^
src\src\DataTypes\FormSelectorOptions.h:11:3: style: Class 'FormSelectorOptions' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  FormSelectorOptions(int optionCount);
  ^
src\src\DataStructs\MAC_address.h:12:3: style: Class 'MAC_address' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  MAC_address(const uint8_t new_mac[6]);
  ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:25:3: style: Class 'SimpleQueueElement_formatted_Strings' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SimpleQueueElement_formatted_Strings(struct EventStruct *event);
  ^
src\src\DataStructs\I2CTypes.h:13:3: style: Struct 'I2Cdata < uint8_t >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  I2Cdata(uint8_t length) : start_reg(0) {
  ^
src\src\DataStructs\I2CTypes.h:13:3: style: Struct 'I2Cdata < uint16_t >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  I2Cdata(uint8_t length) : start_reg(0) {
  ^
src\src\ControllerQueue\MQTT_queue_element.h:38:29: style: The function 'getSize' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:19:37: note: Virtual function in base class
  virtual size_t                    getSize() const = 0;
                                    ^
src\src\ControllerQueue\MQTT_queue_element.h:38:29: note: Function in derived class
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\MQTT_queue_element.h:40:29: style: The function 'isDuplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:21:37: note: Virtual function in base class
  virtual bool                      isDuplicate(const Queue_element_base& other) const = 0;
                                    ^
src\src\ControllerQueue\MQTT_queue_element.h:40:29: note: Function in derived class
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\MQTT_queue_element.h:42:29: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\Queue_element_base.h:23:37: note: Virtual function in base class
  virtual const UnitMessageCount_t* getUnitMessageCount() const = 0;
                                    ^
src\src\ControllerQueue\MQTT_queue_element.h:42:29: note: Function in derived class
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\MQTT_queue_element.h:46:23: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\ControllerQueue\Queue_element_base.h:24:37: note: Virtual function in base class
  virtual UnitMessageCount_t      * getUnitMessageCount()       = 0;
                                    ^
src\src\ControllerQueue\MQTT_queue_element.h:46:23: note: Function in derived class
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:26:29: style: The function 'getSize' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:19:37: note: Virtual function in base class
  virtual size_t                    getSize() const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:26:29: note: Function in derived class
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:28:29: style: The function 'isDuplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:21:37: note: Virtual function in base class
  virtual bool                      isDuplicate(const Queue_element_base& other) const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:28:29: note: Function in derived class
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:30:29: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\Queue_element_base.h:23:37: note: Virtual function in base class
  virtual const UnitMessageCount_t* getUnitMessageCount() const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:30:29: note: Function in derived class
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:34:23: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\ControllerQueue\Queue_element_base.h:24:37: note: Virtual function in base class
  virtual UnitMessageCount_t      * getUnitMessageCount()       = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_string_only.h:34:23: note: Function in derived class
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:42:29: style: The function 'getSize' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:19:37: note: Virtual function in base class
  virtual size_t                    getSize() const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:42:29: note: Function in derived class
  size_t                    getSize() const;
                            ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:44:29: style: The function 'isDuplicate' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\Queue_element_base.h:21:37: note: Virtual function in base class
  virtual bool                      isDuplicate(const Queue_element_base& other) const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:44:29: note: Function in derived class
  bool                      isDuplicate(const Queue_element_base& other) const;
                            ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:46:29: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\Queue_element_base.h:23:37: note: Virtual function in base class
  virtual const UnitMessageCount_t* getUnitMessageCount() const = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:46:29: note: Function in derived class
  const UnitMessageCount_t* getUnitMessageCount() const {
                            ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:50:23: style: The function 'getUnitMessageCount' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\ControllerQueue\Queue_element_base.h:24:37: note: Virtual function in base class
  virtual UnitMessageCount_t      * getUnitMessageCount()       = 0;
                                    ^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.h:50:23: note: Function in derived class
  UnitMessageCount_t* getUnitMessageCount() {
                      ^
src\src\Helpers\ESPEasy_time_calc.h:46:42: style: Parameter 'timestamp' can be declared as reference to const [constParameterReference]
inline int64_t usecPassedSince(uint64_t& timestamp) { //-V669
                                         ^
src\src\Helpers\ESPEasy_time_calc.h:59:47: style: Parameter 'timestamp' can be declared as reference to const [constParameterReference]
inline int32_t usecPassedSince_fast(uint32_t& timestamp) { //-V669
                                              ^
src\_C001.cpp:137:123: style: Parameter 'ControllerSettings' can be declared as reference to const [constParameterReference]
bool do_process_c001_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
                                                                                                                          ^
src\src\Globals\Services.h:19:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP8266WiFi.h>
^
src\src\Globals\Services.h:20:0: information: Include file: <ESP8266WebServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP8266WebServer.h>
^
src\src\Globals\Services.h:24:0: information: Include file: <ESP8266HTTPUpdateServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP8266HTTPUpdateServer.h>
^
src\src\WebServer\common.h:20:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP8266WiFi.h>
^
src\src\WebServer\common.h:21:0: information: Include file: <ESP8266WebServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP8266WebServer.h>
^
src\src\Helpers\FS_Helper.h:51:0: information: Include file: <spi_flash.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <spi_flash.h>
^
src\src\Helpers\Networking.h:12:0: information: Include file: <ESP8266HTTPClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESP8266HTTPClient.h>
^
src\src\Globals\Services.h:34:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <WiFi.h>
^
src\src\Globals\Services.h:35:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <FS.h>
^
src\src\Globals\Services.h:36:0: information: Include file: <WebServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <WebServer.h>
^
src\src\Globals\Services.h:40:0: information: Include file: <ESP32HTTPUpdateServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <ESP32HTTPUpdateServer.h>
^
src\src\WebServer\common.h:15:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <WiFi.h>
^
src\src\WebServer\common.h:16:0: information: Include file: <WebServer.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <WebServer.h>
^
src\src\Helpers\RulesHelper.h:24:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\DataStructs\SettingsStruct.h:20:0: information: Include file: <hal/spi_types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <hal/spi_types.h>
^
src\_C002.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\ExecuteCommand.h:9:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\_C002.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C003.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C003.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C004.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C004.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C005.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\MQTT.h:13:0: information: Include file: <WiFiClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <WiFiClient.h>
^
src\src\Globals\MQTT.h:14:0: information: Include file: <PubSubClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <PubSubClient.h>
^
src\_C005.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C005.cpp:136:55: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
        ControllerSettingsStruct*controllerSettings = (ControllerSettingsStruct *)(event->Data);
                                                      ^
src\_C006.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C006.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C007.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C007.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C008.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C008.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C008.cpp:161:123: style: Parameter 'ControllerSettings' can be declared as reference to const [constParameterReference]
bool do_process_c008_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
                                                                                                                          ^
src\_C009.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C009.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C009.cpp:114:123: style: Parameter 'ControllerSettings' can be declared as reference to const [constParameterReference]
bool do_process_c009_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
                                                                                                                          ^
src\_C010.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C010.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C011.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\usb\usb_hid_rfid.h:4:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\usb\usb_hid_rfid.h:7:0: information: Include file: "usb/usb_host.h" not found. [missingInclude]
#include "usb/usb_host.h"
^
src\usb\usb_hid_rfid.h:10:0: information: Include file: "hid_host.h" not found. [missingInclude]
#include "hid_host.h"
^
src\usb\usb_hid_rfid.h:11:0: information: Include file: "hid_usage_keyboard.h" not found. [missingInclude]
#include "hid_usage_keyboard.h"
^
src\_C011.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C012.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C012.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C013.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\NodeStruct.h:10:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\NodeStruct.h:11:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\_C013.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\ShortChecksumType.h:13:3: style: Struct 'ShortChecksumType' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ShortChecksumType(uint8_t checksum[4]);
  ^
src\_C013.cpp:244:16: warning: Either the condition 'event->Data!=nullptr' is redundant or there is possible null pointer dereference: event->Data. [nullPointerRedundantCheck]
  switch (event->Data[1]) {
               ^
src\_C013.cpp:227:22: note: Assuming that condition 'event->Data!=nullptr' is not redundant
    if ((event->Data != nullptr) &&
                     ^
src\_C013.cpp:244:16: note: Null pointer dereference
  switch (event->Data[1]) {
               ^
src\_C013.cpp:222:39: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void C013_Receive(struct EventStruct *event) {
                                      ^
src\_C014.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 567 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C014.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C015.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C015.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C016.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C016.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C017.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C017.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_C018.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_C018.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_N001_Email.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\NotifierStructs\N001_data_struct.h:14:0: information: Include file: <base64.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <base64.h>
^
src\src\DataStructs\NotificationSettingsStruct.h:8:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory> // For std::shared_ptr
^
src\src\Globals\NPlugins.h:15:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Globals\NPlugins.h:16:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\_N001_Email.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\_N001_Email.cpp:73:58: style: C-style pointer casting [cstyleCast]
      LoadNotificationSettings(event->NotificationIndex, (uint8_t *)NotificationSettings.get(), sizeof(NotificationSettingsStruct));
                                                         ^
src\_N002_Buzzer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 470 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_N002_Buzzer.cpp:62:60: style: C-style pointer casting [cstyleCast]
        LoadNotificationSettings(event->NotificationIndex, (uint8_t *)NotificationSettings.get(), sizeof(NotificationSettingsStruct));
                                                           ^
src\_N002_Buzzer.cpp:20:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool NPlugin_002(NPlugin::Function function, struct EventStruct *event, String& string)
                                                                 ^
src\src\Helpers\FS_Helper.h:25:0: information: Include file: <SPIFFS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <SPIFFS.h>
^
src\_Plugin_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\_Plugin_Helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\custom\custom.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\custom\custom.cpp:4:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src\custom\custom.cpp:5:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\custom\custom.cpp:6:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\custom\custom.h:16:0: information: Include file: "generated/gui_guider.h" not found. [missingInclude]
#include "generated/gui_guider.h"
^
src\custom\custom.h:42:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFi.h>
^
src\custom\custom.h:43:0: information: Include file: <HTTPClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <HTTPClient.h>
^
src\custom\custom.h:44:0: information: Include file: <ArduinoJson.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ArduinoJson.h>
^
src\custom\custom.h:45:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\custom\custom.cpp:11:0: information: Include file: <HTTPClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <HTTPClient.h>
^
src\custom\custom.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\custom\custom.cpp:369:25: style: Parameter 'ui' can be declared as pointer to const [constParameterPointer]
void custom_init(lv_ui *ui)
                        ^
src\generated\gui_guider.h:16:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\events_init.c:11:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src\generated\events_init.c:12:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\events_init.c:18:0: information: Include file: "custom/custom.h" not found. [missingInclude]
#include "custom/custom.h"
^
src\generated\gui_guider.h:80:1: error: There is an unknown macro here somewhere. Configuration is required. If LV_FONT_DECLARE is a macro then please configure it. [unknownMacro]
LV_FONT_DECLARE(lv_font_OswaldRegular_16)
^
src\generated\gui_guider.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\gui_guider.c:11:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src\generated\widgets_init.h:16:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_12.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_12.c:8:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_16.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_16.c:8:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_30.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_30.c:8:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_40.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_OswaldRegular_40.c:8:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_Oswald_Reg_20.c:10:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
 #include "lvgl/lvgl.h"
^
src\generated\guider_fonts\lv_font_Oswald_Reg_20.c:8:0: information: Include file: "lvgl.h" not found. [missingInclude]
 #include "lvgl.h"
^
src\generated\guider_fonts\lv_font_montserratMedium_16.c:15:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\guider_fonts\lv_font_montserratMedium_16.c:13:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\images\_GRANDSTARRlogo_RGB565A8_420x90.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_ready_RGB565A8_100x100.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_saved_RGB565A8_96x62.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_wifi_full_signal_RGB565A8_35x35.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_wifi_lost_signal_RGB565A8_35x35.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_wifi_low1_RGB565A8_35x35.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\images\_wifi_low2_signal_RGB565A8_35x35.c:12:0: information: Include file: "lvgl/lvgl.h" not found. [missingInclude]
    #include "lvgl/lvgl.h"
^
src\generated\setup_scr_screen_logo.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\setup_scr_screen_logo.c:11:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src\generated\setup_scr_screen_logo.c:15:0: information: Include file: "custom.h" not found. [missingInclude]
#include "custom.h"
^
src\generated\setup_scr_screen_logo.c:16:0: information: Include file: "custom/custom.h" not found. [missingInclude]
#include "custom/custom.h"
^
src\generated\setup_scr_screen_main.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\setup_scr_screen_main.c:11:0: information: Include file: <stdio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdio.h>
^
src\generated\setup_scr_screen_main.c:15:0: information: Include file: "custom.h" not found. [missingInclude]
#include "custom.h"
^
src\generated\widgets_init.c:10:0: information: Include file: "lvgl.h" not found. [missingInclude]
#include "lvgl.h"
^
src\generated\widgets_init.c:13:0: information: Include file: <stdlib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdlib.h>
^
src\generated\widgets_init.c:14:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
src\main.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 556 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\main.cpp:7:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\main.cpp:301:0: information: Include file: <ArduinoJson.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ArduinoJson.h>
^
src\src\Helpers\ESPEasy_NVS_Helper.h:9:0: information: Include file: <Preferences.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Preferences.h>
^
src\src\Helpers\Hardware_GPIO.h:8:0: information: Include file: "soc/soc_caps.h" not found. [missingInclude]
#include "soc/soc_caps.h"
^
src\src\Helpers\Networking.h:15:0: information: Include file: <HTTPClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <HTTPClient.h>
^
src\src\ESPEasyCore\ESPEasyWifi.h:10:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <WiFi.h>
^
src\src\ESPEasyCore\ESPEasyWifi.h:7:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\src\Commands\Blynk.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Common.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Common.h:4:0: information: Include file: <ctype.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctype.h>
^
src\src\Commands\Common.h:12:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Commands\Common.cpp:3:0: information: Include file: <ctype.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctype.h>
^
src\src\Commands\Common.cpp:4:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Commands\Common.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\WiFi_AP_Candidate.h:21:3: style: Struct 'WiFi_AP_Candidate' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  WiFi_AP_Candidate(uint8_t networkItem);
  ^
src\src\Commands\Common.cpp:42:42: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
String return_result(struct EventStruct *event, const String& result)
                                         ^
src\src\Commands\Common.cpp:54:67: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * return_see_serial(struct EventStruct *event)
                                                                  ^
src\src\Commands\Controller.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Controller.cpp:18:45: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool validControllerVar(struct EventStruct *event, controllerIndex_t& controllerIndex)
                                            ^
src\src\Commands\Diagnostic.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 301 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Diagnostic.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Commands\Diagnostic.h:5:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Globals\Statistics.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Commands\Diagnostic.cpp:30:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Commands\Diagnostic.cpp:31:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Commands\Diagnostic.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\I2CTypes.h:13:3: style: Struct 'I2Cdata' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  I2Cdata(uint8_t length) : start_reg(0) {
  ^
src\src\Commands\Diagnostic.cpp:54:13: style: C-style pointer casting [cstyleCast]
  ramtest = (char *)malloc(size);
            ^
src\src\Commands\Diagnostic.cpp:156:45: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
String Command_logentry(struct EventStruct *event, const char *Line)
                                            ^
src\src\Commands\ExecuteCommand.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\ExecuteCommand.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\GPIO.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 233 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\GPIO.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\GPIO.cpp:370:67: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_GPIO_Tone(struct EventStruct *event, const char *Line)
                                                                  ^
src\src\Commands\GPIO.cpp:777:94: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
range_pattern_helper_data range_pattern_helper_shared(pluginID_t plugin, struct EventStruct *event, const char *Line, bool isWritePattern)
                                                                                             ^
src\src\Commands\GPIO.cpp:28:0: information: Include file: <core_esp8266_waveform.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <core_esp8266_waveform.h>
^
src\src\Commands\HTTP.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\HTTP.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\HTTP.cpp:21:70: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* httpEmitToHTTP(struct EventStruct        *event,
                                                                     ^
src\src\Commands\InternalCommands.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 588 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Servo.h:8:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <map>
^
src\src\Commands\Servo.h:9:0: information: Include file: <Servo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Servo.h>
^
src\src\Commands\WiFi.h:4:0: information: Include file: <WString.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WString.h>
^
src\src\Commands\InternalCommands.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\InternalCommands.cpp:135:3: performance: Variable 'cmd_lc' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  cmd_lc = cmd;
  ^
src\src\Commands\InternalCommands_decoder.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 248 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\InternalCommands_decoder.cpp:17:35: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char Internal_commands_ab[] PROGMEM =
                                  ^
src\src\Commands\MQTT.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\MQTT.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\MQTT.cpp:100:72: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_MQTT_Subscribe(struct EventStruct *event, const char* Line)
                                                                       ^
src\src\Commands\Networks.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\NetworkState.h:6:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Globals\NetworkState.h:7:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\WebServer\AccessControl.h:6:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Commands\Networks.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\Notifications.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Notifications.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\OneWire.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\OneWire.cpp:13:45: style: The scope of the variable 'output' can be reduced. [variableScope]
  int pinnr; bool input; bool output1; bool output; bool warning;
                                            ^
src\src\Commands\Provisioning.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 223 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\RTC.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\RTC.cpp:15:67: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_RTC_Clear(struct EventStruct *event, const char* Line)
                                                                  ^
src\src\Commands\RTC.cpp:21:84: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_RTC_resetFlashWriteCounter(struct EventStruct *event, const char* Line)
                                                                                   ^
src\src\Commands\Rules.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Rules.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Rules_calculate.h:70:50: portability: Undefined behaviour, pointer arithmetic 'globalstack-1' is out of bounds. [pointerOutOfBounds]
  ESPEASY_RULES_FLOAT_TYPE *sp     = globalstack - 1;
                                                 ^
src\src\Commands\Rules.cpp:38:31: style: C-style pointer casting [cstyleCast]
                              (bool *)&Settings.UseRules,
                              ^
src\src\Commands\Rules.cpp:113:28: style: The scope of the variable 'result' can be reduced. [variableScope]
  ESPEASY_RULES_FLOAT_TYPE result = 1;
                           ^
src\src\Commands\Rules.cpp:28:12: style: Local variable 'event' shadows outer argument [shadowArgument]
    String event;
           ^
src\src\Commands\Rules.cpp:23:71: note: Shadowed declaration
const __FlashStringHelper * Command_Rules_Execute(struct EventStruct *event, const char *Line)
                                                                      ^
src\src\Commands\Rules.cpp:28:12: note: Shadow variable
    String event;
           ^
src\src\Commands\Rules.cpp:53:70: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Rules_Events(struct EventStruct *event, const char *Line)
                                                                     ^
src\src\Commands\SDCARD.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Servo.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Servo.cpp:19:0: information: Include file: <Servo.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Servo.h>
^
src\src\Commands\Settings.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Settings.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\Settings.cpp:78:71: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Settings_Save(struct EventStruct *event, const char* Line)
                                                                      ^
src\src\Commands\Settings.cpp:84:71: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Settings_Load(struct EventStruct *event, const char* Line)
                                                                      ^
src\src\Commands\Settings.cpp:107:79: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Settings_FactoryReset(struct EventStruct *event, const char* Line)
                                                                              ^
src\src\Commands\System.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\System.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\System.cpp:15:72: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_System_NoSleep(struct EventStruct *event, const char* Line)
                                                                       ^
src\src\Commands\System.cpp:23:74: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_System_deepSleep(struct EventStruct *event, const char* Line)
                                                                         ^
src\src\Commands\System.cpp:42:76: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_System_Erase_RFcal(struct EventStruct *event, const char* Line)
                                                                           ^
src\src\Commands\System.cpp:51:85: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_System_Erase_SDK_WiFiconfig(struct EventStruct *event, const char* Line)
                                                                                    ^
src\src\Commands\Tasks.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 563 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Tasks.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\Tasks.cpp:394:12: style: The scope of the variable 'msecFromNow' can be reduced. [variableScope]
  uint32_t msecFromNow = 0;
           ^
src\src\Commands\Tasks.cpp:25:44: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool validTaskIndexVar(struct EventStruct *event, taskIndex_t& taskIndex)
                                           ^
src\src\Commands\Tasks.cpp:170:71: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Task_ClearAll(struct EventStruct *event, const char *Line)
                                                                      ^
src\src\Commands\Tasks.cpp:63:30: style: Variable 'tmpTaskIndex' is assigned a value that is never used. [unreadVariable]
    taskIndex_t tmpTaskIndex = taskIndex;
                             ^
src\src\Commands\Tasks.cpp:83:30: style: Variable 'tmpTaskIndex' is assigned a value that is never used. [unreadVariable]
    taskIndex_t tmpTaskIndex = taskIndex;
                             ^
src\src\Commands\Time.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Time.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\Timer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\Timer.cpp:35:67: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Timer_Set(struct EventStruct *event, const char *Line)
                                                                  ^
src\src\Commands\Timer.cpp:44:71: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Timer_Set_ms (struct EventStruct *event, const char* Line)
                                                                      ^
src\src\Commands\Timer.cpp:53:73: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Loop_Timer_Set (struct EventStruct *event, const char* Line)
                                                                        ^
src\src\Commands\Timer.cpp:67:76: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Loop_Timer_Set_ms (struct EventStruct *event, const char* Line)
                                                                           ^
src\src\Commands\Timer.cpp:81:79: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Loop_Timer_SetAndRun (struct EventStruct *event, const char* Line)
                                                                              ^
src\src\Commands\Timer.cpp:95:82: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Loop_Timer_SetAndRun_ms (struct EventStruct *event, const char* Line)
                                                                                 ^
src\src\Commands\Timer.cpp:109:69: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Timer_Pause(struct EventStruct *event, const char *Line)
                                                                    ^
src\src\Commands\Timer.cpp:120:70: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Timer_Resume(struct EventStruct *event, const char *Line)
                                                                     ^
src\src\Commands\Timer.cpp:131:63: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * Command_Delay(struct EventStruct *event, const char *Line)
                                                              ^
src\src\Commands\UDP.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\UDP.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\UDP.cpp:20:31: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
                              (bool *)&Settings.UDPPort,
                              ^
src\src\Commands\UDP.cpp:26:65: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_UDP_Test(struct EventStruct *event, const char *Line)
                                                                ^
src\src\Commands\WiFi.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 227 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\WiFiEventData.h:16:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\WiFiEventData.h:23:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src\src\Globals\ESPEasyWiFiEvent.h:10:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:11:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Commands\WiFi.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\WiFi.cpp:66:51: style: C-style pointer casting [cstyleCast]
                                                  (bool *)&includeHiddenSSID,
                                                  ^
src\src\Commands\WiFi.cpp:75:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_Scan(struct EventStruct *event, const char *Line)
                                                                 ^
src\src\Commands\WiFi.cpp:81:69: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_Connect(struct EventStruct *event, const char *Line)
                                                                    ^
src\src\Commands\WiFi.cpp:87:72: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_Disconnect(struct EventStruct *event, const char *Line)
                                                                       ^
src\src\Commands\WiFi.cpp:95:68: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_APMode(struct EventStruct *event, const char *Line)
                                                                   ^
src\src\Commands\WiFi.cpp:101:69: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_STAMode(struct EventStruct *event, const char *Line)
                                                                    ^
src\src\Commands\WiFi.cpp:136:69: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_Wifi_AllowAP(struct EventStruct *event, const char *Line)
                                                                    ^
src\src\Commands\WiFi.cpp:144:67: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper* Command_WiFi_Erase(struct EventStruct *event, const char *Line)
                                                                  ^
src\src\DataStructs\WiFiEventData.h:19:0: information: Include file: <ESP8266WiFiGeneric.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESP8266WiFiGeneric.h>
^
src\src\DataStructs\WiFiEventData.h:20:0: information: Include file: <ESP8266WiFiType.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESP8266WiFiType.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:22:0: information: Include file: <ESP8266WiFiGeneric.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESP8266WiFiGeneric.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:23:0: information: Include file: <ESP8266WiFiType.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESP8266WiFiType.h>
^
src\src\DataStructs\WiFiEventData.h:10:0: information: Include file: <esp_event.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp_event.h>
^
src\src\DataStructs\WiFiEventData.h:11:0: information: Include file: <WiFiGeneric.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <WiFiGeneric.h>
^
src\src\DataStructs\WiFiEventData.h:12:0: information: Include file: <WiFiType.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <WiFiType.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:15:0: information: Include file: <esp_event.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp_event.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:16:0: information: Include file: <WiFiGeneric.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <WiFiGeneric.h>
^
src\src\Globals\ESPEasyWiFiEvent.h:17:0: information: Include file: <WiFiType.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <WiFiType.h>
^
src\src\Commands\i2c.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\i2c.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Commands\wd.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Commands\wd.cpp:14:0: information: Include file: <Wire.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Wire.h>
^
src\src\ControllerQueue\C011_queue_element.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\C015_queue_element.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\C016_queue_element.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\C018_queue_element.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\ControllerDelayHandlerStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\ControllerDelayHandlerStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ControllerQueue\DelayQueueElements.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 573 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\DelayQueueElements.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ControllerQueue\MQTT_queue_element.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\Queue_element_base.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ControllerQueue\SimpleQueueElement_formatted_Strings.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ControllerQueue\SimpleQueueElement_string_only.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Controller_config\C018_config.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Controller_config\C018_config.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Controller_struct\C018_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Controller_struct\C018_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\CustomBuild\CompiletimeDefines.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\C013_p2p_SensorDataStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\C013_p2p_SensorDataStruct.cpp:67:15: style: Variable 'sourceNode' can be declared as pointer to const [constVariablePointer]
  NodeStruct *sourceNode = Nodes.getNode(data[2]); // sourceUnit
              ^
src\src\Helpers\ESPEasyMutex.h:18:0: information: Include file: <mutex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <mutex>
^
src\src\DataStructs\C013_p2p_SensorInfoStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\C013_p2p_SensorInfoStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\C013_p2p_SensorInfoStruct.cpp:127:17: style: Variable 'sourceNode' can be declared as pointer to const [constVariablePointer]
    NodeStruct *sourceNode = Nodes.getNode(data[2]); // sourceUnit
                ^
src\src\DataStructs\CRCStruct.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\DataStructs\CRCStruct.cpp:3:0: information: Include file: <string.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string.h>
^
src\src\DataStructs\Caches.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 231 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\WiFi_AP_CandidatesList.h:8:0: information: Include file: <list> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <list>
^
src\src\DataStructs\Caches.cpp:12:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\DataStructs\Caches.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\ChartJS_dataset_config.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ChecksumType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ChecksumType.cpp:5:0: information: Include file: <MD5Builder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <MD5Builder.h>
^
src\src\DataStructs\ChecksumType.cpp:12:36: style: Parameter 'checksum' can be declared as const array [constParameter]
ChecksumType::ChecksumType(uint8_t checksum[16])
                                   ^
src\src\DataStructs\ControllerSettingsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ControllerSettingsStruct.cpp:13:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\ControllerSettingsStruct.cpp:14:0: information: Include file: <WString.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WString.h>
^
src\src\DataStructs\ControllerSettingsStruct.cpp:15:0: information: Include file: <WiFiClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiClient.h>
^
src\src\DataStructs\ControllerSettingsStruct.cpp:16:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\DataStructs\ControllerSettingsStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\DeviceStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\DeviceStruct.cpp:5:15: warning: Member variable 'DeviceStruct::PinDirection_allBits' is not initialized in the constructor. [uninitMemberVar]
DeviceStruct::DeviceStruct() :
              ^
src\src\DataStructs\DeviceStruct.cpp:5:15: warning: Member variable 'DeviceStruct::Pin1Direction' is not initialized in the constructor. [uninitMemberVar]
DeviceStruct::DeviceStruct() :
              ^
src\src\DataStructs\DeviceStruct.cpp:5:15: warning: Member variable 'DeviceStruct::Pin2Direction' is not initialized in the constructor. [uninitMemberVar]
DeviceStruct::DeviceStruct() :
              ^
src\src\DataStructs\DeviceStruct.cpp:5:15: warning: Member variable 'DeviceStruct::Pin3Direction' is not initialized in the constructor. [uninitMemberVar]
DeviceStruct::DeviceStruct() :
              ^
src\src\DataStructs\DeviceStruct.cpp:5:15: warning: Member variable 'DeviceStruct::PinDirection_unused' is not initialized in the constructor. [uninitMemberVar]
DeviceStruct::DeviceStruct() :
              ^
src\src\DataStructs\ESPEasyControllerCache_CSV_dumper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ESPEasy_EventStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ESPEasy_EventStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\ESPEasy_packed_raw_data.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ESPeasyControllerCache.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\EthernetEventData.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\EventQueue.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\EventQueue.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\ExtendedControllerCredentialsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefaultPref.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefault_CDN_customurl_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 216 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefault_LogConsoleSettings_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefault_Network_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefault_UnitName_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\FactoryDefault_WiFi_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\GpioFactorySettingsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\I2CTypes.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\LogEntry.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\LogStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\MAC_address.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Modbus.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Modbus.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\Modbus.cpp:109:16: style: Local variable 'RXavailable' shadows outer variable [shadowVariable]
  unsigned int RXavailable = 0;
               ^
src\src\DataStructs\Modbus.h:67:16: note: Shadowed declaration
  unsigned int RXavailable  = 0;
               ^
src\src\DataStructs\Modbus.cpp:109:16: note: Shadow variable
  unsigned int RXavailable = 0;
               ^
src\src\DataStructs\NTP_candidate.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\NTP_candidate.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\NTP_packet.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\NTP_packet.h:4:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\src\DataStructs\NodeStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 227 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\NodeStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\NodeStruct.cpp:89:24: style: Condition 'markedAsPriority!=other.markedAsPriorityPeer()' is always false [knownConditionTrueFalse]
  if (markedAsPriority != other.markedAsPriorityPeer()) {
                       ^
src\src\DataStructs\NodeStruct.cpp:88:53: note: Calling function 'markedAsPriorityPeer' returns 0
  const bool markedAsPriority = markedAsPriorityPeer();
                                                    ^
src\src\DataStructs\NodeStruct.cpp:88:53: note: Assignment 'markedAsPriority=markedAsPriorityPeer()', assigned value is 0
  const bool markedAsPriority = markedAsPriorityPeer();
                                                    ^
src\src\DataStructs\NodeStruct.cpp:89:24: note: Condition 'markedAsPriority!=other.markedAsPriorityPeer()' is always false
  if (markedAsPriority != other.markedAsPriorityPeer()) {
                       ^
src\src\DataStructs\NodesHandler.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 233 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\NodesHandler.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\NodesHandler.cpp:580:11: style: Condition 'mustErase' is always true [knownConditionTrueFalse]
      if (mustErase) {
          ^
src\src\DataStructs\NodesHandler.cpp:567:24: note: Assignment 'mustErase=true', assigned value is 1
      bool mustErase = true;
                       ^
src\src\DataStructs\NodesHandler.cpp:580:11: note: Condition 'mustErase' is always true
      if (mustErase) {
          ^
src\src\DataStructs\NodesHandler.cpp:55:19: style: Variable 'match_sta' is assigned a value that is never used. [unreadVariable]
        match_sta = sta;
                  ^
src\src\DataStructs\NodesHandler.cpp:57:18: style: Variable 'match_ap' is assigned a value that is never used. [unreadVariable]
        match_ap = ap;
                 ^
src\src\DataStructs\NotificationSettingsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PinMode.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PluginStats.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PluginStats.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\PluginStats.cpp:25:5: warning: Class 'PluginStats' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
    _samples = new (ptr) PluginStatsBuffer_t();
    ^
src\src\DataStructs\PluginStats.cpp:25:5: warning: Class 'PluginStats' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
    _samples = new (ptr) PluginStatsBuffer_t();
    ^
src\src\DataStructs\PluginStats_Config.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PluginStats_array.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PluginStats_array.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\PluginStats_timestamp.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PluginTaskData_base.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 216 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\PortStatusStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ProtocolStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesMQTT' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesAccount' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesPassword' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesTemplate' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesID' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::Custom' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesHost' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesPort' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesQueue' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesCheckReply' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesTimeout' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesSampleSets' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::usesExtCreds' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::needsNetwork' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::allowsExpire' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::allowLocalSystemTime' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dontUseBit16' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::mqttAutoDiscover' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dontUseBit18' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy19' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy20' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy21' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy22' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy23' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy24' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy25' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy26' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy27' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy28' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy29' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy30' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dummy31' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::dontUseBit17' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProtocolStruct.cpp:3:17: warning: Member variable 'ProtocolStruct::allowSendDerived' is not initialized in the constructor. [uninitMemberVar]
ProtocolStruct::ProtocolStruct() :
                ^
src\src\DataStructs\ProvisioningStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\RTCStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\RTC_cache_handler_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 223 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\RulesEventCache.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\RulesEventCache.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\SchedulerTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_ConstIntervalTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_ConstIntervalTimerID.h:9:3: style: Struct 'ConstIntervalTimerID' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  ConstIntervalTimerID(SchedulerIntervalTimer_e timer) :
  ^
src\src\DataStructs\Scheduler_GPIOTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_IntendedRebootTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_IntendedRebootTimerID.h:9:3: style: Struct 'IntendedRebootTimerID' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  IntendedRebootTimerID(IntendedRebootReason_e reason);
  ^
src\src\DataStructs\Scheduler_PluginDeviceTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 285 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_PluginTaskTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_RulesTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_RulesTimerID.h:7:3: style: Struct 'RulesTimerID' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  RulesTimerID(unsigned int timerIndex);
  ^
src\src\DataStructs\Scheduler_SystemEventQueueTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_TaskDeviceTimerID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Scheduler_TaskDeviceTimerID.h:13:3: style: Struct 'TaskDeviceTimerID' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TaskDeviceTimerID(taskIndex_t taskIndex);
  ^
src\src\DataStructs\SecurityStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ShortChecksumType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\ShortChecksumType.cpp:5:0: information: Include file: <MD5Builder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <MD5Builder.h>
^
src\src\DataStructs\ShortChecksumType.cpp:22:46: style: Parameter 'checksum' can be declared as const array [constParameter]
ShortChecksumType::ShortChecksumType(uint8_t checksum[4])
                                             ^
src\src\DataStructs\SystemTimerStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\TimeChangeRule.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\TimingStats.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\TimingStats.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\UnitMessageCount.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\UserVarStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\UserVarStruct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\UserVarStruct.cpp:342:12: style: Local variable 'it' shadows outer variable [shadowVariable]
      auto it            = _preprocessedFormula.find(key);
           ^
src\src\DataStructs\UserVarStruct.cpp:332:8: note: Shadowed declaration
  auto it = _computed.find(taskIndex);
       ^
src\src\DataStructs\UserVarStruct.cpp:342:12: note: Shadow variable
      auto it            = _preprocessedFormula.find(key);
           ^
src\src\DataStructs\UserVarStruct.cpp:350:12: style: Local variable 'it' shadows outer variable [shadowVariable]
      auto it            = _prevValue.find(key);
           ^
src\src\DataStructs\UserVarStruct.cpp:332:8: note: Shadowed declaration
  auto it = _computed.find(taskIndex);
       ^
src\src\DataStructs\UserVarStruct.cpp:350:12: note: Shadow variable
      auto it            = _prevValue.find(key);
           ^
src\src\DataStructs\Web_StreamingBuffer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\Web_StreamingBuffer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\Web_StreamingBuffer.cpp:400:33: style: Variable 'timeout' is assigned a value that is never used. [unreadVariable]
  unsigned int timeout          = 100;
                                ^
src\src\DataStructs\Web_StreamingBuffer.cpp:401:33: style: Variable 'freeBeforeSend' is assigned a value that is never used. [unreadVariable]
  const uint32_t freeBeforeSend = ESP.getFreeHeap();
                                ^
src\src\DataStructs\Web_StreamingBuffer.cpp:403:28: style: Variable 'beginWait' is assigned a value that is never used. [unreadVariable]
  const uint32_t beginWait = millis();
                           ^
src\src\DataStructs\Web_StreamingBuffer.cpp:400:16: style: Variable 'timeout' is assigned a value that is never used. [unreadVariable]
  unsigned int timeout          = 100;
               ^
src\src\DataStructs\Web_StreamingBuffer.cpp:401:18: style: Variable 'freeBeforeSend' is assigned a value that is never used. [unreadVariable]
  const uint32_t freeBeforeSend = ESP.getFreeHeap();
                 ^
src\src\DataStructs\Web_StreamingBuffer.cpp:403:18: style: Variable 'beginWait' is assigned a value that is never used. [unreadVariable]
  const uint32_t beginWait = millis();
                 ^
src\src\DataStructs\tcp_cleanup.h:13:0: information: Include file: <md5.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <md5.h>
^
src\src\DataStructs\WiFiEventData.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 228 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\WiFiEventData.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\WiFi_AP_Candidate.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\WiFi_AP_Candidate.cpp:87:3: performance: Variable 'ssid' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
  ssid     = WiFi.SSID(networkItem);
  ^
src\src\DataStructs\WiFi_AP_Candidate.cpp:13:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\src\DataStructs\WiFi_AP_Candidate.cpp:16:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <WiFi.h>
^
src\src\DataStructs\WiFi_AP_Candidate.cpp:107:21: style: Variable 'it' can be declared as pointer to const [constVariablePointer]
  wifi_ap_record_t *it = reinterpret_cast<wifi_ap_record_t *>(WiFi.getScanInfoByIndex(networkItem));
                    ^
src\src\DataStructs\WiFi_AP_Candidates_NVS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\mBusPacket.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\mBusPacket.h:6:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\DataStructs\mBusPacket.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataStructs\mBusPacket.cpp:136:23: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
    res ^= calc_CRC32((const uint8_t *)(&id1), sizeof(uint64_t));
                      ^
src\src\DataStructs\mBusPacket.cpp:142:23: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
    res ^= calc_CRC32((const uint8_t *)(&res), sizeof(res));
                      ^
src\src\DataStructs\mBusPacket.cpp:143:23: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
    res ^= calc_CRC32((const uint8_t *)(&id2), sizeof(uint64_t));
                      ^
src\src\DataStructs\mBusPacket.cpp:72:15: style: Variable 'tmp._length' is assigned a value that is never used. [unreadVariable]
  tmp._length = 0;
              ^
src\src\DataStructs\tcp_cleanup.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs\timer_id_couple.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs_templ\SettingsStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 234 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataStructs_templ\SettingsStruct.cpp:787:36: style: Unused private function: 'SettingsStruct_tmpl::getPinBootStateIndex' [unusedPrivateFunction]
bool SettingsStruct_tmpl<N_TASKS>::getPinBootStateIndex(
                                   ^
src\src\DataStructs\SettingsStruct.h:309:8: note: Unused private function: 'SettingsStruct_tmpl::getPinBootStateIndex'
  bool getPinBootStateIndex(
       ^
src\src\DataStructs_templ\SettingsStruct.cpp:787:36: note: Unused private function: 'SettingsStruct_tmpl::getPinBootStateIndex'
bool SettingsStruct_tmpl<N_TASKS>::getPinBootStateIndex(
                                   ^
src\src\DataTypes\CPluginID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\ControllerIndex.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\DeviceIndex.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\ESPEasyFileType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\ESPEasyTimeSource.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\EthernetParameters.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\EthernetParameters.h:55:0: information: Include file: <ETH.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ETH.h>
^
src\src\DataTypes\FormSelectorOptions.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\IntendedRebootReason.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\NPluginID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\NetworkMedium.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\NodeTypeID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\NotifierIndex.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\PluginID.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\ProtocolIndex.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SPI_options.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 217 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SchedulerIntervalTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SchedulerPluginPtrType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SchedulerTimerType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SensorVType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SensorVType.cpp:487:50: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char mqtt_valueType_ha_deviceclass_names[] PROGMEM = // !! Offset, starting from Sensor_VType::SENSOR_TYPE_ANALOG_ONLY !!
                                                 ^
src\src\DataTypes\SettingsType.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\SettingsType.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataTypes\TLS_types.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\TaskEnabledState.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\TaskIndex.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\TaskValues_Data.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\TaskValues_Data.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\DataTypes\TimeSource.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\DataTypes\WiFiConnectionProtocol.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\Controller.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 575 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\Controller.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\Controller.cpp:117:35: style: Parameter 'c_topic' can be declared as pointer to const. However it seems that 'incoming_mqtt_callback' is a callback function, if 'c_topic' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
void incoming_mqtt_callback(char *c_topic, uint8_t *b_payload, unsigned int length) {
                                  ^
src\src\ESPEasyCore\Controller.cpp:408:26: note: You might need to cast the function pointer here
  MQTTclient.setCallback(incoming_mqtt_callback);
                         ^
src\src\ESPEasyCore\Controller.cpp:117:35: note: Parameter 'c_topic' can be declared as pointer to const
void incoming_mqtt_callback(char *c_topic, uint8_t *b_payload, unsigned int length) {
                                  ^
src\src\ESPEasyCore\Controller.cpp:117:53: style: Parameter 'b_payload' can be declared as pointer to const. However it seems that 'incoming_mqtt_callback' is a callback function, if 'b_payload' is declared with const you might also need to cast function pointer(s). [constParameterCallback]
void incoming_mqtt_callback(char *c_topic, uint8_t *b_payload, unsigned int length) {
                                                    ^
src\src\ESPEasyCore\Controller.cpp:408:26: note: You might need to cast the function pointer here
  MQTTclient.setCallback(incoming_mqtt_callback);
                         ^
src\src\ESPEasyCore\Controller.cpp:117:53: note: Parameter 'b_payload' can be declared as pointer to const
void incoming_mqtt_callback(char *c_topic, uint8_t *b_payload, unsigned int length) {
                                                    ^
src\src\ESPEasyCore\ESPEasyEth.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 226 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyEth.h:10:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\DataStructs\EthernetEventData.h:19:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\ESPEasyCore\ESPEasyEth.cpp:18:0: information: Include file: <ETH.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ETH.h>
^
src\src\ESPEasyCore\ESPEasyEth.cpp:19:0: information: Include file: <lwip/dns.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/dns.h>
^
src\src\ESPEasyCore\ESPEasyEth.cpp:23:0: information: Include file: <eth_phy/phy.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
 #include <eth_phy/phy.h>
^
src\src\ESPEasyCore\ESPEasyEth.cpp:26:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFi.h>
^
src\src\ESPEasyCore\ESPEasyEth.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasyEthEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyEth_ProcessEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:14:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <GPIO_Direct_Access.h>
^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:367:12: style: The scope of the variable 'key' can be reduced. [variableScope]
  uint32_t key;
           ^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:405:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i = 0;
      ^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:410:14: style: The scope of the variable 'key' can be reduced. [variableScope]
    uint32_t key;
             ^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:52:49: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool GPIO_Read_Switch_State(struct EventStruct *event) {
                                                ^
src\src\ESPEasyCore\ESPEasyGPIO.cpp:405:9: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
  int i = 0;
        ^
src\src\ESPEasyCore\ESPEasyNetwork.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyNetwork.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasyRules.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 564 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyRules.cpp:29:0: information: Include file: <math.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <math.h>
^
src\src\ESPEasyCore\ESPEasyRules.cpp:30:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\ESPEasyCore\ESPEasyRules.cpp:302:32: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char bitwise_functions[] PROGMEM = "bitread|bitset|bitclear|bitwrite|xor|and|or";
                               ^
src\src\ESPEasyCore\ESPEasyWiFiEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:6:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:25:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESP8266WiFi.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:26:0: information: Include file: <ESP8266WiFiSTA.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESP8266WiFiSTA.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:14:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:15:0: information: Include file: <WiFiSTA.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiSTA.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.h:16:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFi.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.cpp:55:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFi.h>
^
src\src\ESPEasyCore\ESPEasyWiFiEvent.cpp:288:35: style: C-style pointer casting [cstyleCast]
      WiFiEventData.markConnected((const char*) ssid_copy, info.connected.bssid, info.connected.channel);
                                  ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 241 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyWifi.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasyWifi.cpp:301:26: style: Condition 'checkAndResetWiFi()' is always true [knownConditionTrueFalse]
    if (checkAndResetWiFi()) {
                         ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:301:26: note: Calling function 'checkAndResetWiFi' returns 1
    if (checkAndResetWiFi()) {
                         ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:301:26: note: Condition 'checkAndResetWiFi()' is always true
    if (checkAndResetWiFi()) {
                         ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:496:20: style: Variable 'tx_pwr' is assigned a value that is never used. [unreadVariable]
      float tx_pwr = 0; // Will be set higher based on RSSI when needed.
                   ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:496:13: style: Variable 'tx_pwr' is assigned a value that is never used. [unreadVariable]
      float tx_pwr = 0; // Will be set higher based on RSSI when needed.
            ^
src\src\ESPEasyCore\ESPEasyWifi.cpp:1105:28: style: Variable 'show_hidden' is assigned a value that is never used. [unreadVariable]
  bool show_hidden         = true;
                           ^
src\src\ESPEasyCore\ESPEasyWifi_ProcessEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 242 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasyWifi_ProcessEvent.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_Console.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 230 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\SerialWriteBuffer.h:6:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
src\src\ESPEasyCore\ESPEasy_Console_Port.h:10:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\Helpers\Improv_Helper.h:8:0: information: Include file: <ImprovWiFiLibrary.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ImprovWiFiLibrary.h>
^
src\src\Helpers\Improv_Helper.h:10:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
src\src\Globals\Logging.h:4:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\Globals\Logging.h:5:0: information: Include file: <deque> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <deque>
^
src\src\ESPEasyCore\ESPEasy_Console.cpp:17:0: information: Include file: <ESPEasySerialPort.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESPEasySerialPort.h>
^
src\src\ESPEasyCore\ESPEasy_Console.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\SerialWriteBuffer.h:20:3: style: Class 'SerialWriteBuffer_t' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  SerialWriteBuffer_t(size_t maxSize = MAX_SERIALWRITEBUFFER_SIZE)
  ^
src\src\ESPEasyCore\ESPEasy_Console_Port.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasy_Console_Port.cpp:16:0: information: Include file: <ESPEasySerialPort.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESPEasySerialPort.h>
^
src\src\ESPEasyCore\ESPEasy_Console_Port.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_Log.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasy_Log.cpp:13:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\ESPEasyCore\ESPEasy_Log.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_backgroundtasks.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasy_backgroundtasks.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_loop.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 239 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasy_loop.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_setup.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 842 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\ESPEasy_setup.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\ESPEasyCore\ESPEasy_setup.cpp:452:8: style: Local variable 'initWiFi' shadows outer function [shadowFunction]
  bool initWiFi = active_network_medium == NetworkMedium_t::WIFI;
       ^
src\src\ESPEasyCore\ESPEasyWifi.h:113:6: note: Shadowed declaration
void initWiFi();
     ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:452:8: note: Shadow variable
  bool initWiFi = active_network_medium == NetworkMedium_t::WIFI;
       ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:120:33: style: Parameter 'arg' can be declared as pointer to const [constParameterPointer]
void sw_watchdog_callback(void *arg)
                                ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:433:17: style: Variable 'toDisable' is assigned a value that is never used. [unreadVariable]
      toDisable = disableAllNotifications(toDisable);
                ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:428:17: style: Variable 'toDisable' is assigned a value that is never used. [unreadVariable]
      toDisable = disableAllControllers(toDisable);
                ^
src\src\ESPEasyCore\Serial.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\ESPEasyCore\Serial.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\C016_ControllerCache.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\CPlugins.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\CPlugins.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\Cache.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Device.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasyEthEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasyWiFi.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasyWiFiEvent.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasy_Console.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasy_Scheduler.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ESPEasy_time.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\EventQueue.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\ExtraTaskSettings.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\GlobalMapPortStatus.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Logging.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\MQTT.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 216 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\MainLoopCommand.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\NPlugins.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\NPlugins.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\NetworkState.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Nodes.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Plugins.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 570 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Plugins.cpp:38:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Globals\Plugins.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\Plugins.cpp:333:119: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool PluginCallForTask(taskIndex_t taskIndex, uint8_t Function, EventStruct *TempEvent, String& command, EventStruct *event = nullptr) {
                                                                                                                      ^
src\src\Globals\Plugins.cpp:441:36: style: Variable 'taskData' can be declared as pointer to const [constVariablePointer]
              PluginTaskData_base *taskData = getPluginTaskData(taskIndex);
                                   ^
src\src\Globals\Plugins.cpp:466:34: style: Variable 'taskData' can be declared as pointer to const [constVariablePointer]
            PluginTaskData_base *taskData = getPluginTaskData(taskIndex);
                                 ^
src\src\Globals\Plugins.cpp:946:36: style: Variable 'taskData' can be declared as pointer to const [constVariablePointer]
              PluginTaskData_base *taskData = getPluginTaskData(event->TaskIndex);
                                   ^
src\src\Globals\Plugins.cpp:1069:32: style: Variable 'taskData' can be declared as pointer to const [constVariablePointer]
          PluginTaskData_base *taskData = getPluginTaskDataBaseClassOnly(event->TaskIndex);
                               ^
src\src\Globals\Plugins_other.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\RTC.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\RamTracker.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\RamTracker.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\ResetFactDefaultPref.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\RulesCalculate.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\RulesCalculate.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\RulesCalculate.cpp:120:20: style: Local variable 'trimTrailingZeros' shadows outer function [shadowFunction]
        const bool trimTrailingZeros = true;
                   ^
src\src\Helpers\StringConverter_Numerical.h:38:8: note: Shadowed declaration
String trimTrailingZeros(const String& value);
       ^
src\src\Globals\RulesCalculate.cpp:120:20: note: Shadow variable
        const bool trimTrailingZeros = true;
                   ^
src\src\Globals\RuntimeData.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\SecuritySettings.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Services.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Settings.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\Settings.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Globals\Statistics.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\TXBuffer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\TimeZone.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Globals\WiFi_AP_Candidates.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\AdafruitGFX_helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 619 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\AdafruitGFX_helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\AdafruitGFX_helper.h:67:0: information: Include file: <Adafruit_GFX.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_GFX.h>
^
src\src\Helpers\AdafruitGFX_helper.h:68:0: information: Include file: <Adafruit_SPITFT.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_SPITFT.h>
^
src\src\Helpers\AdafruitGFX_helper.h:69:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <FS.h>
^
src\src\Helpers\AdafruitGFX_helper.h:70:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\Helpers\AdafruitGFX_helper.cpp:16:0: information: Include file: <Fonts/TomThumb.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#    include <Fonts/TomThumb.h> // Available in Adafruit_GFX library
^
src\src\Static\Fonts\Seven_Segment24pt7b.h:3:44: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const uint8_t Seven_Segment24pt7bBitmaps[] PROGMEM = {
                                           ^
src\src\Helpers\Audio.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 227 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Audio.cpp:32:0: information: Include file: <anyrtttl.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <anyrtttl.h>
^
src\src\Helpers\Audio.cpp:33:0: information: Include file: <pitches.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <pitches.h>
^
src\src\Helpers\Audio.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Audio.cpp:60:31: style: Parameter 'melody' can be declared as reference to const [constParameterReference]
void set_rtttl_melody(String& melody) {
                              ^
src\src\Helpers\BusCmd_Handler_I2C.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\IBusCmd_Handler.h:21:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\BusCmd_Handler_I2C.h:11:0: information: Include file: <Wire.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Wire.h>
^
src\src\Helpers\BusCmd_Handler_I2C.h:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\BusCmd_Handler_I2C.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\BusCmd_Handler_I2C.cpp:6:21: warning: Member variable 'BusCmd_Handler_I2C::_ok' is not initialized in the constructor. [uninitMemberVar]
BusCmd_Handler_I2C::BusCmd_Handler_I2C(uint8_t  i2cAddress,
                    ^
src\src\Helpers\BusCmd_Handler_I2C.h:22:3: style: Class 'BusCmd_Handler_I2C' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  BusCmd_Handler_I2C(uint8_t           i2cAddress,
  ^
src\src\Helpers\BusCmd_Handler_I2C.h:25:12: style: The destructor '~BusCmd_Handler_I2C' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~BusCmd_Handler_I2C() {}
           ^
src\src\Helpers\IBusCmd_Handler.h:28:12: note: Virtual destructor in base class
  virtual ~IBusCmd_Handler() {}
           ^
src\src\Helpers\BusCmd_Handler_I2C.h:25:12: note: Destructor in derived class
  virtual ~BusCmd_Handler_I2C() {}
           ^
src\src\Helpers\BusCmd_Handler_I2C.h:27:32: style: The function 'init' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool                 init();
                               ^
src\src\Helpers\IBusCmd_Handler.h:30:32: note: Virtual function in base class
  virtual bool                 init()    = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:27:32: note: Function in derived class
  virtual bool                 init();
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:28:32: style: The function 'read8u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint8_t              read8u();
                               ^
src\src\Helpers\IBusCmd_Handler.h:31:32: note: Virtual function in base class
  virtual uint8_t              read8u()  = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:28:32: note: Function in derived class
  virtual uint8_t              read8u();
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:29:32: style: The function 'read16u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint16_t             read16u();
                               ^
src\src\Helpers\IBusCmd_Handler.h:32:32: note: Virtual function in base class
  virtual uint16_t             read16u() = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:29:32: note: Function in derived class
  virtual uint16_t             read16u();
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:30:32: style: The function 'read24u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t             read24u();
                               ^
src\src\Helpers\IBusCmd_Handler.h:33:32: note: Virtual function in base class
  virtual uint32_t             read24u() = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:30:32: note: Function in derived class
  virtual uint32_t             read24u();
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:31:32: style: The function 'read32u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t             read32u();
                               ^
src\src\Helpers\IBusCmd_Handler.h:34:32: note: Virtual function in base class
  virtual uint32_t             read32u() = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:31:32: note: Function in derived class
  virtual uint32_t             read32u();
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:32:32: style: The function 'read8uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint8_t              read8uREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:35:32: note: Virtual function in base class
  virtual uint8_t              read8uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:32:32: note: Function in derived class
  virtual uint8_t              read8uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:34:32: style: The function 'read16uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint16_t             read16uREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:37:32: note: Virtual function in base class
  virtual uint16_t             read16uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:34:32: note: Function in derived class
  virtual uint16_t             read16uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:36:32: style: The function 'read24uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t             read24uREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:39:32: note: Virtual function in base class
  virtual uint32_t             read24uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:36:32: note: Function in derived class
  virtual uint32_t             read24uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:38:32: style: The function 'read32uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t             read32uREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:41:32: note: Virtual function in base class
  virtual uint32_t             read32uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:38:32: note: Function in derived class
  virtual uint32_t             read32uREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:40:32: style: The function 'read8uB' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual std::vector<uint8_t> read8uB(uint32_t size);
                               ^
src\src\Helpers\IBusCmd_Handler.h:43:32: note: Virtual function in base class
  virtual std::vector<uint8_t> read8uB(uint32_t size)      = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:40:32: note: Function in derived class
  virtual std::vector<uint8_t> read8uB(uint32_t size);
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:41:32: style: The function 'read16uW' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual std::vector<uint16_t>read16uW(uint32_t size);
                               ^
src\src\Helpers\IBusCmd_Handler.h:44:32: note: Virtual function in base class
  virtual std::vector<uint16_t>read16uW(uint32_t size)     = 0;
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:41:32: note: Function in derived class
  virtual std::vector<uint16_t>read16uW(uint32_t size);
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:42:32: style: The function 'read8uBREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual std::vector<uint8_t> read8uBREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:45:32: note: Virtual function in base class
  virtual std::vector<uint8_t> read8uBREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:42:32: note: Function in derived class
  virtual std::vector<uint8_t> read8uBREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:45:32: style: The function 'read16uWREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual std::vector<uint16_t>read16uWREG(uint16_t reg,
                               ^
src\src\Helpers\IBusCmd_Handler.h:48:32: note: Virtual function in base class
  virtual std::vector<uint16_t>read16uWREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:45:32: note: Function in derived class
  virtual std::vector<uint16_t>read16uWREG(uint16_t reg,
                               ^
src\src\Helpers\BusCmd_Handler_I2C.h:49:18: style: The function 'readString' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual String readString(uint32_t len);
                 ^
src\src\Helpers\IBusCmd_Handler.h:52:18: note: Virtual function in base class
  virtual String readString(uint32_t len) = 0;
                 ^
src\src\Helpers\BusCmd_Handler_I2C.h:49:18: note: Function in derived class
  virtual String readString(uint32_t len);
                 ^
src\src\Helpers\BusCmd_Handler_I2C.h:50:18: style: The function 'readStringREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual String readStringREG(uint16_t reg,
                 ^
src\src\Helpers\IBusCmd_Handler.h:53:18: note: Virtual function in base class
  virtual String readStringREG(uint16_t reg,
                 ^
src\src\Helpers\BusCmd_Handler_I2C.h:50:18: note: Function in derived class
  virtual String readStringREG(uint16_t reg,
                 ^
src\src\Helpers\BusCmd_Handler_I2C.h:55:20: style: The function 'write8u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write8u(uint8_t data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:58:20: note: Virtual function in base class
  virtual bool     write8u(uint8_t data)   = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:55:20: note: Function in derived class
  virtual bool     write8u(uint8_t data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:56:20: style: The function 'write16u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write16u(uint16_t data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:59:20: note: Virtual function in base class
  virtual bool     write16u(uint16_t data) = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:56:20: note: Function in derived class
  virtual bool     write16u(uint16_t data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:57:20: style: The function 'write24u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write24u(uint32_t data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:60:20: note: Virtual function in base class
  virtual bool     write24u(uint32_t data) = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:57:20: note: Function in derived class
  virtual bool     write24u(uint32_t data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:58:20: style: The function 'write32u' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write32u(uint32_t data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:61:20: note: Virtual function in base class
  virtual bool     write32u(uint32_t data) = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:58:20: note: Function in derived class
  virtual bool     write32u(uint32_t data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:59:20: style: The function 'write8uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write8uREG(uint16_t reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:62:20: note: Virtual function in base class
  virtual bool     write8uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:59:20: note: Function in derived class
  virtual bool     write8uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:62:20: style: The function 'write16uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write16uREG(uint16_t reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:65:20: note: Virtual function in base class
  virtual bool     write16uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:62:20: note: Function in derived class
  virtual bool     write16uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:65:20: style: The function 'write24uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write24uREG(uint16_t reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:68:20: note: Virtual function in base class
  virtual bool     write24uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:65:20: note: Function in derived class
  virtual bool     write24uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:68:20: style: The function 'write32uREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual bool     write32uREG(uint16_t reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:71:20: note: Virtual function in base class
  virtual bool     write32uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:68:20: note: Function in derived class
  virtual bool     write32uREG(uint16_t reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:71:20: style: The function 'write8uB' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t write8uB(std::vector<uint8_t>data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:74:20: note: Virtual function in base class
  virtual uint32_t write8uB(std::vector<uint8_t>data)   = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:71:20: note: Function in derived class
  virtual uint32_t write8uB(std::vector<uint8_t>data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:72:20: style: The function 'write16uW' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t write16uW(std::vector<uint16_t>data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:75:20: note: Virtual function in base class
  virtual uint32_t write16uW(std::vector<uint16_t>data) = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:72:20: note: Function in derived class
  virtual uint32_t write16uW(std::vector<uint16_t>data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:73:20: style: The function 'write8uBREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t write8uBREG(uint16_t            reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:76:20: note: Virtual function in base class
  virtual uint32_t write8uBREG(uint16_t            reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:73:20: note: Function in derived class
  virtual uint32_t write8uBREG(uint16_t            reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:76:20: style: The function 'write16uWREG' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t write16uWREG(uint16_t             reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:79:20: note: Virtual function in base class
  virtual uint32_t write16uWREG(uint16_t             reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:76:20: note: Function in derived class
  virtual uint32_t write16uWREG(uint16_t             reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:80:20: style: The function 'writeString' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t writeString(const String& data);
                   ^
src\src\Helpers\IBusCmd_Handler.h:83:20: note: Virtual function in base class
  virtual uint32_t writeString(const String& data) = 0;
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:80:20: note: Function in derived class
  virtual uint32_t writeString(const String& data);
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:81:20: style: The function 'writeStringReg' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual uint32_t writeStringReg(uint16_t      reg,
                   ^
src\src\Helpers\IBusCmd_Handler.h:84:20: note: Virtual function in base class
  virtual uint32_t writeStringReg(uint16_t      reg,
                   ^
src\src\Helpers\BusCmd_Handler_I2C.h:81:20: note: Function in derived class
  virtual uint32_t writeStringReg(uint16_t      reg,
                   ^
src\src\Helpers\BusCmd_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\BusCmd_Helper.cpp:3:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <GPIO_Direct_Access.h>
^
src\src\Helpers\BusCmd_Helper.cpp:7:30: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char BusCmd_commands[] PROGMEM =
                             ^
src\src\Helpers\CRC_functions.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\CUL_interval_filter.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\CUL_stats.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Convert.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Dallas1WireHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Dallas1WireHelper.cpp:24:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <GPIO_Direct_Access.h>
^
src\src\Helpers\Dallas1WireHelper.cpp:37:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\Helpers\Dallas1WireHelper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Dallas1WireHelper.cpp:501:9: style: Condition 'isParasitePowered' is always false [knownConditionTrueFalse]
    if (isParasitePowered) {
        ^
src\src\Helpers\Dallas1WireHelper.cpp:497:30: note: Assignment 'isParasitePowered=false', assigned value is 0
    bool isParasitePowered = false;
                             ^
src\src\Helpers\Dallas1WireHelper.cpp:501:9: note: Condition 'isParasitePowered' is always false
    if (isParasitePowered) {
        ^
src\src\Helpers\Dallas1WireHelper.cpp:940:32: style: The scope of the variable 'search_direction' can be reduced. [variableScope]
  unsigned char rom_byte_mask, search_direction;
                               ^
src\src\Helpers\Dallas1WireHelper.cpp:274:15: style: Local variable 'tmpAddress' shadows outer variable [shadowVariable]
      uint8_t tmpAddress[8]{};
              ^
src\src\Helpers\Dallas1WireHelper.cpp:248:11: note: Shadowed declaration
  uint8_t tmpAddress[8]{};
          ^
src\src\Helpers\Dallas1WireHelper.cpp:274:15: note: Shadow variable
      uint8_t tmpAddress[8]{};
              ^
src\src\Helpers\Dallas1WireHelper.cpp:393:37: style: Parameter 'addr' can be declared as const array [constParameter]
void Dallas_plugin_set_addr(uint8_t addr[], taskIndex_t TaskIndex, uint8_t var_index)
                                    ^
src\src\Helpers\DeepSleep.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 226 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\DeepSleep.cpp:21:0: information: Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits.h>
^
src\src\Helpers\DeepSleep.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasyRTC.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasyRTC.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasyRTC.cpp:189:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\Helpers\ESPEasyRTC.cpp:230:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\Helpers\ESPEasyRTC.cpp:16:0: information: Include file: <user_interface.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <user_interface.h>
^
src\src\Helpers\ESPEasyStatistics.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 296 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasyStatistics.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_FactoryDefault.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 584 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_FactoryDefault.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_FactoryDefault.cpp:234:12: style: C-style pointer casting [cstyleCast]
    str2ip((char *)DEFAULT_SYSLOG_IP, Settings.Syslog_IP);
           ^
src\src\Helpers\ESPEasy_NVS_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_Storage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 583 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_Storage.cpp:571:0: error: failed to expand 'addLogMove', it is invalid to use a preprocessor directive as macro parameter [preprocessorErrorDirective]
#ifdef USE_LITTLEFS
^
src\src\Helpers\FS_Helper.h:42:0: information: Include file: <flash_hal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <flash_hal.h>
^
src\src\Helpers\FS_Helper.h:16:0: information: Include file: <LITTLEFS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
      #include <LITTLEFS.h>
^
src\src\Helpers\FS_Helper.h:33:0: information: Include file: <SD.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <SD.h>
^
src\src\DataStructs\ProvisioningStruct.h:11:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <memory> // for std::shared_ptr
^
src\src\DataTypes\TLS_types.h:7:0: information: Include file: <stdint.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdint.h>
^
src\src\DataTypes\TLS_types.h:8:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\ESPEasy_common.h:23:0: information: Include file: <umm_malloc/umm_heap_select.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  #include <umm_malloc/umm_heap_select.h>
^
src\src\DataStructs\RTC_cache_handler_struct.h:12:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\DataStructs\RTC_cache_handler_struct.h:13:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\FS_Helper.h:20:0: information: Include file: <LittleFS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #include <LittleFS.h>
^
src\src\Helpers\ESPEasy_Storage.cpp:571:1: error: failed to expand 'addLogMove', it is invalid to use a preprocessor directive as macro parameter [preprocessorErrorDirective]
#ifdef USE_LITTLEFS
^
src\src\Helpers\ESPEasy_Storage.cpp:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src\src\Helpers\ESPEasy_TouchHandler.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 572 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_TouchHandler.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_TouchHandler.h:8:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <set>
^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1696:21: style: Redundant condition: _deduplicate. '!A || (A && B)' is equivalent to '!A || B' [redundantCondition]
  if (!_deduplicate ||
                    ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:470:11: style: Condition 'success' is always true [knownConditionTrueFalse]
      if (success) {
          ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:447:15: note: Assignment 'success=true', assigned value is 1
    success = true;                                                             // Succes if matched object
              ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:470:11: note: Condition 'success' is always true
      if (success) {
          ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:218:19: style: The scope of the variable '_value' can be reduced. [variableScope]
          int16_t _value    = 0;
                  ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:569:11: style: The scope of the variable '_value' can be reduced. [variableScope]
  int16_t _value        = value;
          ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:577:17: style: The scope of the variable 'lowRange' can be reduced. [variableScope]
        int16_t lowRange  = 0;
                ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:578:17: style: The scope of the variable 'highRange' can be reduced. [variableScope]
        int16_t highRange = 100;
                ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1927:11: style: The scope of the variable 'arg' can be reduced. [variableScope]
  uint8_t arg = 3;
          ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:90:65: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void ESPEasy_TouchHandler::loadTouchObjects(struct EventStruct *event) {
                                                                ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1467:68: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool ESPEasy_TouchHandler::plugin_webform_save(struct EventStruct *event) {
                                                                   ^
src\src\Helpers\ESPEasy_checks.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 232 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_checks.cpp:34:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src\src\Helpers\ESPEasy_checks.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_math.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_math.cpp:7:0: information: Include file: <Arduino.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Arduino.h>
^
src\src\Helpers\ESPEasy_math.cpp:10:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src\src\Helpers\ESPEasy_time.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 567 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_time.cpp:39:0: information: Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <time.h>
^
src\src\Helpers\ESPEasy_time.cpp:42:0: information: Include file: <RTClib.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <RTClib.h>
^
src\src\Helpers\ESPEasy_time.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_time_calc.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_time_calc.cpp:4:0: information: Include file: <limits.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits.h>
^
src\src\Helpers\ESPEasy_time_calc.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\ESPEasy_time_zone.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\ESPEasy_time_zone.cpp:10:0: information: Include file: <time.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <time.h>
^
src\src\Helpers\ESPEasy_time_zone.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\HTTPResponseParser.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\HTTPResponseParser.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Hardware.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 257 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware.cpp:27:0: information: Include file: "../_Plugin_Helper.h" not found. [missingInclude]
#include "../_Plugin_Helper.h"
^
src\src\Helpers\Hardware.cpp:109:0: information: Include file: <SPI.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <SPI.h>
^
src\src\Helpers\Hardware.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Hardware.cpp:230:7: style: Condition 'tryInitSPI' is always true [knownConditionTrueFalse]
  if (tryInitSPI && Settings.isSPI_valid())
      ^
src\src\Helpers\Hardware.cpp:215:21: note: Assignment 'tryInitSPI=true', assigned value is 1
  bool tryInitSPI = true;
                    ^
src\src\Helpers\Hardware.cpp:230:7: note: Condition 'tryInitSPI' is always true
  if (tryInitSPI && Settings.isSPI_valid())
      ^
src\src\Helpers\Hardware.cpp:508:16: style: C-style pointer casting [cstyleCast]
    result ^= *(volatile uint32_t *)_RAND_ADDR;     // -V566
               ^
src\src\Helpers\Hardware.cpp:511:20: style: C-style pointer casting [cstyleCast]
  return result ^ *(volatile uint32_t *)_RAND_ADDR; // -V566
                   ^
src\src\Helpers\Hardware.cpp:31:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\src\Helpers\Hardware_ADC.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_ADC_cali.h:17:0: information: Include file: <esp_adc_cal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <esp_adc_cal.h>
^
src\src\Helpers\Hardware_ADC_cali.h:18:0: information: Include file: <driver/adc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <driver/adc.h>
^
src\src\Helpers\Hardware_ADC_cali.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 217 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Hardware_GPIO_ESP32.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 223 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32C2.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32C3.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32C6.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32P4.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 223 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32S2.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP32S3.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_GPIO_ESP8266.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_I2C.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 225 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_I2C.cpp:11:0: information: Include file: <Wire.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Wire.h>
^
src\src\Helpers\Hardware_I2C.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Hardware_I2C.cpp:221:28: style: Condition 'Multiplexer_ResetPin!=-1' is always true [knownConditionTrueFalse]
  if (Multiplexer_ResetPin != -1) {
                           ^
src\src\Helpers\Hardware_I2C.cpp:48:16: style: Local variable 'i2cBus' shadows outer variable [shadowVariable]
  for (uint8_t i2cBus = 0; i2cBus < getI2CBusCount(); ++i2cBus) {
               ^
src\src\Helpers\Hardware_I2C.cpp:28:17: note: Shadowed declaration
  const uint8_t i2cBus = 0;
                ^
src\src\Helpers\Hardware_I2C.cpp:48:16: note: Shadow variable
  for (uint8_t i2cBus = 0; i2cBus < getI2CBusCount(); ++i2cBus) {
               ^
src\src\Helpers\Hardware_PWM.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_PWM.cpp:319:31: style: Variable 'new_value' is assigned a value that is never used. [unreadVariable]
      const int16_t new_value = curr_value / resolution_factor;
                              ^
src\src\Helpers\Hardware_PWM.cpp:319:21: style: Variable 'new_value' is assigned a value that is never used. [unreadVariable]
      const int16_t new_value = curr_value / resolution_factor;
                    ^
src\src\Helpers\Hardware_PWM.cpp:13:0: information: Include file: <soc/soc_caps.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <soc/soc_caps.h>
^
src\src\Helpers\Hardware_PWM.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Hardware_PWM.cpp:55:57: style: Parameter 'frequency' can be declared as reference to const [constParameterReference]
uint32_t adapt_ledc_frequency_resolution_duty(uint32_t& frequency, uint8_t& resolution, uint32_t duty = 0)
                                                        ^
src\src\Helpers\Hardware_device_info.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info.cpp:322:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\Helpers\Hardware_device_info.cpp:114:19: style: Condition 'flashChipId==0' is always true [knownConditionTrueFalse]
  if (flashChipId == 0) {
                  ^
src\src\Helpers\Hardware_device_info.cpp:8:0: information: Include file: <soc/soc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <soc/soc.h>
^
src\src\Helpers\Hardware_device_info.cpp:9:0: information: Include file: <soc/efuse_reg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <soc/efuse_reg.h>
^
src\src\Helpers\Hardware_device_info.cpp:10:0: information: Include file: <soc/spi_reg.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <soc/spi_reg.h>
^
src\src\Helpers\Hardware_device_info.cpp:11:0: information: Include file: <soc/rtc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <soc/rtc.h>
^
src\src\Helpers\Hardware_device_info.cpp:33:0: information: Include file: <rom/spi_flash.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #  include <rom/spi_flash.h>
^
src\src\Helpers\Hardware_device_info.cpp:34:0: information: Include file: <rom/rtc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #  include <rom/rtc.h>
^
src\src\Helpers\Hardware_device_info.cpp:35:0: information: Include file: <bootloader_common.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
    #  include <bootloader_common.h>
^
src\src\Helpers\Hardware_device_info.cpp:327:19: style: Return value 'vendorId==0x85' is always false [knownConditionTrueFalse]
  return vendorId == 0x85; // 0x146085 PUYA
                  ^
src\src\Helpers\Hardware_device_info.cpp:325:48: note: Calling function 'getFlashChipVendorId' returns 255
  const uint8_t vendorId = getFlashChipVendorId();
                                               ^
src\src\Helpers\Hardware_device_info.cpp:325:48: note: Assignment 'vendorId=getFlashChipVendorId()', assigned value is 255
  const uint8_t vendorId = getFlashChipVendorId();
                                               ^
src\src\Helpers\Hardware_device_info.cpp:327:19: note: Return value 'vendorId==0x85' is always false
  return vendorId == 0x85; // 0x146085 PUYA
                  ^
src\src\CustomBuild\ESPEasyLimits.h:38:0: information: Include file: <hal/gpio_types.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
      #include <hal/gpio_types.h>
^
src\src\Helpers\Hardware_device_info.cpp:26:0: information: Include file: <esp32/rom/spi_flash.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
      #   include <esp32/rom/spi_flash.h>
^
src\src\Helpers\Hardware_device_info.cpp:27:0: information: Include file: <esp32/rom/rtc.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
      #   include <esp32/rom/rtc.h>
^
src\src\Helpers\Hardware_device_info.cpp:28:0: information: Include file: <esp32/spiram.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
      #   include <esp32/spiram.h>
^
src\src\Helpers\Hardware_device_info_ESP32.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32C2.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32C3.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32C5.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32C6.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32C61.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32H2.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32P4.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32S2.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP32S3.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_device_info_ESP8266.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Hardware_temperature_sensor.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 217 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\I2C_Plugin_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\I2C_Plugin_Helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\I2C_access.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\I2C_access.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Improv_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 217 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\LongTermTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\MDNS_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Memory.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Memory.cpp:75:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\Helpers\Memory.cpp:189:11: style: Condition 'res==nullptr' is always true [knownConditionTrueFalse]
  if (res == nullptr) {
          ^
src\src\Helpers\Memory.cpp:171:15: note: Assignment 'res=nullptr', assigned value is 0
  void *res = nullptr;
              ^
src\src\Helpers\Memory.cpp:189:11: note: Condition 'res==nullptr' is always true
  if (res == nullptr) {
          ^
src\src\Helpers\Memory.cpp:6:0: information: Include file: <user_interface.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <user_interface.h>
^
src\src\Helpers\Memory.cpp:15:0: information: Include file: <soc/cpu.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <soc/cpu.h>
^
src\src\Helpers\Memory.cpp:235:3: style: Class 'PSRAM_String' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PSRAM_String(size_t size) : String() {
  ^
src\src\Helpers\Memory.cpp:34:11: style: C-style pointer casting [cstyleCast]
  return ((uint8_t *)esp_cpu_get_sp()) - pxTaskGetStackStart(nullptr);
          ^
src\src\Helpers\Memory.cpp:246:19: style: C-style pointer casting [cstyleCast]
        setBuffer((char *)ptr);
                  ^
src\src\Helpers\Misc.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Misc.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Misc.cpp:308:7: style: Condition 'featureSD' is always false [knownConditionTrueFalse]
  if (featureSD
      ^
src\src\Helpers\Misc.cpp:302:22: note: Assignment 'featureSD=false', assigned value is 0
  bool   featureSD = false;
                     ^
src\src\Helpers\Misc.cpp:308:7: note: Condition 'featureSD' is always false
  if (featureSD
      ^
src\src\Helpers\Misc.cpp:18:0: information: Include file: <SD.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <SD.h>
^
src\src\Helpers\Misc.cpp:308:7: style: Condition 'featureSD' is always true [knownConditionTrueFalse]
  if (featureSD
      ^
src\src\Helpers\Misc.cpp:305:15: note: Assignment 'featureSD=true', assigned value is 1
  featureSD = true;
              ^
src\src\Helpers\Misc.cpp:308:7: note: Condition 'featureSD' is always true
  if (featureSD
      ^
src\src\Helpers\Modbus_RTU.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Modbus_RTU.h:9:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESPeasySerial.h>
^
src\src\Helpers\Modbus_RTU.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Modbus_RTU.cpp:731:52: style: Parameter 'buf' can be declared as pointer to const [constParameterPointer]
unsigned int ModbusRTU_struct::ModRTU_CRC(uint8_t *buf, int len) {
                                                   ^
src\src\Helpers\Modbus_RTU.cpp:268:32: style: Variable 'object_id' is assigned a value that is never used. [unreadVariable]
  uint8_t object_id            = 0;
                               ^
src\src\Helpers\Network.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 220 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Network.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Networking.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 585 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Networking.cpp:42:0: information: Include file: <IPAddress.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <IPAddress.h>
^
src\src\Helpers\Networking.cpp:43:0: information: Include file: <base64.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <base64.h>
^
src\src\Helpers\Networking.cpp:44:0: information: Include file: <MD5Builder.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <MD5Builder.h> // for getDigestAuth
^
src\src\Helpers\Networking.cpp:46:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\Helpers\Networking.cpp:48:0: information: Include file: <lwip/dns.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/dns.h>
^
src\src\Helpers\Networking.cpp:62:0: information: Include file: <lwip/netif.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/netif.h>
^
src\src\Helpers\Networking.cpp:100:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src\src\Helpers\Networking.cpp:993:0: information: Include file: <AddrList.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <AddrList.h>
^
src\src\Helpers\Networking.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Networking.cpp:176:23: style: C-style pointer casting [cstyleCast]
    sendUDP(destUnit, (const uint8_t *)data, dataLength);
                      ^
src\src\Helpers\Networking.cpp:181:28: style: C-style pointer casting [cstyleCast]
        sendUDP(it->first, (const uint8_t *)data, dataLength);
                           ^
src\src\Helpers\Networking.cpp:65:0: information: Include file: <lwip/opt.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/opt.h>
^
src\src\Helpers\Networking.cpp:66:0: information: Include file: <lwip/udp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/udp.h>
^
src\src\Helpers\Networking.cpp:67:0: information: Include file: <lwip/igmp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <lwip/igmp.h>
^
src\src\Helpers\Networking.cpp:68:0: information: Include file: <include/UdpContext.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <include/UdpContext.h>
^
src\src\Helpers\Numerical.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Numerical.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\OLed_helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\OLed_helper.h:4:0: information: Include file: "SSD1306.h" not found. [missingInclude]
#include "SSD1306.h"
^
src\src\Helpers\OLed_helper.h:5:0: information: Include file: "SH1106Wire.h" not found. [missingInclude]
#include "SH1106Wire.h"
^
src\src\Helpers\OLed_helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\OTA.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\OTA.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\OTA.cpp:30:29: style: Parameter 'maxSketchSize' can be declared as reference to const [constParameterReference]
bool OTA_possible(uint32_t& maxSketchSize, bool& use2step) {
                            ^
src\src\Helpers\OTA.cpp:30:50: style: Parameter 'use2step' can be declared as reference to const [constParameterReference]
bool OTA_possible(uint32_t& maxSketchSize, bool& use2step) {
                                                 ^
src\src\Helpers\PeriodicalActions.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 576 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\PeriodicalActions.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\PeriodicalActions.cpp:225:9: style: Condition 'logWiFiStatus' is always true [knownConditionTrueFalse]
    if (logWiFiStatus) {
        ^
src\src\Helpers\PeriodicalActions.cpp:215:26: note: Assignment 'logWiFiStatus=true', assigned value is 1
    bool logWiFiStatus = true;
                         ^
src\src\Helpers\PeriodicalActions.cpp:225:9: note: Condition 'logWiFiStatus' is always true
    if (logWiFiStatus) {
        ^
src\src\Helpers\PeriodicalActions.cpp:327:7: style: Condition '!handled' is always true [knownConditionTrueFalse]
  if (!handled) {
      ^
src\src\Helpers\PeriodicalActions.cpp:311:18: note: Assignment 'handled=false', assigned value is 0
  bool handled = false;
                 ^
src\src\Helpers\PeriodicalActions.cpp:327:7: note: Condition '!handled' is always true
  if (!handled) {
      ^
src\src\Helpers\PeriodicalActions.cpp:321:15: style: Variable 'handled' is assigned a value that is never used. [unreadVariable]
      handled = true;
              ^
src\src\Helpers\PortStatus.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\PortStatus.cpp:88:55: style: Condition 'it->second.monitor<=0' is always true [knownConditionTrueFalse]
    if ((it->second.task <= 0) && (it->second.monitor <= 0) && (it->second.command <= 0) &&
                                                      ^
src\src\Helpers\PortStatus.cpp:86:26: note: Assignment 'it->second.monitor=0', assigned value is 0
    it->second.monitor = 0;
                         ^
src\src\Helpers\PortStatus.cpp:88:55: note: Condition 'it->second.monitor<=0' is always true
    if ((it->second.task <= 0) && (it->second.monitor <= 0) && (it->second.command <= 0) &&
                                                      ^
src\src\Helpers\PortStatus.cpp:39:24: style: Checking if unsigned expression 'tempStatus.task' is less than zero. [unsignedLessThanZero]
  if ((tempStatus.task <= 0) && (tempStatus.monitor <= 0) && (tempStatus.command <= 0)) {
                       ^
src\src\Helpers\PortStatus.cpp:39:53: style: Checking if unsigned expression 'tempStatus.monitor' is less than zero. [unsignedLessThanZero]
  if ((tempStatus.task <= 0) && (tempStatus.monitor <= 0) && (tempStatus.command <= 0)) {
                                                    ^
src\src\Helpers\PortStatus.cpp:37:60: style: Parameter 'tempStatus' can be declared as reference to const [constParameterReference]
void savePortStatus(uint32_t key, struct portStatusStruct& tempStatus) {
                                                           ^
src\src\Helpers\PrintToLog.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\PrintToLog.h:10:3: style: Class 'PrintToLog' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  PrintToLog(uint8_t logLevel);
  ^
src\src\Helpers\PrintToString.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\RulesHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 226 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\RulesHelper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\RulesHelper.cpp:395:16: style: Variable 'done' is assigned a value that is never used. [unreadVariable]
          done = true;
               ^
src\src\Helpers\RulesMatcher.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\RulesMatcher.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Rules_calculate.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Rules_calculate.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Rules_calculate.cpp:96:26: portability: Undefined behaviour, pointer arithmetic 'globalstack-1' is out of bounds. [pointerOutOfBounds]
  if (sp != (globalstack - 1)) { // empty
                         ^
src\src\Helpers\Rules_calculate.cpp:426:20: portability: Undefined behaviour, pointer arithmetic 'globalstack-1' is out of bounds. [pointerOutOfBounds]
  sp = globalstack - 1;
                   ^
src\src\Helpers\Rules_calculate.cpp:579:20: style: Condition 'sl>0' is always true [knownConditionTrueFalse]
            if (sl > 0) {
                   ^
src\src\Helpers\Rules_calculate.cpp:561:25: note: Assuming that condition 'sl==0' is not redundant
          if (pe || (sl == 0)) {
                        ^
src\src\Helpers\Rules_calculate.cpp:579:20: note: Condition 'sl>0' is always true
            if (sl > 0) {
                   ^
src\src\Helpers\Rules_calculate.cpp:630:15: style: Variable 'error' is reassigned a value before the old one has been used. [redundantAssignment]
  error       = RPNCalculate(token);
              ^
src\src\Helpers\Rules_calculate.cpp:515:21: note: error is assigned
        error       = RPNCalculate(token);
                    ^
src\src\Helpers\Rules_calculate.cpp:630:15: note: error is overwritten
  error       = RPNCalculate(token);
              ^
src\src\Helpers\Rules_calculate.cpp:545:19: style: Variable 'error' is reassigned a value before the old one has been used. [redundantAssignment]
            error = push(first); // Push as a result of ()
                  ^
src\src\Helpers\Rules_calculate.cpp:544:19: note: error is assigned
            error = push(first); // push back
                  ^
src\src\Helpers\Rules_calculate.cpp:545:19: note: error is overwritten
            error = push(first); // Push as a result of ()
                  ^
src\src\Helpers\Rules_calculate.cpp:427:6: style: Variable 'oc' is assigned a value that is never used. [unreadVariable]
  oc = c = 0;
     ^
src\src\Helpers\Rules_calculate.cpp:631:15: style: Variable 'TokenPos' is assigned a value that is never used. [unreadVariable]
  TokenPos    = token;
              ^
src\src\Helpers\Scheduler.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_GPIOTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_IntervalTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 574 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_IntervalTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_PluginTaskTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_PluginTaskTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_PluginTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 293 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_PluginTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_RulesTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_RulesTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_SystemEventTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 303 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_SystemEventTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_SystemEventTimer.cpp:53:26: style: C-style pointer casting [cstyleCast]
    event.String2.concat((const char *)b_payload, length);
                         ^
src\src\Helpers\Scheduler_SystemEventTimer.cpp:106:26: style: C-style pointer casting [cstyleCast]
    event.String2.concat((const char *)b_payload, length);
                         ^
src\src\Helpers\Scheduler_TaskDeviceTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\Scheduler_TaskDeviceTimer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\Scheduler_decodeTimer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 211 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\SerialWriteBuffer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\SerialWriteBuffer.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\StringConverter.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringConverter.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\StringConverter.cpp:241:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\Helpers\StringConverter.cpp:1190:10: style: Local variable 'repl' shadows outer function [shadowFunction]
  String repl;
         ^
src\src\Helpers\StringConverter.h:378:8: note: Shadowed declaration
bool   repl(const __FlashStringHelper * key,
       ^
src\src\Helpers\StringConverter.cpp:1190:10: note: Shadow variable
  String repl;
         ^
src\src\Helpers\StringConverter.cpp:1383:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
                                   struct EventStruct* event,
                                                       ^
src\src\Helpers\StringConverter.cpp:1133:15: style: Variable 'write' is assigned a value that is never used. [unreadVariable]
  char* write = destination;
              ^
src\src\Helpers\StringConverter.cpp:133:19: error: Using reference 'format' as parameter for va_start() results in undefined behaviour. [va_start_referencePassed]
    va_start(arg, format); // variable args start after parameter 'format'
                  ^
src\src\Helpers\StringConverter.cpp:143:23: error: Using reference 'format' as parameter for va_start() results in undefined behaviour. [va_start_referencePassed]
        va_start(arg, format);
                      ^
src\src\Helpers\StringConverter_Numerical.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringConverter_Numerical.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\StringConverter_Numerical.cpp:177:17: style: C-style pointer casting [cstyleCast]
    char *buf = (char *)malloc(expectedChars);
                ^
src\src\Helpers\StringGenerator_GPIO.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 234 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringGenerator_GPIO.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\StringGenerator_Plugin.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringGenerator_System.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringGenerator_Web.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringGenerator_WiFi.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringGenerator_WiFi.cpp:8:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESP8266WiFi.h>
^
src\src\Helpers\StringParser.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 566 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringParser.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\StringParser.cpp:201:16: style: Local variable 'trimTrailingZeros' shadows outer function [shadowFunction]
          bool trimTrailingZeros    = true;
               ^
src\src\Helpers\StringConverter_Numerical.h:38:8: note: Shadowed declaration
String trimTrailingZeros(const String& value);
       ^
src\src\Helpers\StringParser.cpp:201:16: note: Shadow variable
          bool trimTrailingZeros    = true;
               ^
src\src\Helpers\StringParser.cpp:649:20: style: Local variable 'trimTrailingZeros' shadows outer function [shadowFunction]
              bool trimTrailingZeros = false;
                   ^
src\src\Helpers\StringConverter_Numerical.h:38:8: note: Shadowed declaration
String trimTrailingZeros(const String& value);
       ^
src\src\Helpers\StringParser.cpp:649:20: note: Shadow variable
              bool trimTrailingZeros = false;
                   ^
src\src\Helpers\StringProvider.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 252 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\StringProvider.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\SystemVariables.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 230 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\SystemVariables.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\SystemVariables.cpp:330:20: style: Local variable 'trimTrailingZeros' shadows outer function [shadowFunction]
        const bool trimTrailingZeros = true;
                   ^
src\src\Helpers\StringConverter_Numerical.h:38:8: note: Shadowed declaration
String trimTrailingZeros(const String& value);
       ^
src\src\Helpers\SystemVariables.cpp:330:20: note: Shadow variable
        const bool trimTrailingZeros = true;
                   ^
src\src\Helpers\SystemVariables.cpp:43:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\src\Helpers\TarStream.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 219 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\TarStream.h:27:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <FS.h>
^
src\src\Helpers\TarStream.h:28:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\Helpers\TarStream.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\TarStream.cpp:35:12: warning: Member variable 'TarStream::_currentIterator' is not initialized in the constructor. [uninitMemberVar]
TarStream::TarStream(const String& fileName)
           ^
src\src\Helpers\TarStream.cpp:38:12: warning: Member variable 'TarStream::_currentIterator' is not initialized in the constructor. [uninitMemberVar]
TarStream::TarStream(const String& fileName, FileDestination_e destination)
           ^
src\src\Helpers\TarStream.h:132:3: style: Class 'TarStream' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  TarStream(const String& fileName);
  ^
src\src\Helpers\TarStream.cpp:270:14: style: The scope of the variable 'allZeros' can be reduced. [variableScope]
        bool allZeros = true;
             ^
src\src\Helpers\TarStream.cpp:92:26: style: Local variable 'isValid' shadows outer function [shadowFunction]
            const bool   isValid = validateHeader() && fname.indexOf('/') == -1; // Don't _allow_ subdirectories
                         ^
src\src\DataTypes\NetworkMedium.h:16:8: note: Shadowed declaration
bool   isValid(NetworkMedium_t medium);
       ^
src\src\Helpers\TarStream.cpp:92:26: note: Shadow variable
            const bool   isValid = validateHeader() && fname.indexOf('/') == -1; // Don't _allow_ subdirectories
                         ^
src\src\Helpers\TarStream.cpp:119:24: style: Local variable 'available' shadows outer function [shadowFunction]
                size_t available = UINT32_MAX;
                       ^
src\src\Helpers\TarStream.h:141:23: note: Shadowed declaration
  virtual int         available();
                      ^
src\src\Helpers\TarStream.cpp:119:24: note: Shadow variable
                size_t available = UINT32_MAX;
                       ^
src\src\Helpers\TarStream.cpp:659:52: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
      if (it->fileName.equalsIgnoreCase(filename)) {
                                                   ^
src\src\Helpers\TarStream.cpp:490:9: performance: Prefer prefix ++/-- operators for non-primitive types. [postfixOperator]
        _currentIterator++;
        ^
src\src\Helpers\WebServer_commandHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 228 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 228 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:156:38: warning: Either the condition 'candidates.empty()' is redundant or expression 'candidates.front()' causes access out of bounds. [containerOutOfBounds]
  currentCandidate = candidates.front();
                                     ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:181:30: note: Assuming that condition 'candidates.empty()' is not redundant
        if (!candidates.empty()) {
                             ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:156:38: note: Access out of bounds
  currentCandidate = candidates.front();
                                     ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:205:24: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
    if (it->rssi < -1) { return *it; }
                       ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:260:9: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
      ++found;
        ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:265:9: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
      ++found;
        ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:456:58: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
      if ((it->rssi != -1) && candidates.front() == *it) {
                                                         ^
src\src\Helpers\WiFi_AP_CandidatesList.cpp:16:0: information: Include file: <ESP8266WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
  # include <ESP8266WiFi.h>
^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 566 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:19:0: information: Include file: <ArduinoJson.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <ArduinoJson.h>
^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:167:0: information: Include file: <ArduinoJson.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <ArduinoJson.h>
^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:29:41: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
int humStatDomoticz(struct EventStruct *event, uint8_t rel_index) {
                                        ^
src\src\Helpers\_CPlugin_Helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_Helper.cpp:30:0: information: Include file: <WiFiClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiClient.h>
^
src\src\Helpers\_CPlugin_Helper.cpp:31:0: information: Include file: <WiFiUdp.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFiUdp.h>
^
src\src\Helpers\_CPlugin_Helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_CPlugin_Helper.cpp:86:108: style: Parameter 'ControllerSettings' can be declared as reference to const [constParameterReference]
void log_connecting_to(const __FlashStringHelper *prefix, cpluginID_t cpluginID, ControllerSettingsStruct& ControllerSettings) {
                                                                                                           ^
src\src\Helpers\_CPlugin_Helper_mqtt.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 572 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_Helper_webform.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_Helper_webform.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_CPlugin_LoRa_TTN_helper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_LoRa_TTN_helper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_CPlugin_init.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 709 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_CPlugin_init.cpp:18:53: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
constexpr cpluginID_t ProtocolIndex_to_CPlugin_id[] PROGMEM =
                                                    ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:14:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <GPIO_Direct_Access.h>
^
src\src\Helpers\_Internal_GPIO_pulseHelper.h:129:3: style: Struct 'Internal_GPIO_pulseHelper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  Internal_GPIO_pulseHelper(pulseCounterConfig configuration);
  ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:54:100: performance: Function parameter 'configuration' should be passed by const reference. [passedByValue]
Internal_GPIO_pulseHelper::Internal_GPIO_pulseHelper(Internal_GPIO_pulseHelper::pulseCounterConfig configuration)
                                                                                                   ^
src\src\Helpers\_NPlugin_init.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 728 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_NPlugin_init.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_Plugin_Helper_GPIO.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Plugin_Helper_GPIO.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_Plugin_Helper_GPIO.cpp:54:23: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
  struct EventStruct *event,
                      ^
src\src\Helpers\_Plugin_Helper_serial.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 567 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Plugin_Helper_serial.cpp:17:0: information: Include file: <ESPEasySerialType.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ESPEasySerialType.h>
^
src\src\Helpers\_Plugin_Helper_serial.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_Plugin_Helper_serial.cpp:97:50: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
int8_t serialHelper_getRxPin(struct EventStruct *event) {
                                                 ^
src\src\Helpers\_Plugin_Helper_serial.cpp:101:50: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
int8_t serialHelper_getTxPin(struct EventStruct *event) {
                                                 ^
src\src\Helpers\_Plugin_Helper_serial.cpp:244:23: style: Variable 'allowSoftwareSerial' is assigned a value that is never used. [unreadVariable]
  allowSoftwareSerial = false;
                      ^
src\src\Helpers\_Plugin_Helper_webform.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Plugin_Helper_webform.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_Plugin_Helper_webform.cpp:143:94: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
    if ((it->second.previousTask == TaskIndex) && (getPluginFromKey(it->first) == pluginID)) {
                                                                                             ^
src\src\Helpers\_Plugin_SensorTypeHelper.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Plugin_SensorTypeHelper.cpp:77:36: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char value_type_categories[] PROGMEM =
                                   ^
src\src\Helpers\_Plugin_SensorTypeHelper.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Helpers\_Plugin_init.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 548 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\_Plugin_init.cpp:19:61: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
constexpr /*pluginID_t*/ uint8_t DeviceIndex_to_Plugin_id[] PROGMEM =
                                                            ^
src\src\Helpers\msecTimerHandlerStruct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\msecTimerHandlerStruct.cpp:114:5: style: Struct 'match_id' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    match_id(unsigned long id) : _id(id) {}
    ^
src\src\Helpers\msecTimerHandlerStruct.cpp:76:26: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
      if (it->_id == id) {
                         ^
src\src\NotifierStructs\N001_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 822 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\NotifierStructs\N001_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\NotifierStructs\N001_data_struct.cpp:340:13: style: The if condition is the same as the previous if condition [duplicateCondition]
        if (!failFlag) {
            ^
src\src\NotifierStructs\N001_data_struct.cpp:313:13: note: First condition
        if (!failFlag) {
            ^
src\src\NotifierStructs\N001_data_struct.cpp:340:13: note: Second condition
        if (!failFlag) {
            ^
src\src\NotifierStructs\N001_data_struct.cpp:96:14: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
    failFlag = true;
             ^
src\src\NotifierStructs\N001_data_struct.cpp:226:20: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
          failFlag = true;
                   ^
src\src\NotifierStructs\N001_data_struct.cpp:292:22: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
            failFlag = true;
                     ^
src\src\NotifierStructs\N001_data_struct.cpp:308:22: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
            failFlag = true;
                     ^
src\src\NotifierStructs\N001_data_struct.cpp:342:22: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
            failFlag = true;
                     ^
src\src\NotifierStructs\N001_data_struct.cpp:349:22: style: Variable 'failFlag' is assigned a value that is never used. [unreadVariable]
            failFlag = true;
                     ^
src\src\PluginStructs\P001_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P001_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P001_data_struct.h:62:3: style: Struct 'P001_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P001_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P001_data_struct.cpp:65:18: style: Condition '_data._pin==-1' is always false [knownConditionTrueFalse]
  if (_data._pin == -1) { return; }
                 ^
src\src\PluginStructs\P001_data_struct.cpp:11:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
uint8_t P001_data_struct::P001_getSwitchType(struct EventStruct *event)
                                                                 ^
src\src\PluginStructs\P002_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 569 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Helpers\OversamplingHelper.h:5:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src\src\PluginStructs\P002_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P002_data_struct.h:11:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\PluginStructs\P002_data_struct.cpp:334:24: warning: The struct 'P002_data_struct' defines member function with name 'webformLoad_show_stats' also defined in its parent struct 'PluginTaskData_base'. [duplInheritedMember]
bool P002_data_struct::webformLoad_show_stats(struct EventStruct *event)
                       ^
src\src\DataStructs\PluginTaskData_base.h:56:8: note: Parent function 'PluginTaskData_base::webformLoad_show_stats'
  bool webformLoad_show_stats(struct EventStruct *event) const;
       ^
src\src\PluginStructs\P002_data_struct.cpp:334:24: note: Derived function 'P002_data_struct::webformLoad_show_stats'
bool P002_data_struct::webformLoad_show_stats(struct EventStruct *event)
                       ^
src\src\PluginStructs\P002_data_struct.h:108:12: style: The destructor '~P002_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P002_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P002_data_struct.h:108:12: note: Destructor in derived class
  virtual ~P002_data_struct() = default;
           ^
src\src\PluginStructs\P002_data_struct.cpp:699:14: style: Local variable 'axisOptions' shadows outer variable [shadowVariable]
      String axisOptions;
             ^
src\src\PluginStructs\P002_data_struct.cpp:650:12: note: Shadowed declaration
    String axisOptions;
           ^
src\src\PluginStructs\P002_data_struct.cpp:699:14: note: Shadow variable
      String axisOptions;
             ^
src\src\PluginStructs\P002_data_struct.cpp:1254:62: style: Parameter 'string' can be declared as reference to const [constParameterReference]
                                         String            & string) {
                                                             ^
src\src\PluginStructs\P002_data_struct.cpp:57:49: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P002_data_struct::load(struct EventStruct *event)
                                                ^
src\src\PluginStructs\P002_data_struct.cpp:446:86: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
const __FlashStringHelper * P002_data_struct::getChartXaxisLabel(struct EventStruct *event)
                                                                                     ^
src\src\PluginStructs\P002_data_struct.cpp:460:58: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P002_data_struct::getInputRange(struct EventStruct *event, int& minInputValue, int& maxInputValue, bool ignoreCalibration)
                                                         ^
src\src\PluginStructs\P002_data_struct.cpp:1095:62: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
float P002_data_struct::applyCalibration(struct EventStruct *event, float float_value, bool force) {
                                                             ^
src\src\PluginStructs\P002_data_struct.cpp:1107:61: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
float P002_data_struct::getCurrentValue(struct EventStruct *event, int& raw_value)
                                                            ^
src\src\PluginStructs\P002_data_struct.cpp:1232:23: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
  struct EventStruct *event,
                      ^
src\src\PluginStructs\P002_data_struct.cpp:1052:53: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
    if (_binningRange[index].inRange(currentValue)) {
                                                    ^
src\src\PluginStructs\P003_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P003_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P003_data_struct.h:44:3: style: Struct 'P003_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P003_data_struct(const Internal_GPIO_pulseHelper::pulseCounterConfig& config);
  ^
src\src\PluginStructs\P003_data_struct.h:47:12: style: The destructor '~P003_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P003_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P003_data_struct.h:47:12: note: Destructor in derived class
  virtual ~P003_data_struct() = default;
           ^
src\src\PluginStructs\P003_data_struct.cpp:8:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P003_data_struct::plugin_read(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P003_data_struct.cpp:59:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P003_data_struct::plugin_peek(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P004_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P004_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P004_data_struct.h:41:12: style: The destructor '~P004_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P004_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P004_data_struct.h:41:12: note: Destructor in derived class
  virtual ~P004_data_struct() = default;
           ^
src\src\PluginStructs\P005_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P005_data_struct.cpp:13:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <GPIO_Direct_Access.h>
^
src\src\PluginStructs\P005_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P005_data_struct.h:15:3: style: Struct 'P005_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P005_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P005_data_struct.h:18:12: style: The destructor '~P005_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P005_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P005_data_struct.h:18:12: note: Destructor in derived class
  virtual ~P005_data_struct() = default;
           ^
src\src\PluginStructs\P005_data_struct.cpp:69:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
P005_data_struct::P005_data_struct(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P005_data_struct.cpp:147:12: style: The scope of the variable 'dht_byte' can be reduced. [variableScope]
  uint8_t  dht_byte      = 0;
           ^
src\src\PluginStructs\P005_data_struct.cpp:148:12: style: The scope of the variable 'avg_low_total' can be reduced. [variableScope]
  uint32_t avg_low_total = 0;
           ^
src\src\PluginStructs\P005_data_struct.cpp:157:11: style: The scope of the variable 'timings' can be reduced. [variableScope]
  uint8_t timings[16] = { 0 };
          ^
src\src\PluginStructs\P006_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P006_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P006_data_struct.h:12:12: style: The destructor '~P006_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P006_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P006_data_struct.h:12:12: note: Destructor in derived class
  virtual ~P006_data_struct() = default;
           ^
src\src\PluginStructs\P008_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P008_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P008_data_struct.h:21:3: style: Struct 'P008_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P008_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P008_data_struct.h:24:12: style: The destructor '~P008_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P008_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P008_data_struct.h:24:12: note: Destructor in derived class
  virtual ~P008_data_struct();
           ^
src\src\PluginStructs\P008_data_struct.cpp:12:12: style: The scope of the variable 'digit' can be reduced. [variableScope]
  uint8_t  digit;
           ^
src\src\PluginStructs\P008_data_struct.cpp:39:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
P008_data_struct::P008_data_struct(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P008_data_struct.cpp:57:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P008_data_struct::plugin_init(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P008_data_struct.cpp:233:62: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P008_data_struct::plugin_get_config(struct EventStruct *event,
                                                             ^
src\src\PluginStructs\P009_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P009_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P009_data_struct.h:53:3: style: Struct 'P009_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P009_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P009_data_struct.cpp:10:62: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
uint8_t P009_data_struct::getI2C_address(struct EventStruct *event)
                                                             ^
src\src\PluginStructs\P012_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P012_data_struct.h:8:0: information: Include file: <LiquidCrystal_I2C.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <LiquidCrystal_I2C.h>
^
src\src\PluginStructs\P012_data_struct.cpp:7:0: information: Include file: <LiquidCrystal_I2C.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <LiquidCrystal_I2C.h>
^
src\src\PluginStructs\P012_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P012_data_struct.h:22:12: style: The destructor '~P012_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P012_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P012_data_struct.h:22:12: note: Destructor in derived class
  virtual ~P012_data_struct() = default;
           ^
src\src\PluginStructs\P014_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P014_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P014_data_struct.h:118:13: style: The destructor '~P014_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
   virtual ~P014_data_struct() = default;
            ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P014_data_struct.h:118:13: note: Destructor in derived class
   virtual ~P014_data_struct() = default;
            ^
src\src\PluginStructs\P014_data_struct.cpp:182:13: style: Condition '!readTemperatureFromHumidity(i2caddr,resolution)' is always false [knownConditionTrueFalse]
        if (!readTemperatureFromHumidity(i2caddr,resolution)){
            ^
src\src\PluginStructs\P014_data_struct.cpp:182:41: note: Calling function 'readTemperatureFromHumidity' returns 1
        if (!readTemperatureFromHumidity(i2caddr,resolution)){
                                        ^
src\src\PluginStructs\P014_data_struct.cpp:182:13: note: Condition '!readTemperatureFromHumidity(i2caddr,resolution)' is always false
        if (!readTemperatureFromHumidity(i2caddr,resolution)){
            ^
src\src\PluginStructs\P015_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P015_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P015_data_struct.h:25:12: style: The destructor '~P015_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P015_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P015_data_struct.h:25:12: note: Destructor in derived class
  virtual ~P015_data_struct() = default;
           ^
src\src\PluginStructs\P016_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 568 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P016_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P019_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P019_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P019_data_struct.h:53:3: style: Struct 'P019_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P019_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P019_data_struct.cpp:9:62: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
uint8_t P019_data_struct::getI2C_address(struct EventStruct *event)
                                                             ^
src\src\PluginStructs\P020_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 564 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P020_data_struct.h:8:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\PluginStructs\P020_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P020_data_struct.cpp:59:1: error: Found an exit path from function with non-void return type that has missing return statement [missingReturn]
}
^
src\src\PluginStructs\P020_data_struct.h:99:3: style: Struct 'P020_Task' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P020_Task(struct EventStruct *event);
  ^
src\src\PluginStructs\P020_data_struct.h:100:4: style: The destructor '~P020_Task' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  ~P020_Task();
   ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P020_data_struct.h:100:4: note: Destructor in derived class
  ~P020_Task();
   ^
src\src\PluginStructs\P020_data_struct.cpp:53:42: style: Parameter 'server' can be declared as pointer to const [constParameterPointer]
bool P020_Task::serverActive(WiFiServer *server) {
                                         ^
src\src\PluginStructs\P022_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P022_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P022_data_struct.h:27:12: style: The destructor '~P022_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P022_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P022_data_struct.h:27:12: note: Destructor in derived class
  virtual ~P022_data_struct() = default;
           ^
src\src\PluginStructs\P022_data_struct.cpp:11:36: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 10. [shiftTooManyBitsSigned]
    return initializeState_lo & (1 << address_offset);
                                   ^
src\src\PluginStructs\P022_data_struct.cpp:10:22: note: Assuming that condition 'address_offset<32' is not redundant
  if (address_offset < 32) {
                     ^
src\src\PluginStructs\P022_data_struct.cpp:11:36: note: Shift
    return initializeState_lo & (1 << address_offset);
                                   ^
src\src\PluginStructs\P022_data_struct.cpp:13:36: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 7. [shiftTooManyBitsSigned]
    return initializeState_hi & (1 << (address_offset - 32));
                                   ^
src\src\PluginStructs\P022_data_struct.cpp:7:47: note: Assuming that condition 'address>0x7F' is not redundant
  if ((address < PCA9685_ADDRESS) || (address > PCA9685_MAX_ADDRESS)) { return false; }
                                              ^
src\src\PluginStructs\P022_data_struct.cpp:8:37: note: Assignment 'address_offset=address-0x40', assigned value is 63
  uint32_t address_offset = address - PCA9685_ADDRESS;
                                    ^
src\src\PluginStructs\P022_data_struct.cpp:13:36: note: Shift
    return initializeState_hi & (1 << (address_offset - 32));
                                   ^
src\src\PluginStructs\P022_data_struct.cpp:22:30: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 21. [shiftTooManyBitsSigned]
    initializeState_lo |= (1 << address_offset);
                             ^
src\src\PluginStructs\P022_data_struct.cpp:21:22: note: Assuming that condition 'address_offset<32' is not redundant
  if (address_offset < 32) {
                     ^
src\src\PluginStructs\P022_data_struct.cpp:22:30: note: Shift
    initializeState_lo |= (1 << address_offset);
                             ^
src\src\PluginStructs\P022_data_struct.cpp:24:30: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 18. [shiftTooManyBitsSigned]
    initializeState_hi |= (1 << (address_offset - 32));
                             ^
src\src\PluginStructs\P022_data_struct.cpp:18:47: note: Assuming that condition 'address>0x7F' is not redundant
  if ((address < PCA9685_ADDRESS) || (address > PCA9685_MAX_ADDRESS)) { return false; }
                                              ^
src\src\PluginStructs\P022_data_struct.cpp:19:37: note: Assignment 'address_offset=address-0x40', assigned value is 63
  uint32_t address_offset = address - PCA9685_ADDRESS;
                                    ^
src\src\PluginStructs\P022_data_struct.cpp:24:30: note: Shift
    initializeState_hi |= (1 << (address_offset - 32));
                             ^
src\src\PluginStructs\P022_data_struct.cpp:34:31: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 33. [shiftTooManyBitsSigned]
    initializeState_lo &= ~(1 << address_offset);
                              ^
src\src\PluginStructs\P022_data_struct.cpp:33:22: note: Assuming that condition 'address_offset<32' is not redundant
  if (address_offset < 32) {
                     ^
src\src\PluginStructs\P022_data_struct.cpp:34:31: note: Shift
    initializeState_lo &= ~(1 << address_offset);
                              ^
src\src\PluginStructs\P022_data_struct.cpp:36:31: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 30. [shiftTooManyBitsSigned]
    initializeState_hi &= ~(1 << (address_offset - 32));
                              ^
src\src\PluginStructs\P022_data_struct.cpp:30:47: note: Assuming that condition 'address>0x7F' is not redundant
  if ((address < PCA9685_ADDRESS) || (address > PCA9685_MAX_ADDRESS)) { return false; }
                                              ^
src\src\PluginStructs\P022_data_struct.cpp:31:37: note: Assignment 'address_offset=address-0x40', assigned value is 63
  uint32_t address_offset = address - PCA9685_ADDRESS;
                                    ^
src\src\PluginStructs\P022_data_struct.cpp:36:31: note: Shift
    initializeState_hi &= ~(1 << (address_offset - 32));
                              ^
src\src\PluginStructs\P023_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P024_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P024_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P024_data_struct.h:11:3: style: Struct 'P024_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P024_data_struct(uint8_t i2c_addr);
  ^
src\src\PluginStructs\P024_data_struct.h:13:12: style: The destructor '~P024_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P024_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P024_data_struct.h:13:12: note: Destructor in derived class
  virtual ~P024_data_struct() = default;
           ^
src\src\PluginStructs\P025_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\Static\WebStaticData.h:53:36: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
static const char favicon_8b_ico[] PROGMEM = {
                                   ^
src\src\Static\WebStaticData.h:316:41: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
static const char jsToastMessageBegin[] PROGMEM = {
                                        ^
src\src\PluginStructs\P026_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P026_data_struct.cpp:15:0: information: Include file: "ESPEasy-Globals.h" not found. [missingInclude]
# include "ESPEasy-Globals.h"
^
src\src\PluginStructs\P026_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P026_data_struct.cpp:192:64: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P026_data_struct::GetDeviceValueNames(struct EventStruct *event)
                                                               ^
src\src\PluginStructs\P026_data_struct.cpp:256:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P026_data_struct::Plugin_Read(struct EventStruct *event)
                                                       ^
src\src\PluginStructs\P027_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P027_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P027_data_struct.h:18:3: style: Struct 'P027_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P027_data_struct(uint8_t i2c_addr);
  ^
src\src\PluginStructs\P027_data_struct.h:21:12: style: The destructor '~P027_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P027_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P027_data_struct.h:21:12: note: Destructor in derived class
  virtual ~P027_data_struct() = default;
           ^
src\src\PluginStructs\P028_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P028_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P028_data_struct.h:130:12: style: The destructor '~P028_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P028_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P028_data_struct.h:130:12: note: Destructor in derived class
  virtual ~P028_data_struct() = default;
           ^
src\src\PluginStructs\P031_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P031_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P031_data_struct.h:33:12: style: The destructor '~P031_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P031_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P031_data_struct.h:33:12: note: Destructor in derived class
  virtual ~P031_data_struct() = default;
           ^
src\src\PluginStructs\P032_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P032_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P032_data_struct.h:10:3: style: Struct 'P032_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P032_data_struct(uint8_t i2c_addr);
  ^
src\src\PluginStructs\P032_data_struct.h:12:12: style: The destructor '~P032_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P032_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P032_data_struct.h:12:12: note: Destructor in derived class
  virtual ~P032_data_struct() = default;
           ^
src\src\PluginStructs\P032_data_struct.cpp:100:60: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    T2 = dT * dT / static_cast<ESPEASY_RULES_FLOAT_TYPE>(1 << 31);
                                                           ^
src\src\PluginStructs\P035_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P035_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P036_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 581 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P036_data_struct.h:8:0: information: Include file: <SSD1306.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <SSD1306.h>
^
src\src\PluginStructs\P036_data_struct.h:9:0: information: Include file: <SH1106Wire.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <SH1106Wire.h>
^
src\src\PluginStructs\P036_data_struct.h:11:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\PluginStructs\P036_data_struct.cpp:16:0: information: Include file: <Dialog_Plain_12_font.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <Dialog_Plain_12_font.h>
^
src\src\PluginStructs\P036_data_struct.cpp:17:0: information: Include file: <Dialog_Plain_18_font.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <Dialog_Plain_18_font.h>
^
src\src\PluginStructs\P036_data_struct.cpp:19:0: information: Include file: <OLED_SSD1306_SH1106_images.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <OLED_SSD1306_SH1106_images.h>
^
src\src\PluginStructs\P036_data_struct.cpp:315:31: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char p036_subcommands[] PROGMEM = "display|frame"
                              ^
src\src\PluginStructs\P037_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 572 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P037_data_struct.h:14:0: information: Include file: <ArduinoJson.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ArduinoJson.h>
^
src\src\PluginStructs\P037_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P037_data_struct.h:106:3: style: Struct 'P037_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P037_data_struct(taskIndex_t taskIndex);
  ^
src\src\PluginStructs\P037_data_struct.h:108:12: style: The destructor '~P037_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P037_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P037_data_struct.h:108:12: note: Destructor in derived class
  virtual ~P037_data_struct();
           ^
src\src\PluginStructs\P037_data_struct.cpp:797:13: style: The scope of the variable 'rangeSeparator' can be reduced. [variableScope]
    int8_t  rangeSeparator;
            ^
src\src\PluginStructs\P037_data_struct.cpp:146:67: style: Unsigned expression 'mappingOffset' can't be negative so it is unnecessary to test it. [unsignedPositive]
    for (uint8_t mappingOffset = P037_END_MAPPINGS; mappingOffset >= P037_START_MAPPINGS && _maxIdx == 0; mappingOffset--) {
                                                                  ^
src\src\PluginStructs\P038_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P038_data_struct.h:7:0: information: Include file: <NeoPixelBus_wrapper.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <NeoPixelBus_wrapper.h>
^
src\src\PluginStructs\P038_data_struct.cpp:47:28: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char p038_commands[] PROGMEM =
                           ^
src\src\PluginStructs\P039_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P039_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P039_data_struct.h:21:12: style: The destructor '~P039_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P039_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P039_data_struct.h:21:12: note: Destructor in derived class
  virtual ~P039_data_struct() = default;
           ^
src\src\PluginStructs\P042_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P042_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P044_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 564 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P044_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P045_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P045_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P047_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P047_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P049_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P049_data_struct.h:15:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\PluginStructs\P049_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P049_data_struct.h:47:12: style: The destructor '~P049_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P049_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P049_data_struct.h:47:12: note: Destructor in derived class
  virtual ~P049_data_struct();
           ^
src\src\PluginStructs\P049_data_struct.cpp:356:47: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P049_html_show_stats(struct EventStruct *event) {
                                              ^
src\src\PluginStructs\P049_data_struct.cpp:357:21: style: Variable 'P049_data' can be declared as pointer to const [constVariablePointer]
  P049_data_struct *P049_data =
                    ^
src\src\PluginStructs\P049_data_struct.cpp:380:44: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P049_perform_init(struct EventStruct *event) {
                                           ^
src\src\PluginStructs\P050_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P050_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P052_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P052_data_struct.h:87:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\PluginStructs\P052_data_struct.cpp:111:31: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
const char p052_subcommands[] PROGMEM = "writehr|readhr|enableabc|disableabc|setabcperiod|setrelay";
                              ^
src\src\PluginStructs\P053_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 564 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P053_data_struct.h:12:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\PluginStructs\P053_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P053_data_struct.h:154:12: style: The destructor '~P053_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P053_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P053_data_struct.h:154:12: note: Destructor in derived class
  virtual ~P053_data_struct();
           ^
src\src\PluginStructs\P053_data_struct.cpp:583:35: style: The comparison '_delay_read_after_wakeup_ms != 0' is always false. [knownConditionTrueFalse]
  if (_delay_read_after_wakeup_ms != 0) {
                                  ^
src\src\PluginStructs\P053_data_struct.h:244:48: note: '_delay_read_after_wakeup_ms' is assigned value '0' here.
  const uint32_t _delay_read_after_wakeup_ms = 0;
                                               ^
src\src\PluginStructs\P053_data_struct.cpp:583:35: note: The comparison '_delay_read_after_wakeup_ms != 0' is always false.
  if (_delay_read_after_wakeup_ms != 0) {
                                  ^
src\src\PluginStructs\P053_data_struct.cpp:299:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P053_data_struct::processData(struct EventStruct *event) {
                                                       ^
src\src\PluginStructs\P053_data_struct.cpp:446:72: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P053_data_struct::checkAndClearValuesReceived(struct EventStruct *event) {
                                                                       ^
src\src\PluginStructs\P056_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P056_data_struct.h:6:0: information: Include file: <jkSDS011.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <jkSDS011.h>
^
src\src\PluginStructs\P056_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P056_data_struct.cpp:10:3: warning: Struct 'P056_data_struct' does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s). [noCopyConstructor]
  SDS = new (std::nothrow) CjkSDS011(port, CONFIG_PIN1, CONFIG_PIN2);
  ^
src\src\PluginStructs\P056_data_struct.cpp:10:3: warning: Struct 'P056_data_struct' does not have a operator= which is recommended since it has dynamic memory/resource allocation(s). [noOperatorEq]
  SDS = new (std::nothrow) CjkSDS011(port, CONFIG_PIN1, CONFIG_PIN2);
  ^
src\src\PluginStructs\P056_data_struct.h:9:3: style: Struct 'P056_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P056_data_struct(EventStruct *event);
  ^
src\src\PluginStructs\P056_data_struct.h:10:4: style: The destructor '~P056_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  ~P056_data_struct();
   ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P056_data_struct.h:10:4: note: Destructor in derived class
  ~P056_data_struct();
   ^
src\src\PluginStructs\P057_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P057_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P058_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P058_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P060_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P060_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P061_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P061_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P062_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P062_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P064_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P064_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P067_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P067_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P068_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P068_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P069_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P069_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P070_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P070_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P073_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 581 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P073_data_struct.cpp:5:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <GPIO_Direct_Access.h>
^
src\src\PluginStructs\P073_data_struct.h:125:43: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
static const uint8_t DefaultCharTable[42] PROGMEM = {
                                          ^
src\src\PluginStructs\P074_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P074_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P075_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P075_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P077_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 563 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P077_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P078_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P078_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P079_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P079_data_struct.h:12:0: information: Include file: "Wire.h" not found. [missingInclude]
# include "Wire.h"
^
src\src\PluginStructs\P079_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P079_data_struct.h:95:3: style: Class 'LOLIN_I2C_MOTOR' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  LOLIN_I2C_MOTOR(unsigned char address);
  ^
src\src\PluginStructs\P079_data_struct.cpp:234:17: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned char i;
                ^
src\src\PluginStructs\P081_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P081_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P082_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P082_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P083_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P083_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P085_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P085_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P087_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P087_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P089_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P089_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P089_ping_service_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 558 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P089_ping_service_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P090_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P090_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P090_data_struct.h:8:0: information: Include file: "stdint.h" not found. [missingInclude]
# include "stdint.h"
^
src\src\PluginStructs\P090_data_struct.h:29:3: style: Class 'CCS811Core' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CCS811Core(uint8_t);
  ^
src\src\PluginStructs\P090_data_struct.h:67:3: style: Class 'CCS811' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  CCS811(uint8_t);
  ^
src\src\PluginStructs\P090_data_struct.h:110:3: style: Struct 'P090_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P090_data_struct(uint8_t i2cAddr);
  ^
src\src\PluginStructs\P090_data_struct.h:69:12: style: The destructor '~CCS811' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~CCS811() = default;
           ^
src\src\PluginStructs\P090_data_struct.h:31:12: note: Virtual destructor in base class
  virtual ~CCS811Core() = default;
           ^
src\src\PluginStructs\P090_data_struct.h:69:12: note: Destructor in derived class
  virtual ~CCS811() = default;
           ^
src\src\PluginStructs\P090_data_struct.h:112:12: style: The destructor '~P090_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P090_data_struct() = default;
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P090_data_struct.h:112:12: note: Destructor in derived class
  virtual ~P090_data_struct() = default;
           ^
src\src\PluginStructs\P092_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P092_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P093_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P093_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P094_Filter.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P094_Filter.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P094_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P094_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P095_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 576 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P095_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P095_data_struct.h:7:0: information: Include file: <Adafruit_GFX.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_GFX.h>                  // include Adafruit graphics library
^
src\src\PluginStructs\P095_data_struct.h:8:0: information: Include file: <Adafruit_ILI9341.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_ILI9341.h>              // include Adafruit ILI9341 TFT library
^
src\src\PluginStructs\P095_data_struct.h:147:12: style: The destructor '~P095_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P095_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P095_data_struct.h:147:12: note: Destructor in derived class
  virtual ~P095_data_struct();
           ^
src\src\PluginStructs\P095_data_struct.cpp:379:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P095_data_struct::plugin_ten_per_second(struct EventStruct *event) {
                                                                 ^
src\src\PluginStructs\P095_data_struct.cpp:417:65: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P095_data_struct::plugin_once_a_second(struct EventStruct *event) {
                                                                ^
src\src\PluginStructs\P095_data_struct.h:30:0: information: Include file: <ILI9488.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <ILI9488.h> // Specific behavior: ILI9488 needs 24 bit colors in SPI mode
^
src\src\PluginStructs\P096_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 571 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P096_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P096_data_struct.h:7:0: information: Include file: <Adafruit_GFX.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_GFX.h>             // include Adafruit graphics library
^
src\src\PluginStructs\P096_data_struct.h:8:0: information: Include file: <LOLIN_EPD.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <LOLIN_EPD.h>                // include Adafruit Lolin eInk/ePaper library
^
src\src\PluginStructs\P096_data_struct.h:118:12: style: The destructor '~P096_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P096_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P096_data_struct.h:118:12: note: Destructor in derived class
  virtual ~P096_data_struct();
           ^
src\src\PluginStructs\P096_data_struct.cpp:304:57: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P096_data_struct::plugin_write(struct EventStruct *event, const String& string) {
                                                        ^
src\src\PluginStructs\P098_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P098_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P099_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P099_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P103_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P103_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P104_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 609 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P104_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P105_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P105_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P106_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P106_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P107_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P107_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P108_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P108_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P109_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P109_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P110_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P110_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P111_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P111_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P112_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P112_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P113_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 563 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P113_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P114_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P114_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P115_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P115_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P116_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 572 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P116_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P116_data_struct.h:7:0: information: Include file: <Adafruit_GFX.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_GFX.h>         // include Adafruit graphics library
^
src\src\PluginStructs\P116_data_struct.h:8:0: information: Include file: <Adafruit_ST77xx.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_ST77xx.h>      // include Adafruit ST77xx TFT library
^
src\src\PluginStructs\P116_data_struct.h:9:0: information: Include file: <Adafruit_ST7735.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_ST7735.h>      // include Adafruit ST7735 TFT library
^
src\src\PluginStructs\P116_data_struct.h:10:0: information: Include file: <Adafruit_ST7789.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_ST7789.h>      // include Adafruit ST7789 TFT library
^
src\src\PluginStructs\P116_data_struct.h:11:0: information: Include file: <Adafruit_ST7796S_kbv.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_ST7796S_kbv.h> // include Adafruit ST7796 TFT library
^
src\src\PluginStructs\P116_data_struct.h:143:12: style: The destructor '~P116_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P116_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P116_data_struct.h:143:12: note: Destructor in derived class
  virtual ~P116_data_struct();
           ^
src\src\PluginStructs\P116_data_struct.cpp:419:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P116_data_struct::plugin_ten_per_second(struct EventStruct *event) {
                                                                 ^
src\src\PluginStructs\P116_data_struct.cpp:430:65: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P116_data_struct::plugin_once_a_second(struct EventStruct *event) {
                                                                ^
src\src\PluginStructs\P117_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P117_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P118_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 563 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P118_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P119_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P119_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P120_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 564 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P120_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P121_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P121_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P122_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P122_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P123_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P123_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P124_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P124_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P126_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P126_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P127_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P128_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 572 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P128_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P129_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P129_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P131_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 567 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P131_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P131_data_struct.h:7:0: information: Include file: <Adafruit_NeoMatrix.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_NeoMatrix.h>
^
src\src\PluginStructs\P131_data_struct.h:11:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <vector>
^
src\src\PluginStructs\P131_data_struct.h:116:12: style: The destructor '~P131_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P131_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P131_data_struct.h:116:12: note: Destructor in derived class
  virtual ~P131_data_struct();
           ^
src\src\PluginStructs\P131_data_struct.cpp:284:23: style: Redundant condition: scrollOnly. '!scrollOnly || (scrollOnly && content[x].active)' is equivalent to '!scrollOnly || content[x].active' [redundantCondition]
      if (!scrollOnly ||
                      ^
src\src\PluginStructs\P131_data_struct.cpp:267:60: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P131_data_struct::display_content(struct EventStruct *event,
                                                           ^
src\src\PluginStructs\P132_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P132_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P133_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P133_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P134_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P134_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P135_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P135_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P137_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P137_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P138_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P138_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P139_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P139_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P139_data_struct_formselectors.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P139_data_struct_formselectors.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P140_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P140_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P141_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 569 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P141_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P141_data_struct.h:7:0: information: Include file: <Adafruit_GFX.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_GFX.h>                  // include Adafruit graphics library
^
src\src\PluginStructs\P141_data_struct.h:8:0: information: Include file: <Adafruit_PCD8544.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_PCD8544.h>              // include Adafruit PCD8544 LCD library
^
src\src\PluginStructs\P141_data_struct.h:100:12: style: The destructor '~P141_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  virtual ~P141_data_struct();
           ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P141_data_struct.h:100:12: note: Destructor in derived class
  virtual ~P141_data_struct();
           ^
src\src\PluginStructs\P141_data_struct.cpp:230:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P141_data_struct::plugin_ten_per_second(struct EventStruct *event) {
                                                                 ^
src\src\PluginStructs\P141_data_struct.cpp:241:65: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P141_data_struct::plugin_once_a_second(struct EventStruct *event) {
                                                                ^
src\src\PluginStructs\P141_data_struct.cpp:340:57: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P141_data_struct::updateValues(struct EventStruct *event) {
                                                        ^
src\src\PluginStructs\P142_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P142_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P143_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 568 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P143_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P143_data_struct.h:7:0: information: Include file: <Adafruit_seesaw.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <Adafruit_seesaw.h>                    // Adafruit I2C Rotary encoder (using a SeeSaw board/controller)
^
src\src\PluginStructs\P143_data_struct.h:8:0: information: Include file: <seesaw_neopixel.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <seesaw_neopixel.h>                    // Adafruit NeoPixel on the Rotary encoder board
^
src\src\PluginStructs\P143_data_struct.h:173:3: style: Struct 'P143_data_struct' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
  P143_data_struct(struct EventStruct *event);
  ^
src\src\PluginStructs\P143_data_struct.h:176:4: style: The destructor '~P143_data_struct' overrides a destructor in a base class but is not marked with a 'override' specifier. [missingOverride]
  ~P143_data_struct();
   ^
src\src\DataStructs\PluginTaskData_base.h:22:12: note: Virtual destructor in base class
  virtual ~PluginTaskData_base();
           ^
src\src\PluginStructs\P143_data_struct.h:176:4: note: Destructor in derived class
  ~P143_data_struct();
   ^
src\src\PluginStructs\P143_data_struct.cpp:599:11: style: The scope of the variable 'pRed' can be reduced. [variableScope]
  int16_t pRed   = -1;
          ^
src\src\PluginStructs\P143_data_struct.cpp:600:11: style: The scope of the variable 'pGreen' can be reduced. [variableScope]
  int16_t pGreen = -1;
          ^
src\src\PluginStructs\P143_data_struct.cpp:601:11: style: The scope of the variable 'pBlue' can be reduced. [variableScope]
  int16_t pBlue  = -1;
          ^
src\src\PluginStructs\P143_data_struct.cpp:603:11: style: The scope of the variable 'pCount' can be reduced. [variableScope]
  int32_t pCount = INT32_MIN;
          ^
src\src\PluginStructs\P143_data_struct.cpp:309:57: style: Parameter 'string' can be declared as reference to const [constParameterReference]
                                    String            & string) {
                                                        ^
src\src\PluginStructs\P143_data_struct.cpp:52:59: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P143_CheckEncoderDefaultSettings(struct EventStruct *event) {
                                                          ^
src\src\PluginStructs\P143_data_struct.cpp:295:56: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P143_data_struct::plugin_read(struct EventStruct *event)           {
                                                       ^
src\src\PluginStructs\P143_data_struct.cpp:308:57: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
bool P143_data_struct::plugin_write(struct EventStruct *event,
                                                        ^
src\src\PluginStructs\P143_data_struct.cpp:595:66: style: Parameter 'event' can be declared as pointer to const [constParameterPointer]
void P143_data_struct::counterToColorMapping(struct EventStruct *event) {
                                                                 ^
src\src\PluginStructs\P144_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P144_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P145_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 563 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P145_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P146_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P146_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P147_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P147_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P148_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P148_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P150_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P150_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P151_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P151_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P153_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P153_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P154_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P154_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P159_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P159_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P162_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P162_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P163_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P163_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P164_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P164_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P165_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 574 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P165_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P166_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P166_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P167_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P167_data_struct.cpp:14:0: information: Include file: <GPIO_Direct_Access.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <GPIO_Direct_Access.h>
^
src\src\PluginStructs\P167_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P168_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P168_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P169_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P169_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P170_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P170_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P173_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P173_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P176_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 567 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P176_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P177_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 561 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P177_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P178_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P178_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\P180_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\P180_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\PluginStructs\_StatsOnly_data_struct.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\PluginStructs\_StatsOnly_data_struct.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\Static\WebStaticData.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 241 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\404.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Rules.h:8:0: information: Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <functional>
^
src\src\WebServer\404.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\AccessControl.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 221 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\AdvancedConfigPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 256 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\AdvancedConfigPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\CacheControllerPages.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 228 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Chart_JS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Chart_JS_scale.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Chart_JS_scale.cpp:90:42: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
    if (it->axisID.equals(scale.axisID)) {
                                         ^
src\src\WebServer\Chart_JS_scale.cpp:147:30: style: Consider using std::count_if algorithm instead of a raw loop. [useStlAlgorithm]
    if (it->is_Y_axis()) { ++count; }
                             ^
src\src\WebServer\Chart_JS_title.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\ConfigPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 238 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\ConfigPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\ControlPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 215 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\ControllerPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 476 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\ControllerPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\ControllerPage.cpp:181:20: warning: Potentially invalid type conversion in old-style C cast, clarify/fix with C++ cast [dangerousTypeCast]
  TempEvent.Data = (uint8_t *)(&ControllerSettings);
                   ^
src\src\WebServer\CustomPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 562 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\CustomPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\CustomPage.cpp:104:13: style: Same expression used in consecutive assignments of 'prev' and 'next'. [duplicateAssignExpression]
    uint8_t prev = Settings.Unit;
            ^
src\src\WebServer\CustomPage.cpp:105:13: note: Same expression used in consecutive assignments of 'prev' and 'next'.
    uint8_t next = Settings.Unit;
            ^
src\src\WebServer\CustomPage.cpp:104:13: note: Same expression used in consecutive assignments of 'prev' and 'next'.
    uint8_t prev = Settings.Unit;
            ^
src\src\WebServer\DevicesPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 583 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\DevicesPage.cpp:39:0: information: Include file: <ESPeasySerial.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <ESPeasySerial.h>
^
src\src\WebServer\DownloadPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 230 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\DownloadPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\DownloadPage.cpp:95:22: style: Redundant condition: noCreds. '!A || (A && B)' is equivalent to '!A || B' [redundantCondition]
        if (!noCreds || (noCreds && (0 != strncasecmp(file.name(), security_dat.c_str(), security_dat.length())))) {
                     ^
src\src\WebServer\ESPEasy_WebServer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 607 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\I2C_Scanner.h:10:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#  include <vector>
^
src\src\WebServer\ESPEasy_WebServer.cpp:71:0: information: Include file: <uri/UriGlob.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <uri/UriGlob.h>
^
src\src\WebServer\FactoryResetPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 233 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\FileList.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 240 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\FileList.cpp:245:28: style: Condition 'moreFilesPresent' is always false [knownConditionTrueFalse]
  if ((count >= endIdx) && moreFilesPresent) {
                           ^
src\src\WebServer\FileList.cpp:180:28: note: Assignment 'moreFilesPresent=false', assigned value is 0
  bool moreFilesPresent  = false;
                           ^
src\src\WebServer\FileList.cpp:245:28: note: Condition 'moreFilesPresent' is always false
  if ((count >= endIdx) && moreFilesPresent) {
                           ^
src\src\WebServer\HTML_Print.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\HTML_wrappers.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 231 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\HardwarePage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 255 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\HardwarePage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\I2C_Scanner.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 309 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\I2C_Scanner.cpp:17:0: information: Include file: <Wire.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <Wire.h>
^
src\src\WebServer\I2C_Scanner.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\I2C_Scanner.cpp:557:16: style: Variable 'nDevices' is assigned a value that is never used. [unreadVariable]
      nDevices = 0; // Reset for next interface
               ^
src\src\WebServer\JSON.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 585 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\JSON.cpp:163:45: error: There is an unknown macro here somewhere. Configuration is required. If PROGMEM is a macro then please configure it. [unknownMacro]
      static const LabelType::Enum labels[] PROGMEM =
                                            ^
src\src\WebServer\LoadFromFS.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 222 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Log.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 229 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Markup.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 239 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Markup.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\Markup_Buttons.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 214 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Markup_Forms.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 559 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Markup_Forms.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\Metrics.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 565 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\NotificationPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 235 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\NotificationPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\PinStates.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\PinStates.cpp:13:0: information: Include file: <esp32-hal-periman.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp32-hal-periman.h>
^
src\src\WebServer\PinStates.cpp:14:0: information: Include file: <driver/gpio.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <driver/gpio.h>
^
src\src\WebServer\PinStates.cpp:15:0: information: Include file: <esp_private/esp_gpio_reserve.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp_private/esp_gpio_reserve.h>
^
src\src\WebServer\PinStates.cpp:18:0: information: Include file: <hal/gpio_hal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
 # include <hal/gpio_hal.h>
^
src\src\WebServer\PinStates.cpp:22:0: information: Include file: <esp_private/io_mux.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
# include <esp_private/io_mux.h>
^
src\src\WebServer\PinStates.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\RootPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 245 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\RootPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\Rules.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 242 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\Rules.cpp:24:0: information: Include file: <FS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <FS.h>
^
src\src\WebServer\SettingsArchive.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 227 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\SettingsArchive.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\SettingsArchive.cpp:43:18: style: Local variable 'i' shadows outer variable [shadowVariable]
        for (int i = 0; i < RULESETS_MAX; ++i) {
                 ^
src\src\WebServer\SettingsArchive.cpp:39:14: note: Shadowed declaration
    for (int i = 0; i < FileType::MAX_FILETYPE; ++i) {
             ^
src\src\WebServer\SettingsArchive.cpp:43:18: note: Shadow variable
        for (int i = 0; i < RULESETS_MAX; ++i) {
                 ^
src\src\WebServer\SetupPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 240 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\SetupPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\SetupPage.cpp:397:20: style: Condition 'refreshCount!=0' is always false [knownConditionTrueFalse]
  if (refreshCount != 0) {
                   ^
src\src\WebServer\SetupPage.cpp:385:20: note: Assuming that condition 'refreshCount>0' is not redundant
  if (refreshCount > 0)
                   ^
src\src\WebServer\SetupPage.cpp:397:20: note: Condition 'refreshCount!=0' is always false
  if (refreshCount != 0) {
                   ^
src\src\WebServer\SysInfoPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 270 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\SysVarPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 230 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\SysVarPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\TimingStats.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 303 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\TimingStats.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\ToolsPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 242 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\UploadPage.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 224 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\UploadPage.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\src\WebServer\UploadPage.cpp:253:20: style: Variable 'uploadResult' is reassigned a value before the old one has been used. [redundantAssignment]
      uploadResult = uploadResult_e::SuccessReboot;
                   ^
src\src\WebServer\UploadPage.cpp:158:18: note: uploadResult is assigned
    uploadResult = uploadResult_e::UploadStarted;
                 ^
src\src\WebServer\UploadPage.cpp:253:20: note: uploadResult is overwritten
      uploadResult = uploadResult_e::SuccessReboot;
                   ^
src\src\WebServer\WebTemplateParser.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 474 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\WiFiScanner.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 218 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\src\WebServer\common.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 212 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\usb\usb_hid_rfid.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 560 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src\usb\usb_hid_rfid.cpp:7:0: information: Include file: <HTTPClient.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <HTTPClient.h>
^
src\usb\usb_hid_rfid.cpp:8:0: information: Include file: <WiFi.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <WiFi.h>
^
src\usb\usb_hid_rfid.cpp:12:0: information: Include file: <LittleFS.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <LittleFS.h>
^
src\usb\usb_hid_rfid.cpp:16:0: information: Include file: "../src/custom/custom.h" not found. [missingInclude]
#include "../src/custom/custom.h"
^
src\usb\usb_hid_rfid.cpp:0:0: information: Limiting analysis of branches. Use --check-level=exhaustive to analyze all branches. [normalCheckLevelMaxBranches]

^
src\usb\usb_hid_rfid.cpp:399:5: style: C-style pointer casting [cstyleCast]
    (void*)delay_ms,
    ^
src\usb\usb_hid_rfid.cpp:468:25: style: C-style pointer casting [cstyleCast]
    char* cardId_copy = (char*)malloc(cardIdLen + 1);
                        ^
src\usb\usb_hid_rfid.cpp:484:9: style: C-style pointer casting [cstyleCast]
        (void*)cardId_copy,        // Parametre (kopyalanan card ID)
        ^
src\usb\usb_hid_rfid.cpp:501:20: style: C-style pointer casting [cstyleCast]
    char* cardId = (char*)parameter;
                   ^
src\usb\usb_hid_rfid.cpp:302:15: style: Local variable 'ret' shadows outer variable [shadowVariable]
    esp_err_t ret = usb_host_lib_handle_events(pdMS_TO_TICKS(1000), &flags);
              ^
src\usb\usb_hid_rfid.cpp:289:13: note: Shadowed declaration
  esp_err_t ret = usb_host_install(&cfg);
            ^
src\usb\usb_hid_rfid.cpp:302:15: note: Shadow variable
    esp_err_t ret = usb_host_lib_handle_events(pdMS_TO_TICKS(1000), &flags);
              ^
src\usb\usb_hid_rfid.cpp:842:12: style: Local variable 'fileSize' shadows outer function [shadowFunction]
    size_t fileSize = checkFile.size();
           ^
src\src\Helpers\ESPEasy_Storage.h:47:5: note: Shadowed declaration
int fileSize(const String& fname);
    ^
src\usb\usb_hid_rfid.cpp:842:12: note: Shadow variable
    size_t fileSize = checkFile.size();
           ^
src\ESPEasy-Globals.cpp:352:6: style: The function 'beep' is never used. [unusedFunction]
void beep(uint16_t freq, uint32_t duration) {
     ^
src\ESPEasy-Globals.cpp:359:6: style: The function 'writeEEPROM' is never used. [unusedFunction]
void writeEEPROM(EEPROM_Address addr, uint8_t value) {
     ^
src\ESPEasy-Globals.cpp:367:9: style: The function 'readEEPROM' is never used. [unusedFunction]
uint8_t readEEPROM(EEPROM_Address addr) {
        ^
src\_C001.cpp:15:6: style: The function 'CPlugin_001' is never used. [unusedFunction]
bool CPlugin_001(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C001.cpp:137:6: style: The function 'do_process_c001_delay_queue' is never used. [unusedFunction]
bool do_process_c001_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C002.cpp:29:6: style: The function 'CPlugin_002' is never used. [unusedFunction]
bool CPlugin_002(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C003.cpp:12:6: style: The function 'CPlugin_003' is never used. [unusedFunction]
bool CPlugin_003(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C003.cpp:94:6: style: The function 'do_process_c003_delay_queue' is never used. [unusedFunction]
bool do_process_c003_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C004.cpp:12:6: style: The function 'CPlugin_004' is never used. [unusedFunction]
bool CPlugin_004(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C004.cpp:104:6: style: The function 'do_process_c004_delay_queue' is never used. [unusedFunction]
bool do_process_c004_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C005.cpp:40:6: style: The function 'CPlugin_005' is never used. [unusedFunction]
bool CPlugin_005(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C006.cpp:32:6: style: The function 'CPlugin_006' is never used. [unusedFunction]
bool CPlugin_006(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C007.cpp:16:6: style: The function 'CPlugin_007' is never used. [unusedFunction]
bool CPlugin_007(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C007.cpp:107:6: style: The function 'do_process_c007_delay_queue' is never used. [unusedFunction]
bool do_process_c007_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C008.cpp:13:6: style: The function 'CPlugin_008' is never used. [unusedFunction]
bool CPlugin_008(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C008.cpp:161:6: style: The function 'do_process_c008_delay_queue' is never used. [unusedFunction]
bool do_process_c008_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C009.cpp:39:6: style: The function 'CPlugin_009' is never used. [unusedFunction]
bool CPlugin_009(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C009.cpp:114:6: style: The function 'do_process_c009_delay_queue' is never used. [unusedFunction]
bool do_process_c009_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C010.cpp:12:6: style: The function 'CPlugin_010' is never used. [unusedFunction]
bool CPlugin_010(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_C010.cpp:141:6: style: The function 'do_process_c010_delay_queue' is never used. [unusedFunction]
bool do_process_c010_delay_queue(cpluginID_t cpluginID, const Queue_element_base& element_base, ControllerSettingsStruct& ControllerSettings) {
     ^
src\_C013.cpp:38:6: style: The function 'CPlugin_013' is never used. [unusedFunction]
bool CPlugin_013(CPlugin::Function function, struct EventStruct *event, String& string)
     ^
src\_Plugin_Helper.cpp:19:8: style: The function 'PCONFIG_LABEL' is never used. [unusedFunction]
String PCONFIG_LABEL(int n) {
       ^
src\_Plugin_Helper.cpp:165:6: style: The function 'pluginOptionalTaskIndexArgumentMatch' is never used. [unusedFunction]
bool pluginOptionalTaskIndexArgumentMatch(taskIndex_t taskIndex, const String& string, uint8_t paramNr) {
     ^
src\_Plugin_Helper.cpp:178:6: style: The function 'pluginWebformShowGPIOdescription' is never used. [unusedFunction]
bool pluginWebformShowGPIOdescription(taskIndex_t taskIndex,
     ^
src\src\Commands\Common.cpp:209:8: style: The function 'Command_GetORSetInt8_t' is never used. [unusedFunction]
String Command_GetORSetInt8_t(struct EventStruct *event,
       ^
src\src\ControllerQueue\ControllerDelayHandlerStruct.cpp:245:36: style: The function 'setAdditionalDelay' is never used. [unusedFunction]
void ControllerDelayHandlerStruct::setAdditionalDelay(unsigned long msecFromNow) {
                                   ^
src\src\CustomBuild\CompiletimeDefines.cpp:74:29: style: The function 'get_build_date_RFC1123' is never used. [unusedFunction]
const __FlashStringHelper * get_build_date_RFC1123() {
                            ^
src\src\CustomBuild\CompiletimeDefines.cpp:120:29: style: The function 'get_CDN_url_prefix' is never used. [unusedFunction]
const __FlashStringHelper * get_CDN_url_prefix() {
                            ^
src\src\DataStructs\CRCStruct.cpp:5:17: style: The function 'checkPassed' is never used. [unusedFunction]
bool CRCStruct::checkPassed() const
                ^
src\src\DataStructs\Caches.cpp:51:14: style: The function 'matchChecksumExtraTaskSettings' is never used. [unusedFunction]
bool Caches::matchChecksumExtraTaskSettings(taskIndex_t TaskIndex, const ChecksumType& checksum) const
             ^
src\src\DataStructs\Caches.cpp:241:17: style: The function 'getTaskDevicePluginConfig' is never used. [unusedFunction]
int16_t Caches::getTaskDevicePluginConfig(taskIndex_t TaskIndex, uint8_t rel_index)
                ^
src\src\DataStructs\Caches.cpp:418:14: style: The function 'updateExtraTaskSettingsCache_afterLoad_Save' is never used. [unusedFunction]
void Caches::updateExtraTaskSettingsCache_afterLoad_Save()
             ^
src\src\DataStructs\Caches.h:30:18: style: The function 'make_Long_ValuesIndex' is never used. [unusedFunction]
  static uint8_t make_Long_ValuesIndex(uint8_t arrayIndex)    {
                 ^
src\src\DataStructs\Caches.h:34:18: style: The function 'make_Uint16_ValuesIndex' is never used. [unusedFunction]
  static uint8_t make_Uint16_ValuesIndex(uint8_t arrayIndex)  {
                 ^
src\src\DataStructs\ChecksumType.cpp:88:20: style: The function 'setChecksum' is never used. [unusedFunction]
void ChecksumType::setChecksum(const uint8_t checksum[16]) {
                   ^
src\src\DataStructs\DeviceStruct.cpp:78:20: style: The function 'usesTaskDevicePin' is never used. [unusedFunction]
bool DeviceStruct::usesTaskDevicePin(int pin) const {
                   ^
src\src\DataStructs\DeviceStruct.cpp:94:20: style: The function 'isSerial' is never used. [unusedFunction]
bool DeviceStruct::isSerial() const {
                   ^
src\src\DataStructs\DeviceStruct.cpp:99:20: style: The function 'isSPI' is never used. [unusedFunction]
bool DeviceStruct::isSPI() const {
                   ^
src\src\DataStructs\DeviceStruct.cpp:105:20: style: The function 'isCustom' is never used. [unusedFunction]
bool DeviceStruct::isCustom() const {
                   ^
src\src\DataStructs\DeviceStruct.cpp:149:32: style: The function 'getPinSelectPurpose' is never used. [unusedFunction]
PinSelectPurpose DeviceStruct::getPinSelectPurpose(int pin) const {
                               ^
src\src\DataStructs\DeviceStruct.h:76:14: style: The function 'getPluginID' is never used. [unusedFunction]
  pluginID_t getPluginID() const
             ^
src\src\DataStructs\DeviceStruct.h:82:8: style: The function 'setPin1Direction' is never used. [unusedFunction]
  void setPin1Direction(gpio_direction direction) { setPinDirection(1, direction); }
       ^
src\src\DataStructs\DeviceStruct.h:83:8: style: The function 'setPin2Direction' is never used. [unusedFunction]
  void setPin2Direction(gpio_direction direction) { setPinDirection(2, direction); }
       ^
src\src\DataStructs\DeviceStruct.h:84:8: style: The function 'setPin3Direction' is never used. [unusedFunction]
  void setPin3Direction(gpio_direction direction) { setPinDirection(3, direction); }
       ^
src\src\DataStructs\DeviceStruct.h:195:17: style: The function 'getDeviceStructForEdit' is never used. [unusedFunction]
  DeviceStruct& getDeviceStructForEdit(deviceIndex_t index)
                ^
src\src\DataStructs\ESPEasy_EventStruct.cpp:67:19: style: The function 'setUnixTimeTimestamp' is never used. [unusedFunction]
void EventStruct::setUnixTimeTimestamp()
                  ^
src\src\DataStructs\ESPEasy_EventStruct.cpp:72:19: style: The function 'setLocalTimeTimestamp' is never used. [unusedFunction]
void EventStruct::setLocalTimeTimestamp()
                  ^
src\src\DataStructs\ExtendedControllerCredentialsStruct.cpp:49:45: style: The function 'save' is never used. [unusedFunction]
String ExtendedControllerCredentialsStruct::save() const
                                            ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:83:31: style: The function 'clearUnusedValueNames' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::clearUnusedValueNames(uint8_t usedVars) {
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:143:31: style: The function 'clearDefaultTaskDeviceValueNames' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::clearDefaultTaskDeviceValueNames()
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:152:31: style: The function 'setAllowedRange' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::setAllowedRange(taskVarIndex_t taskVarIndex, const float& minValue, const float& maxValue)
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:196:32: style: The function 'checkAllowedRange' is never used. [unusedFunction]
float ExtraTaskSettingsStruct::checkAllowedRange(taskVarIndex_t taskVarIndex, const float& value) const
                               ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:217:31: style: The function 'enablePluginStats' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::enablePluginStats(taskVarIndex_t taskVarIndex, bool enabled)
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:240:31: style: The function 'setPluginStatsConfig' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::setPluginStatsConfig(taskVarIndex_t taskVarIndex, PluginStats_Config_t config)
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:266:34: style: The function 'getTaskVarUnitOfMeasure' is never used. [unusedFunction]
uint8_t ExtraTaskSettingsStruct::getTaskVarUnitOfMeasure(taskVarIndex_t taskVarIndex) const {
                                 ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:271:31: style: The function 'setTaskVarUnitOfMeasure' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::setTaskVarUnitOfMeasure(taskVarIndex_t taskVarIndex,
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:285:31: style: The function 'setTaskVarCustomVType' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::setTaskVarCustomVType(taskVarIndex_t taskVarIndex,
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:299:31: style: The function 'setTaskVarStateClass' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::setTaskVarStateClass(taskVarIndex_t taskVarIndex,
                              ^
src\src\DataStructs\ExtraTaskSettingsStruct.cpp:308:31: style: The function 'populateDeviceValueNamesSeq' is never used. [unusedFunction]
void ExtraTaskSettingsStruct::populateDeviceValueNamesSeq(
                              ^
src\src\DataStructs\FactoryDefaultPref.cpp:34:44: style: The function 'to_NVS' is never used. [unusedFunction]
void ResetFactoryDefaultPreference_struct::to_NVS(ESPEasy_NVS_Helper& preferences) const
                                           ^
src\src\DataStructs\FactoryDefaultPref.h:169:8: style: The function 'saveURL' is never used. [unusedFunction]
  bool saveURL() const {
       ^
src\src\DataStructs\FactoryDefaultPref.h:177:8: style: The function 'storeCredentials' is never used. [unusedFunction]
  bool storeCredentials() const {
       ^
src\src\DataStructs\FactoryDefault_CDN_customurl_NVS.cpp:10:40: style: The function 'applyToSettings_from_NVS' is never used. [unusedFunction]
bool FactoryDefault_CDN_customurl_NVS::applyToSettings_from_NVS(ESPEasy_NVS_Helper& preferences)
                                       ^
src\src\DataStructs\FactoryDefault_CDN_customurl_NVS.cpp:21:40: style: The function 'fromSettings_to_NVS' is never used. [unusedFunction]
void FactoryDefault_CDN_customurl_NVS::fromSettings_to_NVS(ESPEasy_NVS_Helper& preferences)
                                       ^
src\src\DataStructs\FactoryDefault_CDN_customurl_NVS.cpp:26:40: style: The function 'clear_from_NVS' is never used. [unusedFunction]
void FactoryDefault_CDN_customurl_NVS::clear_from_NVS(ESPEasy_NVS_Helper& preferences)
                                       ^
src\src\DataStructs\I2CTypes.h:34:8: style: The function 'addRegister' is never used. [unusedFunction]
  bool addRegister(uint8_t reg, T value) {
       ^
src\src\DataStructs\MAC_address.cpp:62:19: style: The function 'all_one' is never used. [unusedFunction]
bool MAC_address::all_one() const
                  ^
src\src\DataStructs\MAC_address.h:68:8: style: The function 'isMulticast' is never used. [unusedFunction]
  bool isMulticast() const {
       ^
src\src\DataStructs\Modbus.cpp:242:14: style: The function 'tryRead' is never used. [unusedFunction]
bool Modbus::tryRead(uint8_t ModbusID, uint16_t M_register,  MODBUS_registerTypes_t type, char *IPaddress, ESPEASY_RULES_FLOAT_TYPE& result) {
             ^
src\src\DataStructs\Modbus.h:38:16: style: The function 'getReadErrors' is never used. [unusedFunction]
  unsigned int getReadErrors() {
               ^
src\src\DataStructs\Modbus.h:42:8: style: The function 'resetReadErrors' is never used. [unusedFunction]
  void resetReadErrors() {
       ^
src\src\DataStructs\NodeStruct.cpp:314:18: style: The function 'isThisNode' is never used. [unusedFunction]
bool NodeStruct::isThisNode() const
                 ^
src\src\DataStructs\NodesHandler.cpp:175:20: style: The function 'hasNode' is never used. [unusedFunction]
bool NodesHandler::hasNode(uint8_t unit_nr) const
                   ^
src\src\DataStructs\NodesHandler.cpp:254:34: style: The function 'getPreferredNode' is never used. [unusedFunction]
const NodeStruct * NodesHandler::getPreferredNode() const {
                                 ^
src\src\DataStructs\NodesHandler.cpp:534:23: style: The function 'getDistance' is never used. [unusedFunction]
uint8_t NodesHandler::getDistance() const {
                      ^
src\src\DataStructs\NodesHandler.cpp:646:20: style: The function 'recentlyBecameDistanceZero' is never used. [unusedFunction]
bool NodesHandler::recentlyBecameDistanceZero() {
                   ^
src\src\DataStructs\NodesHandler.cpp:671:20: style: The function 'lastTimeValidDistanceExpired' is never used. [unusedFunction]
bool NodesHandler::lastTimeValidDistanceExpired() const
                   ^
src\src\DataStructs\NodesHandler.h:80:21: style: The function 'get_lastTimeValidDistance' is never used. [unusedFunction]
  unsigned long     get_lastTimeValidDistance() const {
                    ^
src\src\DataStructs\PluginStats.cpp:554:19: style: The function 'webformLoad_show_val' is never used. [unusedFunction]
void PluginStats::webformLoad_show_val(
                  ^
src\src\DataStructs\PluginStats_Config.h:35:8: style: The function 'setAxisPosition' is never used. [unusedFunction]
  void setAxisPosition(AxisPosition position) {
       ^
src\src\DataStructs\PluginStats_Config.h:43:8: style: The function 'setAxisIndex' is never used. [unusedFunction]
  void setAxisIndex(uint8_t index) {
       ^
src\src\DataStructs\PluginStats_Config.h:55:8: style: The function 'setEnabled' is never used. [unusedFunction]
  void setEnabled(bool enable) {
       ^
src\src\DataStructs\PluginStats_Config.h:63:8: style: The function 'setHidden' is never used. [unusedFunction]
  void setHidden(bool enable) {
       ^
src\src\DataStructs\PluginStats_array.cpp:163:27: style: The function 'nrPluginStats' is never used. [unusedFunction]
size_t PluginStats_array::nrPluginStats() const
                          ^
src\src\DataStructs\PluginStats_timestamp.cpp:56:32: style: The function 'getTimestamp' is never used. [unusedFunction]
int64_t PluginStats_timestamp::getTimestamp(int lastNrSamples) const
                               ^
src\src\DataStructs\PluginTaskData_base.cpp:28:27: style: The function 'hasPluginStats' is never used. [unusedFunction]
bool PluginTaskData_base::hasPluginStats() const {
                          ^
src\src\DataStructs\SchedulerTimerID.cpp:10:24: style: The function 'setTimerType' is never used. [unusedFunction]
void SchedulerTimerID::setTimerType(SchedulerTimerType_e timerType)
                       ^
src\src\DataStructs\SecurityStruct.cpp:30:22: style: The function 'checksumMatch' is never used. [unusedFunction]
bool SecurityStruct::checksumMatch() const {
                     ^
src\src\DataStructs\SecurityStruct.cpp:34:22: style: The function 'updateChecksum' is never used. [unusedFunction]
bool SecurityStruct::updateChecksum() {
                     ^
src\src\DataStructs\SettingsStruct.h:72:8: style: The function 'uniqueMQTTclientIdReconnect_unused' is never used. [unusedFunction]
  bool uniqueMQTTclientIdReconnect_unused() const { return VariousBits_1.unused_02; }
       ^
src\src\DataStructs\SettingsStruct.h:198:8: style: The function 'EnableIPv6' is never used. [unusedFunction]
  bool EnableIPv6() const { return !VariousBits_2.EnableIPv6; }
       ^
src\src\DataStructs\SettingsStruct.h:374:8: style: The function 'forceSave' is never used. [unusedFunction]
  void forceSave() { memset(md5, 0, 16); }
       ^
src\src\DataStructs\SettingsStruct.h:386:12: style: The function 'getVariousBits2' is never used. [unusedFunction]
  uint32_t getVariousBits2() const {
           ^
src\src\DataStructs\WiFi_AP_Candidates_NVS.cpp:20:30: style: The function 'loadCandidate_from_NVS' is never used. [unusedFunction]
bool WiFi_AP_Candidates_NVS::loadCandidate_from_NVS(WiFi_AP_Candidate& candidate)
                             ^
src\src\DataStructs\WiFi_AP_Candidates_NVS.cpp:41:30: style: The function 'currentConnection_to_NVS' is never used. [unusedFunction]
void WiFi_AP_Candidates_NVS::currentConnection_to_NVS(const WiFi_AP_Candidate& candidate)
                             ^
src\src\DataStructs\mBusPacket.cpp:30:26: style: The function 'encodeManufacturerID' is never used. [unusedFunction]
int mBusPacket_header_t::encodeManufacturerID(const String& id_str)
                         ^
src\src\DataStructs\mBusPacket.cpp:51:29: style: The function 'getManufacturerId' is never used. [unusedFunction]
String mBusPacket_header_t::getManufacturerId() const
                            ^
src\src\DataStructs\mBusPacket.cpp:76:27: style: The function 'decode_fromUint64' is never used. [unusedFunction]
void mBusPacket_header_t::decode_fromUint64(uint64_t encodedValue)
                          ^
src\src\DataStructs\mBusPacket.cpp:114:24: style: The function 'getDeviceSerial' is never used. [unusedFunction]
uint32_t mBusPacket_t::getDeviceSerial() const
                       ^
src\src\DataStructs\mBusPacket.cpp:127:24: style: The function 'deviceID_to_map_key_no_length' is never used. [unusedFunction]
uint32_t mBusPacket_t::deviceID_to_map_key_no_length() const {
                       ^
src\src\DataStructs\mBusPacket.cpp:149:20: style: The function 'parse' is never used. [unusedFunction]
bool mBusPacket_t::parse(const String& payload)
                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:213:36: style: The function 'ShowDerivedTaskValues' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::ShowDerivedTaskValues(taskIndex_t taskIndex) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:228:36: style: The function 'EventAndLogDerivedTaskValues' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::EventAndLogDerivedTaskValues(taskIndex_t taskIndex) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:243:36: style: The function 'SendDerivedTaskValues' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::SendDerivedTaskValues(taskIndex_t taskIndex, controllerIndex_t controllerIndex) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:197:36: style: The function 'CombineTaskValues_SingleEvent' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::CombineTaskValues_SingleEvent(taskIndex_t taskIndex) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:443:36: style: The function 'isTaskEnableReadonly' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::isTaskEnableReadonly(taskIndex_t taskIndex) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:451:36: style: The function 'setTaskEnableReadonly' is never used. [unusedFunction]
void SettingsStruct_tmpl<N_TASKS>::setTaskEnableReadonly(taskIndex_t taskIndex, bool value) {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:1223:36: style: The function 'isEthernetPinOptional' is never used. [unusedFunction]
bool SettingsStruct_tmpl<N_TASKS>::isEthernetPinOptional(int8_t pin) const {
                                   ^
src\src\DataStructs_templ\SettingsStruct.cpp:1237:38: style: The function 'getTaskDevicePin' is never used. [unusedFunction]
int8_t SettingsStruct_tmpl<N_TASKS>::getTaskDevicePin(taskIndex_t taskIndex, uint8_t pinnr) const {
                                     ^
src\src\DataTypes\EthernetParameters.cpp:91:16: style: The function 'to_ESP_phy_type' is never used. [unusedFunction]
eth_phy_type_t to_ESP_phy_type(EthPhyType_t phyType)
               ^
src\src\DataTypes\FormSelectorOptions.cpp:89:27: style: The function 'clearClassName' is never used. [unusedFunction]
void FormSelectorOptions::clearClassName()
                          ^
src\src\DataTypes\PluginID.h:42:8: style: The function 'setInvalid' is never used. [unusedFunction]
  void setInvalid() {
       ^
src\src\DataTypes\SPI_options.cpp:55:28: style: The function 'getSPI_optionToString' is never used. [unusedFunction]
const __FlashStringHelper* getSPI_optionToString(SPI_Options_e option) {
                           ^
src\src\DataTypes\SPI_options.cpp:81:28: style: The function 'getSPI_optionToShortString' is never used. [unusedFunction]
const __FlashStringHelper* getSPI_optionToShortString(SPI_Options_e option) {
                           ^
src\src\DataTypes\SettingsType.cpp:167:19: style: The function 'getFileSize' is never used. [unusedFunction]
int SettingsType::getFileSize(Enum settingsType) {
                  ^
src\src\DataTypes\SettingsType.cpp:184:28: style: The function 'getSVGcolor' is never used. [unusedFunction]
unsigned int SettingsType::getSVGcolor(Enum settingsType) {
                           ^
src\src\DataTypes\SettingsType.cpp:258:22: style: The function 'getInitFileSize' is never used. [unusedFunction]
size_t SettingsType::getInitFileSize(SettingsType::SettingsFileEnum file_type) {
                     ^
src\src\DataTypes\TaskEnabledState.cpp:11:24: style: The function 'clearTempDisableFlags' is never used. [unusedFunction]
void TaskEnabledState::clearTempDisableFlags()
                       ^
src\src\DataTypes\TaskEnabledState.cpp:19:24: style: The function 'setRetryInit' is never used. [unusedFunction]
void TaskEnabledState::setRetryInit()
                       ^
src\src\DataTypes\TaskValues_Data.cpp:26:25: style: The function 'copyValue' is never used. [unusedFunction]
void TaskValues_Data_t::copyValue(const TaskValues_Data_t& other, uint8_t varNr, Sensor_VType sensorType)
                        ^
src\src\ESPEasyCore\ESPEasyEth.cpp:79:6: style: The function 'ethPrepare' is never used. [unusedFunction]
bool ethPrepare() {
     ^
src\src\ESPEasyCore\ESPEasyEth.cpp:112:13: style: The function 'ETHMacAddress' is never used. [unusedFunction]
MAC_address ETHMacAddress() {
            ^
src\src\ESPEasyCore\ESPEasyEth.cpp:141:6: style: The function 'ETHConnectRelaxed' is never used. [unusedFunction]
bool ETHConnectRelaxed() {
     ^
src\src\ESPEasyCore\ESPEasyEth.cpp:302:6: style: The function 'ethResetGPIOpins' is never used. [unusedFunction]
void ethResetGPIOpins() {
     ^
src\src\ESPEasyCore\ESPEasyEth.cpp:337:6: style: The function 'ETHConnected' is never used. [unusedFunction]
bool ETHConnected() {
     ^
src\src\ESPEasyCore\ESPEasyWiFiEvent.cpp:219:6: style: The function 'WiFiEvent' is never used. [unusedFunction]
void WiFiEvent(system_event_id_t event, system_event_info_t info) {
     ^
src\src\ESPEasyCore\ESPEasy_Log.cpp:72:6: style: The function 'disableSerialLog' is never used. [unusedFunction]
void disableSerialLog() {
     ^
src\src\ESPEasyCore\ESPEasy_loop.cpp:62:6: style: The function 'ESPEasy_loop' is never used. [unusedFunction]
void ESPEasy_loop()
     ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:120:6: style: The function 'sw_watchdog_callback' is never used. [unusedFunction]
void sw_watchdog_callback(void *arg)
     ^
src\src\ESPEasyCore\ESPEasy_setup.cpp:129:6: style: The function 'ESPEasy_setup' is never used. [unusedFunction]
void ESPEasy_setup()
     ^
src\src\Globals\NPlugins.cpp:80:8: style: The function 'getNPluginNameFromNotifierIndex' is never used. [unusedFunction]
String getNPluginNameFromNotifierIndex(notifierIndex_t NotifierIndex) {
       ^
src\src\Globals\Plugins.cpp:135:8: style: The function 'getPluginNameFromPluginID' is never used. [unusedFunction]
String getPluginNameFromPluginID(pluginID_t pluginID) {
       ^
src\src\Globals\Plugins.cpp:159:6: style: The function 'getPluginDisplayParametersFromTaskIndex' is never used. [unusedFunction]
bool getPluginDisplayParametersFromTaskIndex(taskIndex_t taskIndex, uint16_t& x, uint16_t& y, uint16_t& r, uint16_t& colorDepth) {
     ^
src\src\Globals\Plugins.cpp:300:6: style: The function 'loadDefaultTaskValueNames_ifEmpty' is never used. [unusedFunction]
void loadDefaultTaskValueNames_ifEmpty(taskIndex_t TaskIndex) {
     ^
src\src\Globals\RuntimeData.cpp:34:6: style: The function 'getNextCustomFloatVar' is never used. [unusedFunction]
bool getNextCustomFloatVar(String& indexName, ESPEASY_RULES_FLOAT_TYPE& value) {
     ^
src\src\Globals\RuntimeData.cpp:90:6: style: The function 'getNextCustomStringVar' is never used. [unusedFunction]
bool getNextCustomStringVar(String& indexName, String& value) {
     ^
src\src\Helpers\AdafruitGFX_helper.h:536:10: style: The function 'getTrigger' is never used. [unusedFunction]
  String getTrigger() {                              // Returns the current trigger
         ^
src\src\Helpers\AdafruitGFX_helper.h:551:11: style: The function 'getWindow' is never used. [unusedFunction]
  uint8_t getWindow() const {
          ^
src\src\Helpers\CRC_functions.cpp:60:9: style: The function 'calc_CRC8' is never used. [unusedFunction]
uint8_t calc_CRC8(const uint8_t *data, size_t length)
        ^
src\src\Helpers\Convert.cpp:201:15: style: The function 'float2ul' is never used. [unusedFunction]
unsigned long float2ul(float f)
              ^
src\src\Helpers\Convert.cpp:212:7: style: The function 'ul2float' is never used. [unusedFunction]
float ul2float(unsigned long ul)
      ^
src\src\Helpers\Dallas1WireHelper.cpp:205:6: style: The function 'Dallas_addr_selector_webform_load' is never used. [unusedFunction]
void Dallas_addr_selector_webform_load(taskIndex_t TaskIndex, int8_t gpio_pin_rx, int8_t gpio_pin_tx, uint8_t nrVariables) {
     ^
src\src\Helpers\Dallas1WireHelper.cpp:301:6: style: The function 'Dallas_show_sensor_stats_webform_load' is never used. [unusedFunction]
void Dallas_show_sensor_stats_webform_load(const Dallas_SensorData& sensor_data)
     ^
src\src\Helpers\Dallas1WireHelper.cpp:346:6: style: The function 'Dallas_addr_selector_webform_save' is never used. [unusedFunction]
void Dallas_addr_selector_webform_save(taskIndex_t TaskIndex, int8_t gpio_pin_rx, int8_t gpio_pin_tx, uint8_t nrVariables)
     ^
src\src\Helpers\Dallas1WireHelper.cpp:1270:10: style: The function 'Dallas_crc16' is never used. [unusedFunction]
uint16_t Dallas_crc16(const uint8_t *input, uint16_t len, uint16_t crc)
         ^
src\src\Helpers\ESPEasyStatistics.cpp:25:6: style: The function 'jsonStatistics' is never used. [unusedFunction]
void jsonStatistics(bool clearStats) {
     ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:303:28: style: The function 'isCalibrationActive' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::isCalibrationActive() {
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:874:31: style: The function 'get_device_valuecount' is never used. [unusedFunction]
uint8_t ESPEasy_TouchHandler::get_device_valuecount(struct EventStruct *event) {
                              ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:889:28: style: The function 'plugin_webform_load' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::plugin_webform_load(struct EventStruct *event) {
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1467:28: style: The function 'plugin_webform_save' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::plugin_webform_save(struct EventStruct *event) {
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1685:28: style: The function 'plugin_fifty_per_second' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::plugin_fifty_per_second(struct EventStruct *event,
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1876:28: style: The function 'releaseTouch' is never used. [unusedFunction]
void ESPEasy_TouchHandler::releaseTouch(struct EventStruct *event) {
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:1921:28: style: The function 'plugin_write' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::plugin_write(struct EventStruct *event,
                           ^
src\src\Helpers\ESPEasy_TouchHandler.cpp:2026:28: style: The function 'plugin_get_config_value' is never used. [unusedFunction]
bool ESPEasy_TouchHandler::plugin_get_config_value(struct EventStruct *event,
                           ^
src\src\Helpers\ESPEasy_TouchHandler.h:362:8: style: The function 'touchEnabled' is never used. [unusedFunction]
  bool touchEnabled() {
       ^
src\src\Helpers\ESPEasy_checks.cpp:205:8: style: The function 'ReportOffsetErrorInStruct' is never used. [unusedFunction]
String ReportOffsetErrorInStruct(const String& structname, size_t offset) {
       ^
src\src\Helpers\ESPEasy_checks.cpp:220:6: style: The function 'SettingsCheck' is never used. [unusedFunction]
bool SettingsCheck(String& error) {
     ^
src\src\Helpers\ESPEasy_checks.cpp:244:8: style: The function 'checkTaskSettings' is never used. [unusedFunction]
String checkTaskSettings(taskIndex_t taskIndex) {
       ^
src\src\Helpers\ESPEasy_math.cpp:213:7: style: The function 'ceilf' is never used. [unusedFunction]
float ceilf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:218:7: style: The function 'floorf' is never used. [unusedFunction]
float floorf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:223:7: style: The function 'fabsf' is never used. [unusedFunction]
float fabsf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:228:7: style: The function 'acosf' is never used. [unusedFunction]
float acosf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:238:7: style: The function 'asinf' is never used. [unusedFunction]
float asinf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:243:7: style: The function 'sinf' is never used. [unusedFunction]
float sinf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:248:7: style: The function 'atanf' is never used. [unusedFunction]
float atanf(const float x)
      ^
src\src\Helpers\ESPEasy_math.cpp:253:7: style: The function 'tanf' is never used. [unusedFunction]
float tanf(const float x)
      ^
src\src\Helpers\ESPEasy_time.cpp:201:24: style: The function 'systemMicros_to_Localtime' is never used. [unusedFunction]
uint32_t ESPEasy_time::systemMicros_to_Localtime(const int64_t& systemMicros, uint32_t& unix_time_frac) const
                       ^
src\src\Helpers\ESPEasy_time_calc.cpp:26:10: style: The function 'millis_to_unix_time_frac' is never used. [unusedFunction]
uint32_t millis_to_unix_time_frac(uint32_t millis)
         ^
src\src\Helpers\ESPEasy_time_calc.cpp:61:10: style: The function 'sec_time_frac_to_uptime_offset_usec' is never used. [unusedFunction]
uint64_t sec_time_frac_to_uptime_offset_usec(const uint32_t& seconds,
         ^
src\src\Helpers\ESPEasy_time_calc.cpp:273:8: style: The function 'timeLong2String' is never used. [unusedFunction]
String timeLong2String(unsigned long lngTime)
       ^
src\src\Helpers\ESPEasy_time_calc.h:69:13: style: The function 'usecTimeOutReached' is never used. [unusedFunction]
inline bool usecTimeOutReached(const uint64_t& timer) {
            ^
src\src\Helpers\Hardware_ADC.cpp:91:22: style: The function 'adc_calibration_init' is never used. [unusedFunction]
bool Hardware_ADC_t::adc_calibration_init()
                     ^
src\src\Helpers\Hardware_ADC_cali.cpp:132:50: style: The function 'getADC_factory_calibration_type' is never used. [unusedFunction]
const __FlashStringHelper * Hardware_ADC_cali_t::getADC_factory_calibration_type() const {
                                                 ^
src\src\Helpers\Hardware_ADC_cali.h:55:9: style: The function 'getMinOut' is never used. [unusedFunction]
  float getMinOut() const {
        ^
src\src\Helpers\Hardware_ADC_cali.h:59:9: style: The function 'getMaxOut' is never used. [unusedFunction]
  float getMaxOut() const {
        ^
src\src\Helpers\Hardware_ADC_cali.h:63:8: style: The function 'useFactoryCalibration' is never used. [unusedFunction]
  bool useFactoryCalibration() const {
       ^
src\src\Helpers\Hardware_I2C.cpp:218:6: style: The function 'I2CMultiplexerReset' is never used. [unusedFunction]
void I2CMultiplexerReset(uint8_t i2cBus) {
     ^
src\src\Helpers\Hardware_device_info.cpp:67:9: style: The function 'getPartitionInfo' is never used. [unusedFunction]
int32_t getPartitionInfo(ESP8266_partition_type ptype, uint32_t& address, int32_t& size)
        ^
src\src\Helpers\Hardware_device_info.cpp:147:10: style: The function 'getXtalFrequencyMHz' is never used. [unusedFunction]
uint32_t getXtalFrequencyMHz() {
         ^
src\src\Helpers\Hardware_device_info.cpp:179:8: style: The function 'getChipFeaturesString' is never used. [unusedFunction]
String getChipFeaturesString() {
       ^
src\src\Helpers\Hardware_device_info.cpp:324:6: style: The function 'flashChipVendorPuya' is never used. [unusedFunction]
bool flashChipVendorPuya() {
     ^
src\src\Helpers\I2C_Plugin_Helper.cpp:10:6: style: The function 'checkI2CConfigValid_toHtml' is never used. [unusedFunction]
bool checkI2CConfigValid_toHtml(taskIndex_t taskIndex,
     ^
src\src\Helpers\I2C_access.cpp:154:6: style: The function 'I2C_read_words' is never used. [unusedFunction]
bool I2C_read_words(uint8_t i2caddr, I2Cdata_words& data) {
     ^
src\src\Helpers\I2C_access.cpp:200:6: style: The function 'I2C_write8_reg16' is never used. [unusedFunction]
bool I2C_write8_reg16(uint8_t i2caddr, uint16_t reg, uint8_t value) {
     ^
src\src\Helpers\I2C_access.cpp:244:6: style: The function 'I2C_write16_LE' is never used. [unusedFunction]
bool I2C_write16_LE(uint8_t i2caddr, uint16_t value) {
     ^
src\src\Helpers\I2C_access.cpp:287:6: style: The function 'I2C_write16_LE_reg' is never used. [unusedFunction]
bool I2C_write16_LE_reg(uint8_t i2caddr, uint8_t reg, uint16_t value) {
     ^
src\src\Helpers\I2C_access.cpp:443:9: style: The function 'I2C_readS16_reg' is never used. [unusedFunction]
int16_t I2C_readS16_reg(uint8_t i2caddr, uint8_t reg, bool *is_ok) {
        ^
src\src\Helpers\Improv_Helper.cpp:46:6: style: The function 'OnImprovESPEasyConnectWiFi' is never used. [unusedFunction]
bool OnImprovESPEasyConnectWiFi(const char *ssid, const char *password)
     ^
src\src\Helpers\Memory.cpp:54:6: style: The function 'allocatedOnStack' is never used. [unusedFunction]
bool allocatedOnStack(const void *address) {
     ^
src\src\Helpers\Memory.cpp:108:7: style: The function 'special_malloc' is never used. [unusedFunction]
void* special_malloc(uint32_t size) {
      ^
src\src\Helpers\Memory.cpp:139:7: style: The function 'special_realloc' is never used. [unusedFunction]
void* special_realloc(void *ptr, size_t size) {
      ^
src\src\Helpers\Misc.cpp:169:6: style: The function 'dump' is never used. [unusedFunction]
void dump(uint32_t addr) { // Seems already included in core 2.4 ...
     ^
src\src\Helpers\Misc.cpp:397:6: style: The function 'HSV2RGB' is never used. [unusedFunction]
void HSV2RGB(float H, float S, float I, int rgb[3]) {
     ^
src\src\Helpers\Misc.cpp:493:6: style: The function 'RGB2HSV' is never used. [unusedFunction]
void RGB2HSV(uint8_t r, uint8_t g, uint8_t b, float hsv[3]) {
     ^
src\src\Helpers\Modbus_RTU.cpp:81:24: style: The function 'getStatistics' is never used. [unusedFunction]
void ModbusRTU_struct::getStatistics(uint32_t& pass, uint32_t& fail, uint32_t& nodata) const {
                       ^
src\src\Helpers\Modbus_RTU.cpp:87:24: style: The function 'setModbusTimeout' is never used. [unusedFunction]
void ModbusRTU_struct::setModbusTimeout(uint16_t timeout) {
                       ^
src\src\Helpers\Modbus_RTU.cpp:91:28: style: The function 'getModbusTimeout' is never used. [unusedFunction]
uint16_t ModbusRTU_struct::getModbusTimeout() const {
                           ^
src\src\Helpers\Modbus_RTU.cpp:543:25: style: The function 'read_float_HoldingRegister' is never used. [unusedFunction]
float ModbusRTU_struct::read_float_HoldingRegister(short address) {
                        ^
src\src\Helpers\Modbus_RTU.cpp:559:23: style: The function 'readHoldingRegister' is never used. [unusedFunction]
int ModbusRTU_struct::readHoldingRegister(short address, uint8_t& errorcode) {
                      ^
src\src\Helpers\Modbus_RTU.cpp:580:23: style: The function 'writeMultipleRegisters' is never used. [unusedFunction]
int ModbusRTU_struct::writeMultipleRegisters(short address, short value) {
                      ^
src\src\Helpers\Modbus_RTU.cpp:699:23: style: The function 'writeSpecialCommandRegister' is never used. [unusedFunction]
int ModbusRTU_struct::writeSpecialCommandRegister(uint8_t command) {
                      ^
src\src\Helpers\Modbus_RTU.cpp:710:32: style: The function 'read_RAM_EEPROM' is never used. [unusedFunction]
unsigned int ModbusRTU_struct::read_RAM_EEPROM(uint8_t command, uint8_t startAddress,
                               ^
src\src\Helpers\Modbus_RTU.cpp:757:27: style: The function 'getLastError' is never used. [unusedFunction]
uint8_t ModbusRTU_struct::getLastError() const {
                          ^
src\src\Helpers\Modbus_RTU.cpp:761:28: style: The function 'getFailedReadsSinceLastValid' is never used. [unusedFunction]
uint32_t ModbusRTU_struct::getFailedReadsSinceLastValid() const {
                           ^
src\src\Helpers\OLed_helper.cpp:6:6: style: The function 'OLedFormController' is never used. [unusedFunction]
void OLedFormController(const __FlashStringHelper *id,
     ^
src\src\Helpers\OLed_helper.cpp:24:6: style: The function 'OLedFormRotation' is never used. [unusedFunction]
void OLedFormRotation(const __FlashStringHelper *id,
     ^
src\src\Helpers\OLed_helper.cpp:41:6: style: The function 'OLedFormContrast' is never used. [unusedFunction]
void OLedFormContrast(const __FlashStringHelper *id,
     ^
src\src\Helpers\OLed_helper.cpp:64:6: style: The function 'OLedFormSizes' is never used. [unusedFunction]
void OLedFormSizes(const __FlashStringHelper *id,
     ^
src\src\Helpers\OLed_helper.cpp:83:6: style: The function 'OLedSetContrast' is never used. [unusedFunction]
void OLedSetContrast(OLEDDisplay   *_display,
     ^
src\src\Helpers\OLed_helper.cpp:115:6: style: The function 'OLedI2CAddressCheck' is never used. [unusedFunction]
bool OLedI2CAddressCheck(uint8_t                    function,
     ^
src\src\Helpers\OversamplingHelper.h:70:18: style: The function 'resetKeepLast' is never used. [unusedFunction]
  SUM_VALUE_TYPE resetKeepLast() {
                 ^
src\src\Helpers\OversamplingHelper.h:82:8: style: The function 'resetKeepLastWeighted' is never used. [unusedFunction]
  void resetKeepLastWeighted(int countRatio) {
       ^
src\src\Helpers\OversamplingHelper.h:96:8: style: The function 'setFilterPeaks' is never used. [unusedFunction]
  void setFilterPeaks(bool enable) {
       ^
src\src\Helpers\RulesMatcher.cpp:137:6: style: The function 'compareStringValues' is never used. [unusedFunction]
bool compareStringValues(char       compare,
     ^
src\src\Helpers\Scheduler_IntervalTimer.cpp:48:25: style: The function 'setNextStrictTimeInterval' is never used. [unusedFunction]
void ESPEasy_Scheduler::setNextStrictTimeInterval(unsigned long     & timer,
                        ^
src\src\Helpers\Scheduler_PluginTimer.cpp:15:25: style: The function 'setPluginTimer' is never used. [unusedFunction]
void ESPEasy_Scheduler::setPluginTimer(unsigned long msecFromNow, pluginID_t pluginID, int Par1, int Par2, int Par3, int Par4, int Par5)
                        ^
src\src\Helpers\Scheduler_SystemEventTimer.cpp:75:25: style: The function 'schedule_controller_event_timer' is never used. [unusedFunction]
void ESPEasy_Scheduler::schedule_controller_event_timer(
                        ^
src\src\Helpers\Scheduler_TaskDeviceTimer.cpp:32:25: style: The function 'schedule_all_task_device_timers' is never used. [unusedFunction]
void ESPEasy_Scheduler::schedule_all_task_device_timers() {
                        ^
src\src\Helpers\StringConverter.cpp:193:6: style: The function 'isIP' is never used. [unusedFunction]
bool isIP(const String& string) {
     ^
src\src\Helpers\StringConverter.cpp:304:8: style: The function 'formatToHex_wordarray' is never used. [unusedFunction]
String formatToHex_wordarray(const uint16_t* data, size_t size)
       ^
src\src\Helpers\StringConverter.cpp:394:6: style: The function 'removeExtraNewLine' is never used. [unusedFunction]
void removeExtraNewLine(String& line) {
     ^
src\src\Helpers\StringConverter.cpp:404:6: style: The function 'addNewLine' is never used. [unusedFunction]
void addNewLine(String& line) {
     ^
src\src\Helpers\StringConverter.cpp:645:8: style: The function 'wrapIfContains' is never used. [unusedFunction]
String wrapIfContains(const String& value, char contains, char wrap) {
       ^
src\src\Helpers\StringConverter.cpp:937:8: style: The function 'parseStringToEndKeepCaseNoTrim' is never used. [unusedFunction]
String parseStringToEndKeepCaseNoTrim(const String& string, uint8_t indexFind, char separator) {
       ^
src\src\Helpers\StringConverter.cpp:996:8: style: The function 'parseHexTextString' is never used. [unusedFunction]
String parseHexTextString(const String& argument, int index) {
       ^
src\src\Helpers\StringConverter.cpp:1087:7: style: The function 'GetTextIndexed' is never used. [unusedFunction]
char* GetTextIndexed(char* destination, size_t destination_size, uint32_t index, const char* haystack)
      ^
src\src\Helpers\StringConverter.cpp:1390:6: style: The function 'parseDeviceClassVariable' is never used. [unusedFunction]
void parseDeviceClassVariable(String                   & s,
     ^
src\src\Helpers\StringConverter.cpp:1396:6: style: The function 'parseUniqueIdVariable' is never used. [unusedFunction]
void parseUniqueIdVariable(String      & s,
     ^
src\src\Helpers\StringConverter.cpp:1402:6: style: The function 'parseElementIdVariable' is never used. [unusedFunction]
void parseElementIdVariable(String     & s,
     ^
src\src\Helpers\StringConverter_Numerical.cpp:15:15: style: The function 'str2int' is never used. [unusedFunction]
unsigned long str2int(const char *string)
              ^
src\src\Helpers\StringConverter_Numerical.cpp:258:6: style: The function 'string2float' is never used. [unusedFunction]
bool string2float(const String& string, float& floatvalue) {
     ^
src\src\Helpers\StringGenerator_GPIO.cpp:66:8: style: The function 'formatGpioName_input_optional' is never used. [unusedFunction]
String formatGpioName_input_optional(const __FlashStringHelper * label) {
       ^
src\src\Helpers\StringGenerator_GPIO.cpp:94:8: style: The function 'formatGpioName_TX_HW' is never used. [unusedFunction]
String formatGpioName_TX_HW(bool optional) {
       ^
src\src\Helpers\StringGenerator_GPIO.cpp:98:8: style: The function 'formatGpioName_RX_HW' is never used. [unusedFunction]
String formatGpioName_RX_HW(bool optional) {
       ^
src\src\Helpers\StringGenerator_Web.cpp:23:6: style: The function 'datalistAddValue' is never used. [unusedFunction]
void datalistAddValue(const String& value) {
     ^
src\src\Helpers\StringGenerator_Web.cpp:35:6: style: The function 'datalistFinish' is never used. [unusedFunction]
void datalistFinish() {
     ^
src\src\Helpers\SystemVariables.cpp:722:23: style: The function 'setServerStatus' is never used. [unusedFunction]
void SystemVariables::setServerStatus(bool connected) {
                      ^
src\src\Helpers\TarStream.cpp:656:17: style: The function 'isFileIncluded' is never used. [unusedFunction]
bool TarStream::isFileIncluded(const String& filename) {
                ^
src\src\Helpers\_CPlugin_DomoticzHelper.cpp:48:5: style: The function 'mapVccToDomoticz' is never used. [unusedFunction]
int mapVccToDomoticz() {
    ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:31:33: style: The function 'addGPIOtriggerMode' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::addGPIOtriggerMode(const __FlashStringHelper *label,
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:98:33: style: The function 'setPulseCountTotal' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::setPulseCountTotal(unsigned long pulseTotalCounter)
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:103:33: style: The function 'setPulseCounter' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::setPulseCounter(unsigned long pulseCounter, float pulseTime_msec)
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:115:33: style: The function 'doPulseStepProcessing' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::doPulseStepProcessing(int pStep)
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:406:33: style: The function 'updateStatisticalCounters' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::updateStatisticalCounters(int par1) {
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:413:33: style: The function 'setStatsLogLevel' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::setStatsLogLevel(uint8_t logLevel) {
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.cpp:458:33: style: The function 'doTimingLogging' is never used. [unusedFunction]
void Internal_GPIO_pulseHelper::doTimingLogging(uint8_t logLevel)
                                ^
src\src\Helpers\_Internal_GPIO_pulseHelper.h:111:10: style: The function 'setDebounceTime' is never used. [unusedFunction]
    void setDebounceTime(uint16_t debounceTime_u16) {
         ^
src\src\Helpers\_Plugin_Helper_serial.cpp:24:6: style: The function 'serialHelper_log_GpioDescription' is never used. [unusedFunction]
void serialHelper_log_GpioDescription(ESPEasySerialPort typeHint, int config_pin1, int config_pin2) {
     ^
src\src\Helpers\_Plugin_Helper_serial.cpp:83:6: style: The function 'serialHelper_modbus_getGpioNames' is never used. [unusedFunction]
void serialHelper_modbus_getGpioNames(struct EventStruct *event,
     ^
src\src\Helpers\_Plugin_Helper_serial.cpp:123:6: style: The function 'serialHelper_addI2CuartSelectors' is never used. [unusedFunction]
void serialHelper_addI2CuartSelectors(int address, int channel) {
     ^
src\src\Helpers\_Plugin_Helper_serial.cpp:368:6: style: The function 'serialHelper_serialconfig_webformLoad' is never used. [unusedFunction]
void serialHelper_serialconfig_webformLoad(struct EventStruct *event, uint8_t currentSelection) {
     ^
src\src\Helpers\_Plugin_Helper_serial.cpp:409:9: style: The function 'serialHelper_serialconfig_webformSave' is never used. [unusedFunction]
uint8_t serialHelper_serialconfig_webformSave() {
        ^
src\src\Helpers\_Plugin_Helper_serial.cpp:421:9: style: The function 'serialHelper_convertOldSerialConfig' is never used. [unusedFunction]
uint8_t serialHelper_convertOldSerialConfig(uint8_t newLocationConfig) {
        ^
src\src\Helpers\_Plugin_Helper_webform.cpp:17:6: style: The function 'SwitchWebformLoad' is never used. [unusedFunction]
void SwitchWebformLoad(
     ^
src\src\Helpers\_Plugin_Helper_webform.cpp:111:6: style: The function 'SwitchWebformSave' is never used. [unusedFunction]
void SwitchWebformSave(
     ^
src\src\Helpers\_Plugin_SensorTypeHelper.cpp:12:6: style: The function 'sensorTypeHelper_webformLoad_allTypes' is never used. [unusedFunction]
void sensorTypeHelper_webformLoad_allTypes(struct EventStruct *event, int pconfigIndex)
     ^
src\src\Helpers\_Plugin_SensorTypeHelper.cpp:50:6: style: The function 'sensorTypeHelper_webformLoad_simple' is never used. [unusedFunction]
void sensorTypeHelper_webformLoad_simple(struct EventStruct *event, int pconfigIndex)
     ^
src\src\PluginStructs\P002_data_struct.cpp:117:24: style: The function 'webformLoad' is never used. [unusedFunction]
void P002_data_struct::webformLoad(struct EventStruct *event)
                       ^
src\src\PluginStructs\P002_data_struct.cpp:545:24: style: The function 'formatADC_statistics' is never used. [unusedFunction]
void P002_data_struct::formatADC_statistics(const __FlashStringHelper *label, int raw, bool includeOutputValue) const
                       ^
src\src\PluginStructs\P002_data_struct.cpp:782:26: style: The function 'webformSave' is never used. [unusedFunction]
String P002_data_struct::webformSave(struct EventStruct *event)
                         ^
src\src\PluginStructs\P002_data_struct.cpp:836:24: style: The function 'takeSample' is never used. [unusedFunction]
void P002_data_struct::takeSample()
                       ^
src\src\PluginStructs\P002_data_struct.cpp:955:28: style: The function 'getOversamplingCount' is never used. [unusedFunction]
uint32_t P002_data_struct::getOversamplingCount() const
                           ^
src\src\PluginStructs\P002_data_struct.cpp:1253:24: style: The function 'plugin_set_config' is never used. [unusedFunction]
bool P002_data_struct::plugin_set_config(struct EventStruct *event,
                       ^
src\src\PluginStructs\P003_data_struct.cpp:8:24: style: The function 'plugin_read' is never used. [unusedFunction]
bool P003_data_struct::plugin_read(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P003_data_struct.cpp:59:24: style: The function 'plugin_peek' is never used. [unusedFunction]
bool P003_data_struct::plugin_peek(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P004_data_struct.cpp:27:24: style: The function 'sensorAddressSet' is never used. [unusedFunction]
bool P004_data_struct::sensorAddressSet() const
                       ^
src\src\PluginStructs\P004_data_struct.cpp:133:24: style: The function 'collect_values' is never used. [unusedFunction]
bool P004_data_struct::collect_values() {
                       ^
src\src\PluginStructs\P004_data_struct.cpp:144:24: style: The function 'read_temp' is never used. [unusedFunction]
bool P004_data_struct::read_temp(float& value, uint8_t index) const {
                       ^
src\src\PluginStructs\P004_data_struct.cpp:181:37: style: The function 'get_sensor_data' is never used. [unusedFunction]
Dallas_SensorData P004_data_struct::get_sensor_data(uint8_t index) const {
                                    ^
src\src\PluginStructs\P004_data_struct.cpp:188:23: style: The function 'measure_rise_time' is never used. [unusedFunction]
int P004_data_struct::measure_rise_time() const {
                      ^
src\src\PluginStructs\P004_data_struct.h:66:17: style: The function 'get_timer' is never used. [unusedFunction]
  unsigned long get_timer() const {
                ^
src\src\PluginStructs\P004_data_struct.h:70:17: style: The function 'get_measurement_start' is never used. [unusedFunction]
  unsigned long get_measurement_start() const {
                ^
src\src\PluginStructs\P004_data_struct.h:74:10: style: The function 'get_gpio_rx' is never used. [unusedFunction]
  int8_t get_gpio_rx() const {
         ^
src\src\PluginStructs\P004_data_struct.h:78:10: style: The function 'get_gpio_tx' is never used. [unusedFunction]
  int8_t get_gpio_tx() const {
         ^
src\src\PluginStructs\P005_data_struct.cpp:101:24: style: The function 'readDHT' is never used. [unusedFunction]
bool P005_data_struct::readDHT(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P008_data_struct.cpp:57:24: style: The function 'plugin_init' is never used. [unusedFunction]
bool P008_data_struct::plugin_init(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P008_data_struct.cpp:86:24: style: The function 'plugin_once_a_second' is never used. [unusedFunction]
bool P008_data_struct::plugin_once_a_second(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P008_data_struct.cpp:187:24: style: The function 'plugin_timer_in' is never used. [unusedFunction]
bool P008_data_struct::plugin_timer_in(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P008_data_struct.cpp:233:24: style: The function 'plugin_get_config' is never used. [unusedFunction]
bool P008_data_struct::plugin_get_config(struct EventStruct *event,
                       ^
src\src\PluginStructs\P012_data_struct.cpp:44:24: style: The function 'setBacklightTimer' is never used. [unusedFunction]
void P012_data_struct::setBacklightTimer(uint8_t timer) {
                       ^
src\src\PluginStructs\P012_data_struct.cpp:49:24: style: The function 'checkTimer' is never used. [unusedFunction]
void P012_data_struct::checkTimer() {
                       ^
src\src\PluginStructs\P012_data_struct.cpp:60:24: style: The function 'lcdWrite' is never used. [unusedFunction]
void P012_data_struct::lcdWrite(const String& text, uint8_t col, uint8_t row) {
                       ^
src\src\PluginStructs\P012_data_struct.cpp:112:26: style: The function 'P012_parseTemplate' is never used. [unusedFunction]
String P012_data_struct::P012_parseTemplate(String& tmpString, uint8_t lineSize) {
                         ^
src\src\PluginStructs\P014_data_struct.cpp:81:24: style: The function 'update' is never used. [unusedFunction]
bool P014_data_struct::update(uint8_t i2caddr, uint8_t resolution, uint8_t filter_power) {
                       ^
src\src\PluginStructs\P014_data_struct.cpp:333:26: style: The function 'readRevision' is never used. [unusedFunction]
int8_t P014_data_struct::readRevision(uint8_t i2caddr) {
                         ^
src\src\PluginStructs\P015_data_struct.cpp:29:24: style: The function 'performRead' is never used. [unusedFunction]
bool P015_data_struct::performRead(float& luxVal,
                       ^
src\src\PluginStructs\P015_data_struct.cpp:162:24: style: The function 'writeUInt' is never used. [unusedFunction]
bool P015_data_struct::writeUInt(unsigned char address, unsigned int value)
                       ^
src\src\PluginStructs\P015_data_struct.cpp:265:24: style: The function 'setPowerDown' is never used. [unusedFunction]
bool P015_data_struct::setPowerDown(void)
                       ^
src\src\PluginStructs\P020_data_struct.cpp:61:17: style: The function 'startServer' is never used. [unusedFunction]
void P020_Task::startServer(uint16_t portnumber) {
                ^
src\src\PluginStructs\P020_data_struct.cpp:93:17: style: The function 'checkServer' is never used. [unusedFunction]
void P020_Task::checkServer() {
                ^
src\src\PluginStructs\P020_data_struct.cpp:140:17: style: The function 'hasClientConnected' is never used. [unusedFunction]
bool P020_Task::hasClientConnected() {
                ^
src\src\PluginStructs\P020_data_struct.cpp:180:17: style: The function 'discardClientIn' is never used. [unusedFunction]
void P020_Task::discardClientIn() {
                ^
src\src\PluginStructs\P020_data_struct.cpp:196:17: style: The function 'serialBegin' is never used. [unusedFunction]
void P020_Task::serialBegin(const ESPEasySerialPort port, int16_t rxPin, int16_t txPin, unsigned long baud, uint8_t config) {
                ^
src\src\PluginStructs\P020_data_struct.cpp:226:17: style: The function 'handleClientIn' is never used. [unusedFunction]
void P020_Task::handleClientIn(struct EventStruct *event) {
                ^
src\src\PluginStructs\P020_data_struct.cpp:293:17: style: The function 'handleSerialIn' is never used. [unusedFunction]
void P020_Task::handleSerialIn(struct EventStruct *event) {
                ^
src\src\PluginStructs\P020_data_struct.cpp:413:17: style: The function 'serialTime' is never used. [unusedFunction]
void P020_Task::serialTime() {
                ^
src\src\PluginStructs\P020_data_struct.cpp:438:17: style: The function 'discardSerialIn' is never used. [unusedFunction]
void P020_Task::discardSerialIn() {
                ^
src\src\PluginStructs\P020_data_struct.cpp:547:17: style: The function 'isInit' is never used. [unusedFunction]
bool P020_Task::isInit() const {
                ^
src\src\PluginStructs\P020_data_struct.cpp:567:17: style: The function 'checkBlinkLED' is never used. [unusedFunction]
void P020_Task::checkBlinkLED() {
                ^
src\src\PluginStructs\P022_data_struct.cpp:29:24: style: The function 'p022_clear_init' is never used. [unusedFunction]
bool P022_data_struct::p022_clear_init(uint8_t address) {
                       ^
src\src\PluginStructs\P022_data_struct.cpp:51:24: style: The function 'Plugin_022_Off' is never used. [unusedFunction]
void P022_data_struct::Plugin_022_Off(int address, int pin)
                       ^
src\src\PluginStructs\P022_data_struct.cpp:56:24: style: The function 'Plugin_022_On' is never used. [unusedFunction]
void P022_data_struct::Plugin_022_On(int address, int pin)
                       ^
src\src\PluginStructs\P022_data_struct.cpp:124:24: style: The function 'initModeFreq' is never used. [unusedFunction]
void P022_data_struct::initModeFreq(int address, uint8_t mode2, uint16_t freq)
                       ^
src\src\PluginStructs\P026_data_struct.cpp:161:14: style: The function 'P026_get_valueVType' is never used. [unusedFunction]
Sensor_VType P026_get_valueVType(uint8_t type) {
             ^
src\src\PluginStructs\P026_data_struct.cpp:192:24: style: The function 'GetDeviceValueNames' is never used. [unusedFunction]
bool P026_data_struct::GetDeviceValueNames(struct EventStruct *event)
                       ^
src\src\PluginStructs\P026_data_struct.cpp:207:24: style: The function 'WebformLoadOutputSelector' is never used. [unusedFunction]
bool P026_data_struct::WebformLoadOutputSelector(struct EventStruct *event)
                       ^
src\src\PluginStructs\P026_data_struct.cpp:226:24: style: The function 'WebformSave' is never used. [unusedFunction]
bool P026_data_struct::WebformSave(struct EventStruct *event)
                       ^
src\src\PluginStructs\P026_data_struct.cpp:256:24: style: The function 'Plugin_Read' is never used. [unusedFunction]
bool P026_data_struct::Plugin_Read(struct EventStruct *event)
                       ^
src\src\PluginStructs\P026_data_struct.cpp:286:24: style: The function 'Plugin_GetConfigValue' is never used. [unusedFunction]
bool P026_data_struct::Plugin_GetConfigValue(struct EventStruct *event, String& string)
                       ^
src\src\PluginStructs\P027_data_struct.cpp:58:24: style: The function 'setCalibration_32V_2A' is never used. [unusedFunction]
void P027_data_struct::setCalibration_32V_2A() {
                       ^
src\src\PluginStructs\P027_data_struct.cpp:77:24: style: The function 'setCalibration_32V_1A' is never used. [unusedFunction]
void P027_data_struct::setCalibration_32V_1A() {
                       ^
src\src\PluginStructs\P027_data_struct.cpp:96:24: style: The function 'setCalibration_16V_400mA' is never used. [unusedFunction]
void P027_data_struct::setCalibration_16V_400mA() {
                       ^
src\src\PluginStructs\P027_data_struct.cpp:115:24: style: The function 'setCalibration_26V_8A' is never used. [unusedFunction]
void P027_data_struct::setCalibration_26V_8A() {
                       ^
src\src\PluginStructs\P027_data_struct.cpp:146:24: style: The function 'setActiveMode' is never used. [unusedFunction]
void P027_data_struct::setActiveMode() {
                       ^
src\src\PluginStructs\P027_data_struct.cpp:192:25: style: The function 'getShuntVoltage_mV' is never used. [unusedFunction]
float P027_data_struct::getShuntVoltage_mV() {
                        ^
src\src\PluginStructs\P027_data_struct.cpp:199:25: style: The function 'getBusVoltage_V' is never used. [unusedFunction]
float P027_data_struct::getBusVoltage_V() {
                        ^
src\src\PluginStructs\P027_data_struct.cpp:205:25: style: The function 'getCurrent_mA' is never used. [unusedFunction]
float P027_data_struct::getCurrent_mA() {
                        ^
src\src\PluginStructs\P028_data_struct.cpp:56:24: style: The function 'startMeasurement' is never used. [unusedFunction]
void P028_data_struct::startMeasurement() {
                       ^
src\src\PluginStructs\P028_data_struct.cpp:84:24: style: The function 'updateMeasurements' is never used. [unusedFunction]
bool P028_data_struct::updateMeasurements(taskIndex_t task_index) {
                       ^
src\src\PluginStructs\P031_data_struct.h:44:8: style: The function 'measurementReady' is never used. [unusedFunction]
  bool measurementReady() const {
       ^
src\src\PluginStructs\P031_data_struct.h:48:8: style: The function 'hasError' is never used. [unusedFunction]
  bool hasError() const {
       ^
src\src\PluginStructs\P032_data_struct.cpp:40:24: style: The function 'read_prom' is never used. [unusedFunction]
void P032_data_struct::read_prom() {
                       ^
src\src\PluginStructs\P032_data_struct.cpp:78:24: style: The function 'readout' is never used. [unusedFunction]
void P032_data_struct::readout() {
                       ^
src\src\PluginStructs\P037_data_struct.cpp:32:24: style: The function 'loadSettings' is never used. [unusedFunction]
bool P037_data_struct::loadSettings() {
                       ^
src\src\PluginStructs\P037_data_struct.cpp:105:24: style: The function 'shouldSubscribeToMQTTtopic' is never used. [unusedFunction]
bool P037_data_struct::shouldSubscribeToMQTTtopic(const String& topic) const {
                       ^
src\src\PluginStructs\P037_data_struct.cpp:175:24: style: The function 'webform_load' is never used. [unusedFunction]
bool P037_data_struct::webform_load(
                       ^
src\src\PluginStructs\P037_data_struct.cpp:492:24: style: The function 'webform_save' is never used. [unusedFunction]
bool P037_data_struct::webform_save(
                       ^
src\src\PluginStructs\P037_data_struct.cpp:657:26: style: The function 'mapValue' is never used. [unusedFunction]
String P037_data_struct::mapValue(const String& input, const String& attribute) {
                         ^
src\src\PluginStructs\P037_data_struct.cpp:736:26: style: The function 'getFilterAsTopic' is never used. [unusedFunction]
String P037_data_struct::getFilterAsTopic(uint8_t topicId) {
                         ^
src\src\PluginStructs\P037_data_struct.cpp:788:24: style: The function 'checkFilters' is never used. [unusedFunction]
bool P037_data_struct::checkFilters(const String& key, const String& value, int8_t topicId) {
                       ^
src\src\PluginStructs\P037_data_struct.cpp:961:24: style: The function 'parseJSONMessage' is never used. [unusedFunction]
bool P037_data_struct::parseJSONMessage(const String& message) {
                       ^
src\src\PluginStructs\P049_data_struct.cpp:159:24: style: The function 'setABCmode' is never used. [unusedFunction]
void P049_data_struct::setABCmode(int abcDisableSetting) {
                       ^
src\src\PluginStructs\P049_data_struct.cpp:199:24: style: The function 'read_ppm' is never used. [unusedFunction]
bool P049_data_struct::read_ppm(unsigned int& ppm, signed int& temp, unsigned int& s, float& u) {
                       ^
src\src\PluginStructs\P049_data_struct.cpp:260:24: style: The function 'receivedCommandAcknowledgement' is never used. [unusedFunction]
bool P049_data_struct::receivedCommandAcknowledgement(bool& expectReset) {
                       ^
src\src\PluginStructs\P049_data_struct.cpp:284:26: style: The function 'getBufferHexDump' is never used. [unusedFunction]
String P049_data_struct::getBufferHexDump() const {
                         ^
src\src\PluginStructs\P049_data_struct.cpp:303:6: style: The function 'Plugin_049_Check_and_ApplyFilter' is never used. [unusedFunction]
bool Plugin_049_Check_and_ApplyFilter(unsigned int prevVal, unsigned int& newVal, uint32_t s, const int filterValue, String& log) {
     ^
src\src\PluginStructs\P049_data_struct.cpp:356:6: style: The function 'P049_html_show_stats' is never used. [unusedFunction]
void P049_html_show_stats(struct EventStruct *event) {
     ^
src\src\PluginStructs\P049_data_struct.cpp:380:6: style: The function 'P049_perform_init' is never used. [unusedFunction]
bool P049_perform_init(struct EventStruct *event) {
     ^
src\src\PluginStructs\P053_data_struct.cpp:214:24: style: The function 'packetAvailable' is never used. [unusedFunction]
bool P053_data_struct::packetAvailable()
                       ^
src\src\PluginStructs\P053_data_struct.cpp:299:24: style: The function 'processData' is never used. [unusedFunction]
bool P053_data_struct::processData(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:446:24: style: The function 'checkAndClearValuesReceived' is never used. [unusedFunction]
bool P053_data_struct::checkAndClearValuesReceived(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:591:24: style: The function 'sleepSensor' is never used. [unusedFunction]
bool P053_data_struct::sleepSensor() {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:632:24: style: The function 'setPassiveReadingMode' is never used. [unusedFunction]
void P053_data_struct::setPassiveReadingMode() {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:646:24: style: The function 'requestData' is never used. [unusedFunction]
void P053_data_struct::requestData() {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:732:24: style: The function 'clearPacket' is never used. [unusedFunction]
void P053_data_struct::clearPacket() {
                       ^
src\src\PluginStructs\P053_data_struct.cpp:760:24: style: The function 'setTaskValueNames' is never used. [unusedFunction]
void P053_data_struct::setTaskValueNames(ExtraTaskSettingsStruct& settings, const uint8_t indices[], uint8_t nrElements,
                       ^
src\src\PluginStructs\P079_data_struct.cpp:77:18: style: The function 'setmotor' is never used. [unusedFunction]
void WemosMotor::setmotor(uint8_t dir, float pwm_val)
                 ^
src\src\PluginStructs\P079_data_struct.cpp:124:32: style: The function 'changeStatus' is never used. [unusedFunction]
unsigned char LOLIN_I2C_MOTOR::changeStatus(unsigned char ch, unsigned char sta)
                               ^
src\src\PluginStructs\P079_data_struct.cpp:144:32: style: The function 'changeFreq' is never used. [unusedFunction]
unsigned char LOLIN_I2C_MOTOR::changeFreq(unsigned char ch, uint32_t freq)
                               ^
src\src\PluginStructs\P079_data_struct.cpp:167:32: style: The function 'changeDuty' is never used. [unusedFunction]
unsigned char LOLIN_I2C_MOTOR::changeDuty(unsigned char ch, float duty)
                               ^
src\src\PluginStructs\P079_data_struct.cpp:198:32: style: The function 'changeAddress' is never used. [unusedFunction]
unsigned char LOLIN_I2C_MOTOR::changeAddress(unsigned char address)
                               ^
src\src\PluginStructs\P079_data_struct.cpp:210:32: style: The function 'getInfo' is never used. [unusedFunction]
unsigned char LOLIN_I2C_MOTOR::getInfo(void)
                               ^
src\src\PluginStructs\P090_data_struct.cpp:243:28: style: The function 'readAlgorithmResults' is never used. [unusedFunction]
CCS811Core::status CCS811::readAlgorithmResults(void)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:271:14: style: The function 'dataAvailable' is never used. [unusedFunction]
bool CCS811::dataAvailable(void)
             ^
src\src\PluginStructs\P090_data_struct.cpp:323:18: style: The function 'getBaseline' is never used. [unusedFunction]
uint16_t CCS811::getBaseline(void)
                 ^
src\src\PluginStructs\P090_data_struct.cpp:328:28: style: The function 'setBaseline' is never used. [unusedFunction]
CCS811Core::status CCS811::setBaseline(uint16_t input)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:337:28: style: The function 'enableInterrupts' is never used. [unusedFunction]
CCS811Core::status CCS811::enableInterrupts(void)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:356:28: style: The function 'disableInterrupts' is never used. [unusedFunction]
CCS811Core::status CCS811::disableInterrupts(void)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:377:28: style: The function 'setDriveMode' is never used. [unusedFunction]
CCS811Core::status CCS811::setDriveMode(uint8_t mode)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:400:28: style: The function 'setEnvironmentalData' is never used. [unusedFunction]
CCS811Core::status CCS811::setEnvironmentalData(float relativeHumidity, float temperature)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:451:14: style: The function 'setRefResistance' is never used. [unusedFunction]
void CCS811::setRefResistance(float input)
             ^
src\src\PluginStructs\P090_data_struct.cpp:456:28: style: The function 'readNTC' is never used. [unusedFunction]
CCS811Core::status CCS811::readNTC(void)
                           ^
src\src\PluginStructs\P090_data_struct.cpp:486:18: style: The function 'getTVOC' is never used. [unusedFunction]
uint16_t CCS811::getTVOC(void)
                 ^
src\src\PluginStructs\P090_data_struct.cpp:491:18: style: The function 'getCO2' is never used. [unusedFunction]
uint16_t CCS811::getCO2(void)
                 ^
src\src\PluginStructs\P090_data_struct.cpp:496:15: style: The function 'getResistance' is never used. [unusedFunction]
float CCS811::getResistance(void)
              ^
src\src\PluginStructs\P090_data_struct.cpp:501:15: style: The function 'getTemperature' is never used. [unusedFunction]
float CCS811::getTemperature(void)
              ^
src\src\PluginStructs\P090_data_struct.cpp:511:37: style: The function 'getDriverError' is never used. [unusedFunction]
const __FlashStringHelper * CCS811::getDriverError(CCS811Core::status errorCode)
                                    ^
src\src\PluginStructs\P090_data_struct.cpp:537:37: style: The function 'getSensorError' is never used. [unusedFunction]
const __FlashStringHelper * CCS811::getSensorError()
                                    ^
src\src\PluginStructs\P095_data_struct.cpp:75:28: style: The function 'P095_CommandTrigger_toString' is never used. [unusedFunction]
const __FlashStringHelper* P095_CommandTrigger_toString(const P095_CommandTrigger& cmd) {
                           ^
src\src\PluginStructs\P095_data_struct.cpp:314:24: style: The function 'plugin_exit' is never used. [unusedFunction]
bool P095_data_struct::plugin_exit(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P095_data_struct.cpp:379:24: style: The function 'plugin_ten_per_second' is never used. [unusedFunction]
bool P095_data_struct::plugin_ten_per_second(struct EventStruct *event) {
                       ^
src\src\PluginStructs\P095_data_struct.cpp:592:24: style: The function 'registerButtonState' is never used. [unusedFunction]
void P095_data_struct::registerButtonState(const uint8_t& newButtonState,
                       ^
src\src\PluginStructs\P096_data_struct.cpp:25:28: style: The function 'P096_CommandTrigger_toString' is never used. [unusedFunction]
const __FlashStringHelper* P096_CommandTrigger_toString(P096_CommandTrigger cmd) {
                           ^
src\src\PluginStructs\P116_data_struct.cpp:97:28: style: The function 'P116_CommandTrigger_toString' is never used. [unusedFunction]
const __FlashStringHelper* P116_CommandTrigger_toString(const P116_CommandTrigger& cmd) {
                           ^
src\src\PluginStructs\P131_data_struct.cpp:9:28: style: The function 'P131_CommandTrigger_toString' is never used. [unusedFunction]
const __FlashStringHelper* P131_CommandTrigger_toString(P131_CommandTrigger cmd) {
                           ^
src\src\PluginStructs\P143_data_struct.cpp:52:6: style: The function 'P143_CheckEncoderDefaultSettings' is never used. [unusedFunction]
void P143_CheckEncoderDefaultSettings(struct EventStruct *event) {
     ^
src\src\WebServer\404.cpp:16:6: style: The function 'handleNotFound' is never used. [unusedFunction]
void handleNotFound() {
     ^
src\src\WebServer\AccessControl.cpp:79:6: style: The function 'clientIPinSubnet' is never used. [unusedFunction]
bool clientIPinSubnet() {
     ^
src\src\WebServer\AdvancedConfigPage.cpp:34:6: style: The function 'handle_advanced' is never used. [unusedFunction]
void handle_advanced() {
     ^
src\src\WebServer\ConfigPage.cpp:34:6: style: The function 'handle_config' is never used. [unusedFunction]
void handle_config() {
     ^
src\src\WebServer\ControlPage.cpp:17:6: style: The function 'handle_control' is never used. [unusedFunction]
void handle_control() {
     ^
src\src\WebServer\ControllerPage.cpp:37:6: style: The function 'handle_controllers' is never used. [unusedFunction]
void handle_controllers() {
     ^
src\src\WebServer\CustomPage.cpp:25:6: style: The function 'handle_custom' is never used. [unusedFunction]
bool handle_custom(const String& path) {
     ^
src\src\WebServer\DownloadPage.cpp:19:6: style: The function 'handle_download' is never used. [unusedFunction]
void handle_download() {
     ^
src\src\WebServer\DownloadPage.cpp:24:6: style: The function 'handle_full_backup' is never used. [unusedFunction]
void handle_full_backup() {
     ^
src\src\WebServer\DownloadPage.cpp:28:6: style: The function 'handle_full_backup_no_usr_pwd' is never used. [unusedFunction]
void handle_full_backup_no_usr_pwd() {
     ^
src\src\WebServer\FactoryResetPage.cpp:24:6: style: The function 'handle_factoryreset' is never used. [unusedFunction]
void handle_factoryreset() {
     ^
src\src\WebServer\FileList.cpp:141:6: style: The function 'handle_filelist' is never used. [unusedFunction]
void handle_filelist() {
     ^
src\src\WebServer\HardwarePage.cpp:31:6: style: The function 'handle_hardware' is never used. [unusedFunction]
void handle_hardware() {
     ^
src\src\WebServer\I2C_Scanner.cpp:489:6: style: The function 'handle_i2cscanner' is never used. [unusedFunction]
void handle_i2cscanner() {
     ^
src\src\WebServer\Markup.cpp:307:6: style: The function 'addSelector_OptGroup' is never used. [unusedFunction]
void addSelector_OptGroup(const String& label) {
     ^
src\src\WebServer\Markup.cpp:313:6: style: The function 'addSelector_OptGroupFoot' is never used. [unusedFunction]
void addSelector_OptGroupFoot() {
     ^
src\src\WebServer\Markup.cpp:590:6: style: The function 'addRowLabelValues' is never used. [unusedFunction]
void addRowLabelValues(const LabelType::Enum labels[]) {
     ^
src\src\WebServer\Markup.cpp:605:6: style: The function 'addRowLabelValue_copy' is never used. [unusedFunction]
void addRowLabelValue_copy(LabelType::Enum label) {
     ^
src\src\WebServer\Markup.cpp:988:6: style: The function 'addRTDPluginButton' is never used. [unusedFunction]
void addRTDPluginButton(pluginID_t pluginID) {
     ^
src\src\WebServer\Markup_Forms.cpp:62:6: style: The function 'addFormCheckBox_disabled' is never used. [unusedFunction]
void addFormCheckBox_disabled(const String& label, const String& id, bool checked
     ^
src\src\WebServer\Markup_Forms.cpp:306:6: style: The function 'addFormTextArea' is never used. [unusedFunction]
void addFormTextArea(const String  & label,
     ^
src\src\WebServer\Markup_Forms.cpp:396:6: style: The function 'addFormMACBox' is never used. [unusedFunction]
void addFormMACBox(const String& label, const String& id, const MAC_address mac)
     ^
src\src\WebServer\Markup_Forms.cpp:416:6: style: The function 'addFormSeparatorCharInput' is never used. [unusedFunction]
void addFormSeparatorCharInput(const __FlashStringHelper *rowLabel,
     ^
src\src\WebServer\Markup_Forms.cpp:753:6: style: The function 'addFormSelector_binarySensorDeviceClass' is never used. [unusedFunction]
void addFormSelector_binarySensorDeviceClass(const __FlashStringHelper*label,
     ^
src\src\WebServer\NotificationPage.cpp:37:6: style: The function 'handle_notifications' is never used. [unusedFunction]
void handle_notifications() {
     ^
src\src\WebServer\PinStates.cpp:74:6: style: The function 'handle_pinstates' is never used. [unusedFunction]
void handle_pinstates() {
     ^
src\src\WebServer\RootPage.cpp:61:6: style: The function 'handle_root' is never used. [unusedFunction]
void handle_root() {
     ^
src\src\WebServer\SettingsArchive.cpp:23:6: style: The function 'handle_settingsarchive' is never used. [unusedFunction]
void handle_settingsarchive() {
     ^
src\src\WebServer\SetupPage.cpp:44:6: style: The function 'handle_setup' is never used. [unusedFunction]
void handle_setup() {
     ^
src\src\WebServer\SysVarPage.cpp:35:6: style: The function 'handle_sysvars' is never used. [unusedFunction]
void handle_sysvars() {
     ^
src\src\WebServer\TimingStats.cpp:22:6: style: The function 'handle_timingstats' is never used. [unusedFunction]
void handle_timingstats() {
     ^
src\src\WebServer\ToolsPage.cpp:21:6: style: The function 'handle_tools' is never used. [unusedFunction]
void handle_tools() {
     ^
src\src\WebServer\UploadPage.cpp:28:6: style: The function 'handle_upload' is never used. [unusedFunction]
void handle_upload() {
     ^
src\src\WebServer\UploadPage.cpp:45:6: style: The function 'handle_upload_post' is never used. [unusedFunction]
void handle_upload_post() {
     ^
src\src\WebServer\UploadPage.cpp:120:6: style: The function 'handleFileUpload' is never used. [unusedFunction]
void handleFileUpload() {
     ^
src\src\WebServer\WebTemplateParser.h:36:8: style: The function 'isTail' is never used. [unusedFunction]
  bool isTail() const { return Tail; }
       ^
src\src\WebServer\WiFiScanner.cpp:61:6: style: The function 'handle_wifiscanner' is never used. [unusedFunction]
void handle_wifiscanner() {
     ^
src\usb\usb_hid_rfid.cpp:33:6: style: The function 'captureAPIResponse' is never used. [unusedFunction]
void captureAPIResponse(const String& response) {
     ^
src\usb\usb_hid_rfid.cpp:387:6: style: The function 'initUSBHIDRFID' is never used. [unusedFunction]
void initUSBHIDRFID() {
     ^
src\usb\usb_hid_rfid.cpp:411:6: style: The function 'cleanupUSBHIDRFID' is never used. [unusedFunction]
void cleanupUSBHIDRFID() {
     ^
src\usb\usb_hid_rfid.cpp:1029:6: style: The function 'handleUSBHIDRFIDLoop' is never used. [unusedFunction]
void handleUSBHIDRFIDLoop() {
     ^
nofile:0:0: information: Active checkers: There was critical errors (use --checkers-report=<filename> to see details) [checkersReport]

